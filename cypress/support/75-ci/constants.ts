import { addHashInCypressURLBasedOnBrowserRouter } from '../../utils/windowLocation'

export const accountIdentifier = 'accountId'
export const orgIdentifier = 'default'
export const projectIdentifier = 'project1'
export const module1 = 'ci'
export const pipelineIdentifier = 'testPipeline_Cypress'
export const pipelineStudioRoute = `${addHashInCypressURLBasedOnBrowserRouter()}/account/${accountIdentifier}/ci/orgs/default/projects/${projectIdentifier}/pipelines/${pipelineIdentifier}/pipeline-studio/?stageId=j&sectionId=SERVICE`
export const echoStepInputSetTemplateYaml =
  'pipeline:\n  identifier: "testPipeline_Cypress"\n  stages:\n  - stage:\n      identifier: "CI_Stage1"\n      type: "CI"\n      spec:\n        execution:\n          steps:\n          - step:\n              identifier: "echo"\n              type: "Run"\n              spec:\n                connectorRef: "<+input>"\n                image: "<+input>"\n        infrastructure:\n          type: "KubernetesDirect"\n          spec:\n            connectorRef: "<+input>"\n            namespace: "<+input>"\n            os: "<+input>"\n'
export const echoStepPipelineYaml =
  'pipeline:\n  name: testPipeline_Cypress\n  identifier: testPipeline_Cypress\n  projectIdentifier: project1\n  orgIdentifier: default\n  tags: {}\n  stages:\n    - stage:\n        name: CI_Stage1\n        identifier: CI_Stage1\n        description: ""\n        type: CI\n        spec:\n          cloneCodebase: false\n          execution:\n            steps:\n              - step:\n                  type: Run\n                  name: echo\n                  identifier: echo\n                  spec:\n                    connectorRef: <+input>\n                    image: <+input>\n                    shell: Sh\n                    command: echo node --version\n                  description: echo step\n          infrastructure:\n            type: KubernetesDirect\n            spec:\n              connectorRef: <+input>\n              namespace: <+input>\n              automountServiceAccountToken: true\n              nodeSelector: {}\n              os: <+input>\n'
export const echoStepResolvedTemplatesPipelineYaml =
  'pipeline:\n  name: testPipeline_Cypress\n  identifier: testPipeline_Cypress\n  projectIdentifier: shauryaTest\n  orgIdentifier: default\n  tags: {}\n  stages:\n    - stage:\n        name: CI_Stage1\n        identifier: CI_Stage1\n        description: ""\n        type: CI\n        spec:\n          cloneCodebase: false\n          execution:\n            steps:\n              - step:\n                  type: Run\n                  name: echo\n                  identifier: echo\n                  spec:\n                    connectorRef: <+input>\n                    image: <+input>\n                    shell: Sh\n                    command: echo node --version\n                  description: echo step\n          infrastructure:\n            type: KubernetesDirect\n            spec:\n              connectorRef: <+input>\n              namespace: <+input>\n              automountServiceAccountToken: true\n              nodeSelector: {}\n              os: <+input>\n'
export const GHAPluginInputSetPipelineYaml =
  'pipeline:\n  identifier: "testPipeline_Cypress"\n  stages:\n  - stage:\n      identifier: "CI_Stage1"\n      type: "CI"\n      spec:\n        execution:\n          steps:\n          - step:\n              identifier: "github_action_plugin"\n              type: "Action"\n              spec:\n                uses: "<+input>"\n                with: "<+input>"\n                env: "<+input>"\n'
export const GHAPluginStepResolvedTemplatesPipelineYaml =
  'pipeline:\n  name: testPipeline_Cypress\n  identifier: testPipeline_Cypress\n  projectIdentifier: default\n  orgIdentifier: default\n  tags: {}\n  stages:\n    - stage:\n        name: CI_Stage1\n        identifier: CI_Stage1\n        description: ""\n        type: CI\n        spec:\n          cloneCodebase: false\n          platform:\n            os: Linux\n            arch: Amd64\n          runtime:\n            type: Cloud\n            spec: {}\n          execution:\n            steps:\n              - step:\n                  type: Action\n                  name: github action plugin\n                  identifier: github_action_plugin\n                  spec:\n                    uses: <+input>\n                    with: <+input>\n                    env: <+input>\n'
export const GHAPluginStepPipelineYaml =
  'pipeline:\n  name: testPipeline_Cypress\n  identifier: testPipeline_Cypress\n  projectIdentifier: default\n  orgIdentifier: default\n  tags: {}\n  stages:\n    - stage:\n        name: CI_Stage1\n        identifier: CI_Stage1\n        description: ""\n        type: CI\n        spec:\n          cloneCodebase: false\n          platform:\n            os: Linux\n            arch: Amd64\n          runtime:\n            type: Cloud\n            spec: {}\n          execution:\n            steps:\n              - step:\n                  type: Action\n                  name: github action plugin\n                  identifier: github_action_plugin\n                  spec:\n                    uses: <+input>\n                    with: <+input>\n                    env: <+input>\n'
export const BitrisePluginStepInputSetTemplateYaml =
  'pipeline:\n  identifier: "testPipeline_Cypress"\n  stages:\n  - stage:\n      identifier: "CI_Stage1"\n      type: "CI"\n      spec:\n        execution:\n          steps:\n          - step:\n              identifier: "Bitrise_Plugin"\n              type: "Bitrise"\n              spec:\n                uses: "<+input>"\n                with: "<+input>"\n                env: "<+input>"\n'
export const BitrisePluginStepPipelineYaml =
  'pipeline:\n  name: testPipeline_Cypress\n  identifier: testPipeline_Cypress\n  projectIdentifier: default\n  orgIdentifier: default\n  tags: {}\n  stages:\n    - stage:\n        name: CI_Stage1\n        identifier: CI_Stage1\n        description: ""\n        type: CI\n        spec:\n          cloneCodebase: false\n          platform:\n            os: Linux\n            arch: Amd64\n          runtime:\n            type: Cloud\n            spec: {}\n          execution:\n            steps:\n              - step:\n                  type: Bitrise\n                  name: Bitrise Plugin\n                  identifier: Bitrise_Plugin\n                  spec:\n                    uses: <+input>\n                    with: <+input>\n                    env: <+input>\n'
export const BitrisePluginStepResolvedTemplatesPipelineYaml =
  'pipeline:\n  name: testPipeline_Cypress\n  identifier: testPipeline_Cypress\n  projectIdentifier: default\n  orgIdentifier: default\n  tags: {}\n  stages:\n    - stage:\n        name: CI_Stage1\n        identifier: CI_Stage1\n        description: ""\n        type: CI\n        spec:\n          cloneCodebase: false\n          platform:\n            os: Linux\n            arch: Amd64\n          runtime:\n            type: Cloud\n            spec: {}\n          execution:\n            steps:\n              - step:\n                  type: Bitrise\n                  name: Bitrise Plugin\n                  identifier: Bitrise_Plugin\n                  spec:\n                    uses: <+input>\n                    with: <+input>\n                    env: <+input>\n'
