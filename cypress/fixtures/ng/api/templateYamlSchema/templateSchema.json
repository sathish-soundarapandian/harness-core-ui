{
  "status": "SUCCESS",
  "data": {
    "type": "object",
    "properties": {
      "template": {
        "$ref": "#/definitions/NGTemplateInfoConfig"
      }
    },
    "$schema": "http://json-schema.org/draft-07/schema#",
    "definitions": {
      "JsonNode": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "NGTemplateConfig": {
        "type": "object",
        "properties": {
          "template": {
            "$ref": "#/definitions/NGTemplateInfoConfig"
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "NGTemplateInfoConfig": {
        "type": "object",
        "required": ["identifier", "name", "type", "versionLabel", "orgIdentifier", "projectIdentifier"],
        "properties": {
          "description": {
            "type": "string"
          },
          "identifier": {
            "type": "string",
            "pattern": "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          },
          "name": {
            "type": "string",
            "pattern": "^[a-zA-Z_][-0-9a-zA-Z_\\s]{0,63}$"
          },
          "orgIdentifier": {
            "type": "string",
            "const": "default"
          },
          "projectIdentifier": {
            "type": "string",
            "const": "project1"
          },
          "spec": {
            "$ref": "#/definitions/specNode"
          },
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "type": {
            "type": "string",
            "enum": ["Step", "Stage", "Pipeline", "CustomDeployment", "MonitoredService", "SecretManager"]
          },
          "variables": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/definitions/NumberNGVariable"
                },
                {
                  "$ref": "#/definitions/SecretNGVariable"
                },
                {
                  "$ref": "#/definitions/StringNGVariable"
                }
              ]
            }
          },
          "versionLabel": {
            "type": "string",
            "pattern": "^[0-9a-zA-Z][^\\s]{0,63}$"
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "NGVariable": {
        "type": "object",
        "discriminator": "type",
        "properties": {
          "description": {
            "type": "string"
          },
          "metadata": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "required": {
            "type": "boolean"
          },
          "type": {
            "type": "string",
            "enum": ["String", "Number", "Secret"]
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "NumberNGVariable": {
        "allOf": [
          {
            "$ref": "#/definitions/NGVariable"
          },
          {
            "type": "object",
            "required": ["value"],
            "properties": {
              "default": {
                "type": "number",
                "format": "double"
              },
              "name": {
                "type": "string",
                "pattern": "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
              },
              "type": {
                "type": "string",
                "enum": ["Number"]
              },
              "value": {
                "oneOf": [
                  {
                    "type": "number",
                    "format": "double"
                  },
                  {
                    "type": "string",
                    "pattern": "(^[+-]?[0-9]+\\.?[0-9]*$|(^<\\+([a-zA-Z]\\w*\\.?)*([a-zA-Z]\\w*)>$|^<\\+input>.*))"
                  }
                ]
              }
            }
          }
        ],
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "SecretNGVariable": {
        "allOf": [
          {
            "$ref": "#/definitions/NGVariable"
          },
          {
            "type": "object",
            "required": ["value"],
            "properties": {
              "default": {
                "type": "string"
              },
              "name": {
                "type": "string",
                "pattern": "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
              },
              "type": {
                "type": "string",
                "enum": ["Secret"]
              },
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "StringNGVariable": {
        "allOf": [
          {
            "$ref": "#/definitions/NGVariable"
          },
          {
            "type": "object",
            "required": ["value"],
            "properties": {
              "default": {
                "type": "string"
              },
              "name": {
                "type": "string",
                "pattern": "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
              },
              "type": {
                "type": "string",
                "enum": ["String"]
              },
              "value": {
                "type": "string"
              }
            }
          }
        ],
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "specNode": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "required": ["spec", "type"],
        "properties": {
          "failureStrategies": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/FailureStrategyConfig"
            }
          },
          "strategy": {
            "$ref": "#/definitions/StrategyConfig"
          },
          "timeout": {
            "type": "string",
            "pattern": "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+input>.*)|(.*<\\+.*>.*)|(^$))$"
          },
          "type": {
            "type": "string",
            "enum": ["ShellScript"]
          },
          "when": {
            "$ref": "#/definitions/StepWhenCondition"
          }
        },
        "allOf": [
          {
            "if": {
              "properties": {
                "type": {
                  "const": "ShellScript"
                }
              }
            },
            "then": {
              "properties": {
                "spec": {
                  "$ref": "#/definitions/ShellScriptStepInfo"
                }
              }
            }
          }
        ]
      },
      "AbortFailureActionConfig": {
        "allOf": [
          {
            "$ref": "#/definitions/FailureStrategyActionConfig"
          },
          {
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["Abort"]
              }
            }
          }
        ],
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "ExcludeConfig": {
        "type": "object",
        "properties": {
          "exclude": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "ExecutionTarget": {
        "type": "object",
        "properties": {
          "connectorRef": {
            "type": "string"
          },
          "host": {
            "type": "string"
          },
          "workingDirectory": {
            "type": "string"
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "FailureStrategyActionConfig": {
        "type": "object",
        "required": ["type"],
        "discriminator": "type",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "Ignore",
              "Retry",
              "MarkAsSuccess",
              "Abort",
              "StageRollback",
              "StepGroupRollback",
              "ManualIntervention",
              "ProceedWithDefaultValue"
            ]
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "FailureStrategyConfig": {
        "type": "object",
        "required": ["onFailure"],
        "properties": {
          "onFailure": {
            "$ref": "#/definitions/OnFailureConfig"
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "HarnessFileStoreSource": {
        "allOf": [
          {
            "$ref": "#/definitions/ShellScriptBaseSource"
          },
          {
            "type": "object",
            "properties": {
              "file": {
                "type": "string"
              }
            }
          }
        ],
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "HarnessForConfig": {
        "type": "object",
        "properties": {
          "end": {
            "oneOf": [
              {
                "type": "integer",
                "format": "int32",
                "minimum": 0
              },
              {
                "type": "string",
                "pattern": "(^<\\+([a-zA-Z]\\w*\\.?)*([a-zA-Z]\\w*)>$|^<\\+input>.*)",
                "minLength": 1
              }
            ]
          },
          "items": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "string",
                "pattern": "(^<\\+([a-zA-Z]\\w*\\.?)*([a-zA-Z]\\w*)>$|^<\\+input>.*)",
                "minLength": 1
              }
            ]
          },
          "maxConcurrency": {
            "oneOf": [
              {
                "type": "integer",
                "format": "int32",
                "minimum": 0
              },
              {
                "type": "string",
                "pattern": "(^<\\+([a-zA-Z]\\w*\\.?)*([a-zA-Z]\\w*)>$|^<\\+input>.*)",
                "minLength": 1
              }
            ]
          },
          "partitionSize": {
            "oneOf": [
              {
                "type": "integer",
                "format": "int32",
                "minimum": 0
              },
              {
                "type": "string",
                "pattern": "(^<\\+([a-zA-Z]\\w*\\.?)*([a-zA-Z]\\w*)>$|^<\\+input>.*)",
                "minLength": 1
              }
            ]
          },
          "start": {
            "oneOf": [
              {
                "type": "integer",
                "format": "int32",
                "minimum": 0
              },
              {
                "type": "string",
                "pattern": "(^<\\+([a-zA-Z]\\w*\\.?)*([a-zA-Z]\\w*)>$|^<\\+input>.*)",
                "minLength": 1
              }
            ]
          },
          "times": {
            "oneOf": [
              {
                "type": "integer",
                "format": "int32",
                "minimum": 0
              },
              {
                "type": "string",
                "pattern": "(^<\\+([a-zA-Z]\\w*\\.?)*([a-zA-Z]\\w*)>$|^<\\+input>.*)",
                "minLength": 1
              }
            ]
          },
          "unit": {
            "type": "string",
            "enum": ["Percentage", "Count"]
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#",
        "allOf": [
          {
            "oneOf": [
              {
                "required": ["times"]
              },
              {
                "required": ["items"]
              }
            ]
          }
        ]
      },
      "IgnoreFailureActionConfig": {
        "allOf": [
          {
            "$ref": "#/definitions/FailureStrategyActionConfig"
          },
          {
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["Ignore"]
              }
            }
          }
        ],
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "InputSetValidator": {
        "type": "object",
        "properties": {
          "parameters": {
            "type": "string"
          },
          "validatorType": {
            "type": "string",
            "enum": ["ALLOWED_VALUES", "REGEX"]
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "ManualFailureSpecConfig": {
        "type": "object",
        "required": ["onTimeout", "timeout"],
        "properties": {
          "onTimeout": {
            "$ref": "#/definitions/OnTimeoutConfig"
          },
          "timeout": {
            "type": "string"
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "ManualInterventionFailureActionConfig": {
        "allOf": [
          {
            "$ref": "#/definitions/FailureStrategyActionConfig"
          },
          {
            "type": "object",
            "required": ["spec", "type"],
            "properties": {
              "spec": {
                "readOnly": true,
                "$ref": "#/definitions/ManualFailureSpecConfig"
              },
              "type": {
                "type": "string",
                "enum": ["ManualIntervention"]
              }
            }
          }
        ],
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "MarkAsSuccessFailureActionConfig": {
        "allOf": [
          {
            "$ref": "#/definitions/FailureStrategyActionConfig"
          },
          {
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["MarkAsSuccess"]
              }
            }
          }
        ],
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "MatrixConfig": {
        "allOf": [
          {
            "$ref": "#/definitions/MatrixConfigInterface"
          },
          {
            "type": "object",
            "properties": {
              "exclude": {
                "oneOf": [
                  {
                    "$ref": "#/definitions/ParameterFieldListExcludeConfig"
                  },
                  {
                    "type": "array"
                  },
                  {
                    "type": "string",
                    "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength": 1
                  }
                ]
              },
              "maxConcurrency": {
                "oneOf": [
                  {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                  },
                  {
                    "type": "string",
                    "pattern": "(^<\\+([a-zA-Z]\\w*\\.?)*([a-zA-Z]\\w*)>$|^<\\+input>.*)",
                    "minLength": 1
                  }
                ]
              }
            }
          }
        ],
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "MatrixConfigInterface": {
        "type": "object",
        "discriminator": "type",
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "OnFailureConfig": {
        "type": "object",
        "required": ["action", "errors"],
        "properties": {
          "action": {
            "oneOf": [
              {
                "$ref": "#/definitions/AbortFailureActionConfig"
              },
              {
                "$ref": "#/definitions/IgnoreFailureActionConfig"
              },
              {
                "$ref": "#/definitions/ManualInterventionFailureActionConfig"
              },
              {
                "$ref": "#/definitions/MarkAsSuccessFailureActionConfig"
              },
              {
                "$ref": "#/definitions/ProceedWithDefaultValuesFailureActionConfig"
              },
              {
                "$ref": "#/definitions/RetryFailureActionConfig"
              },
              {
                "$ref": "#/definitions/StageRollbackFailureActionConfig"
              },
              {
                "$ref": "#/definitions/StepGroupFailureActionConfig"
              }
            ]
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "Unknown",
                "AllErrors",
                "Authentication",
                "Connectivity",
                "Timeout",
                "Authorization",
                "Verification",
                "DelegateProvisioning",
                "PolicyEvaluationFailure",
                "ExecutionInputTimeoutError"
              ]
            }
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "OnRetryFailureConfig": {
        "type": "object",
        "properties": {
          "action": {
            "oneOf": [
              {
                "$ref": "#/definitions/AbortFailureActionConfig"
              },
              {
                "$ref": "#/definitions/IgnoreFailureActionConfig"
              },
              {
                "$ref": "#/definitions/ManualInterventionFailureActionConfig"
              },
              {
                "$ref": "#/definitions/MarkAsSuccessFailureActionConfig"
              },
              {
                "$ref": "#/definitions/ProceedWithDefaultValuesFailureActionConfig"
              },
              {
                "$ref": "#/definitions/RetryFailureActionConfig"
              },
              {
                "$ref": "#/definitions/StageRollbackFailureActionConfig"
              },
              {
                "$ref": "#/definitions/StepGroupFailureActionConfig"
              }
            ]
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "OnTimeoutConfig": {
        "type": "object",
        "properties": {
          "action": {
            "oneOf": [
              {
                "$ref": "#/definitions/AbortFailureActionConfig"
              },
              {
                "$ref": "#/definitions/IgnoreFailureActionConfig"
              },
              {
                "$ref": "#/definitions/ManualInterventionFailureActionConfig"
              },
              {
                "$ref": "#/definitions/MarkAsSuccessFailureActionConfig"
              },
              {
                "$ref": "#/definitions/ProceedWithDefaultValuesFailureActionConfig"
              },
              {
                "$ref": "#/definitions/RetryFailureActionConfig"
              },
              {
                "$ref": "#/definitions/StageRollbackFailureActionConfig"
              },
              {
                "$ref": "#/definitions/StepGroupFailureActionConfig"
              }
            ]
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "ParameterField": {
        "type": "object",
        "properties": {
          "defaultValue": {
            "type": "object"
          },
          "executionInput": {
            "type": "boolean"
          },
          "expression": {
            "type": "boolean"
          },
          "expressionValue": {
            "type": "string"
          },
          "inputSetValidator": {
            "$ref": "#/definitions/InputSetValidator"
          },
          "jsonResponseField": {
            "type": "boolean"
          },
          "responseField": {
            "type": "string"
          },
          "typeString": {
            "type": "boolean"
          },
          "value": {
            "type": "object"
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "ParameterFieldListExcludeConfig": {
        "type": "object",
        "properties": {
          "defaultValue": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ExcludeConfig"
            }
          },
          "executionInput": {
            "type": "boolean"
          },
          "expression": {
            "type": "boolean"
          },
          "expressionValue": {
            "type": "string"
          },
          "inputSetValidator": {
            "$ref": "#/definitions/InputSetValidator"
          },
          "jsonResponseField": {
            "type": "boolean"
          },
          "responseField": {
            "type": "string"
          },
          "typeString": {
            "type": "boolean"
          },
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ExcludeConfig"
            }
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "ProceedWithDefaultValuesFailureActionConfig": {
        "allOf": [
          {
            "$ref": "#/definitions/FailureStrategyActionConfig"
          },
          {
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["ProceedWithDefaultValue"]
              }
            }
          }
        ],
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "RetryFailureActionConfig": {
        "allOf": [
          {
            "$ref": "#/definitions/FailureStrategyActionConfig"
          },
          {
            "type": "object",
            "required": ["spec", "type"],
            "properties": {
              "spec": {
                "readOnly": true,
                "$ref": "#/definitions/RetryFailureSpecConfig"
              },
              "type": {
                "type": "string",
                "enum": ["Retry"]
              }
            }
          }
        ],
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "RetryFailureSpecConfig": {
        "type": "object",
        "required": ["onRetryFailure", "retryCount", "retryIntervals"],
        "properties": {
          "onRetryFailure": {
            "$ref": "#/definitions/OnRetryFailureConfig"
          },
          "retryCount": {
            "type": "integer",
            "format": "int32"
          },
          "retryIntervals": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 2147483647,
            "minItems": 1
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "ShellScriptBaseSource": {
        "type": "object",
        "discriminator": "type",
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "ShellScriptInlineSource": {
        "allOf": [
          {
            "$ref": "#/definitions/ShellScriptBaseSource"
          },
          {
            "type": "object",
            "properties": {
              "script": {
                "type": "string"
              }
            }
          }
        ],
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "ShellScriptSourceWrapper": {
        "type": "object",
        "required": ["spec", "type"],
        "properties": {
          "type": {
            "type": "string"
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#",
        "allOf": [
          {
            "if": {
              "properties": {
                "type": {
                  "const": "Harness"
                }
              }
            },
            "then": {
              "properties": {
                "spec": {
                  "$ref": "#/definitions/HarnessFileStoreSource"
                }
              }
            }
          },
          {
            "if": {
              "properties": {
                "type": {
                  "const": "Inline"
                }
              }
            },
            "then": {
              "properties": {
                "spec": {
                  "$ref": "#/definitions/ShellScriptInlineSource"
                }
              }
            }
          }
        ]
      },
      "ShellScriptStepInfo": {
        "type": "object",
        "required": ["onDelegate", "shell", "source"],
        "properties": {
          "delegateSelectors": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "string",
                "pattern": "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                "minLength": 1
              }
            ]
          },
          "environmentVariables": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/definitions/NumberNGVariable"
                },
                {
                  "$ref": "#/definitions/SecretNGVariable"
                },
                {
                  "$ref": "#/definitions/StringNGVariable"
                }
              ]
            }
          },
          "executionTarget": {
            "$ref": "#/definitions/ExecutionTarget"
          },
          "metadata": {
            "type": "string"
          },
          "onDelegate": {
            "oneOf": [
              {
                "type": "boolean"
              },
              {
                "type": "string"
              }
            ]
          },
          "outputVariables": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/definitions/NumberNGVariable"
                },
                {
                  "$ref": "#/definitions/SecretNGVariable"
                },
                {
                  "$ref": "#/definitions/StringNGVariable"
                }
              ]
            }
          },
          "shell": {
            "type": "string",
            "enum": ["Bash", "PowerShell"]
          },
          "source": {
            "$ref": "#/definitions/ShellScriptSourceWrapper"
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "ShellScriptStepNode": {
        "type": "object",
        "required": ["identifier", "name", "spec", "type"],
        "properties": {
          "description": {
            "type": "string"
          },
          "failureStrategies": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/FailureStrategyConfig"
            }
          },
          "identifier": {
            "type": "string",
            "pattern": "^[a-zA-Z_][0-9a-zA-Z_$]{0,63}$"
          },
          "name": {
            "type": "string",
            "pattern": "^[a-zA-Z_][-0-9a-zA-Z_\\s]{0,63}$"
          },
          "strategy": {
            "$ref": "#/definitions/StrategyConfig"
          },
          "timeout": {
            "type": "string",
            "pattern": "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+input>.*)|(.*<\\+.*>.*)|(^$))$"
          },
          "type": {
            "type": "string",
            "enum": ["ShellScript"]
          },
          "when": {
            "$ref": "#/definitions/StepWhenCondition"
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#",
        "allOf": [
          {
            "if": {
              "properties": {
                "type": {
                  "const": "ShellScript"
                }
              }
            },
            "then": {
              "properties": {
                "spec": {
                  "$ref": "#/definitions/ShellScriptStepInfo"
                }
              }
            }
          }
        ]
      },
      "StageRollbackFailureActionConfig": {
        "allOf": [
          {
            "$ref": "#/definitions/FailureStrategyActionConfig"
          },
          {
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["StageRollback"]
              }
            }
          }
        ],
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "StepGroupFailureActionConfig": {
        "allOf": [
          {
            "$ref": "#/definitions/FailureStrategyActionConfig"
          },
          {
            "type": "object",
            "required": ["type"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["StepGroupRollback"]
              }
            }
          }
        ],
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "StepWhenCondition": {
        "type": "object",
        "required": ["stageStatus"],
        "properties": {
          "condition": {
            "type": "string"
          },
          "stageStatus": {
            "type": "string",
            "enum": ["Success", "Failure", "All"]
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "StrategyConfig": {
        "type": "object",
        "properties": {
          "matrix": {
            "oneOf": [
              {
                "$ref": "#/definitions/MatrixConfig"
              }
            ]
          },
          "parallelism": {
            "oneOf": [
              {
                "type": "integer",
                "format": "int32",
                "minimum": 0
              },
              {
                "type": "string",
                "pattern": "(^<\\+([a-zA-Z]\\w*\\.?)*([a-zA-Z]\\w*)>$|^<\\+input>.*)",
                "minLength": 1
              }
            ]
          },
          "repeat": {
            "$ref": "#/definitions/HarnessForConfig"
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#",
        "allOf": [
          {
            "oneOf": [
              {
                "required": ["repeat"]
              },
              {
                "required": ["parallelism"]
              },
              {
                "required": ["matrix"]
              }
            ]
          }
        ]
      },
      "StepSpecType": {
        "type": "object",
        "discriminator": "type",
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    }
  },
  "metaData": null,
  "correlationId": "af0318ee-688c-4dfe-b3f8-49c52fff13dc"
}
