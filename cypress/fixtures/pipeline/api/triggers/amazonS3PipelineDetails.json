{
  "status": "SUCCESS",
  "data": {
    "yamlPipeline": "pipeline:\n    name: testPipeline_Cypress\n    identifier: testPipeline_Cypress\n    projectIdentifier: s3\n    orgIdentifier: default\n    tags: {}\n    stages:\n        - stage:\n              name: s1\n              identifier: s1\n              description: \"\"\n              type: Deployment\n              spec:\n                  serviceConfig:\n                      serviceRef: n1\n                      serviceDefinition:\n                          spec:\n                              variables: []\n                              artifacts:\n                                  primary:\n                                      spec:\n                                          connectorRef: testConnector\n                                          bucketName: <+input>\n                                          filePathRegex: <+input>\n                                      type: AmazonS3\n                          type: ServerlessAwsLambda\n                  infrastructure:\n                      environmentRef: \"e1\"\n                      infrastructureDefinition:\n                          type: ServerlessAwsLambda\n                          spec:\n                              connectorRef: s3\n                              stage: testStage\n                              region: testRegion\n                      allowSimultaneousDeployments: false\n                  execution:\n                      steps:\n                          - step:\n                                type: ShellScript\n                                name: s\n                                identifier: s\n                                spec:\n                                    shell: Bash\n                                    onDelegate: true\n                                    source:\n                                        type: Inline\n                                        spec:\n                                            script: echo 1\n                                    environmentVariables: []\n                                    outputVariables: []\n                                    executionTarget: {}\n                                timeout: 10m\n                      rollbackSteps: []\n              tags: {}\n              failureStrategies:\n                  - onFailure:\n                        errors:\n                            - AllErrors\n                        action:\n                            type: StageRollback\n",
    "entityValidityDetails": { "valid": true, "invalidYaml": null },
    "modules": ["cd", "pms"]
  },
  "metaData": null,
  "correlationId": "cb01a281-7334-4cb8-bd86-9055a390e38d"
}
