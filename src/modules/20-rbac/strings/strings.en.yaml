token:
  createLabel: New Token
  editLabel: Edit Token
  rotateLabel: Rotate Token
  forToken: For Token
  form:
    createSuccess: Token '{{name}}' created successfully
    editSuccess: Token '{{name}}' edited successfully
    rotateSuccess: Token rotated successfully
    setexpiryTo: Set Current Token Expiration Date
    expiry: Set Expiration Date
    expiryDate: Expiration Date (mm/dd/yyyy)
    tokenMessage: Your new token has been generated. Please make sure to copy and store your token value somewhere safe, you won't be able to see it again.
    rotateTokenExpiryMessage: If the Expiration Date is not set, the current token will expire immediately and will no longer be valid.
    tokenExpiryDisplay: The token will expire on {{date}}
    dateRequired: Date is required
  confirmDelete: Are you sure you want to delete the Token '{{name}}'
  confirmDeleteTitle: Delete Token
  successMessage: Token '{{name}}' deleted successfully
  scheduledToExpire: Scheduled to expire
apiKey:
  createLabel: New API Key
  editLabel: Edit API Key
  form:
    createSuccess: API Key '{{name}}' created successfully
    editSuccess: API Key '{{name}}' edited successfully
  confirmDelete: Are you sure you want to delete the API Key '{{name}}'
  confirmDeleteTitle: Delete API Key
  successMessage: API Key '{{name}}' deleted successfully
serviceAccounts:
  label: Service Accounts
  email: '@service.harness.io'
  noServiceAccounts: No Service Accounts found
  newServiceAccount: New Service Account
  noDataDescription: There are no service accounts in this scope. Click on the button below to start adding them.
  emptyStateDescription: There are no service accounts in your project
  form:
    editServiceAccount: Edit Service Account
    noDataText: There are no roles assigned to this Service Account, Click on Add to start assigning roles
    createSuccess: Service Account '{{name}}' created successfully
    editSuccess: Service Account '{{name}}' edited successfully
  confirmDelete: Are you sure you want to delete the Service Account '{{name}}'
  confirmDeleteTitle: Delete Service Account
  successMessage: Service Account '{{name}}' deleted successfully
permissionLabels:
  createEdit: Create / Edit
  create: '{{ $.create }}'
  edit: '{{ $.edit }}'
  view: '{{ $.common.viewText }}'
  pipelineExecution: Use in Pipeline Execution
  delete: '{{ $.delete}}'
  access: Access
  execute: '{{$.common.execute}}'
  manage: '{{$.common.manage}}'
  invite: Invite
  evaluate: Evaluate
  approveReject: Approve / Reject
  copy: '{{$.common.copy}}'
  push: Push
  toggleFlag: Toggle Feature Flag
  deleteFFSDKKey: Delete FF SDK Key
  createFFSDKKey: Create FF SDK Key
categoryLabels:
  sharedResources: Shared Resources
roleBindings: Role Bindings
roleBinding: Role Bindings (Role - Resource Group)
noRoleBinding: No Role Bindings
activeUsers: Active Users
manageRoleBindings: Manage Role Bindings
addUser: Add User
pendingUsers: Pending Users
allResources: All Resources
allProjectResources: All Project Level Resources
allOrgResources: All Organization Level Resources
allAccountResources: All Account Level Resources
allResourcesIncludingChildScopes: All Resources Including Child Scopes
userGroupPage:
  newUserGroup: New {{ $.common.userGroup}}
  editUserGroup: Edit {{ $.common.userGroup}}
  assignRoles: Assign Roles
  addMembers: Add Members
  addUsers: Add Users
  noRoleAssignmentsText: There are no roles assigned to this User Group, Click on Add to start assigning roles
  search: Search User Groups by name or email
  confirmDelete: Deleting the user group '{{name}}' would mean that you are also deleting all the role bindings associated with it. Are you sure you want to delete the user group?
  confirmDeleteTitle: Delete User Group
  successMessage: User Group '{{name}}' deleted successfully
  unlinkSuccessMessage: User Group '{{name}}' unlinked successfully
  noUserGroups: No User Groups
  userGroupEmptyState: There are no User Groups in this {{scope}}. Create a new User Group or assign role to an existing User Group in this {{scope}}.
  noDataText: You have no User Groups. Click on the button below to create a new one.
  roleAssignSuccess: Role Assignments created successfully
  userList:
    deleteConfirmation: Are you sure you want to remove the member '{{name}}'?
    deleteTitle: Remove Member
    deleteSuccessMessage: Member '{{name}}' successfully removed
    deleteFailureMessage: Member '{{name}}' could not be removed
UserGroupRoleAssignmentForm:
  assignmentValidation: Role Assignment is required
userGroupForm:
  createSuccess: User Group '{{name}}' created successfully
  samlLinkSuccess: User Group '{{name}}' linked successfully
  ldapLinkSuccess: "User Group '{{name}}' is now linked with LDAP Group '{{ldapGrpName}}'.\r\n\r\nUsers in this group will be synced in the next LDAP sync cycle.\r\n\r\nTo sync Users immediately please go to Authentication Settings,\r\nclick on three dots on the LDAP settings and select 'Synchronize User Groups'"
  editSuccess: User Group '{{name}}' edited successfully
  addMemberSuccess: Members added successfully
roleAssignment:
  searchOrAddUsersPlaceHolder: Search existing users or add new users
  addUsersPlaceHolder: Add new users
  assignmentValidation: You are trying to invite a user without any roles. Please click on add to start assigning roles.
  deleteSuccess: Role Assignments deleted successfully
  deleteFailure: This Role Assignment could not be deleted
usersPage:
  search: Search by name or email
  roleBinding: Role Binding (Role - Resource Group)
  pendingInvitation: '{{ $.common.pendingInvitation }}'
  resendInvite: Resend Invite
  noDataText: There are no roles assigned to this User, Click on Add to start assigning roles
  selectRole: Select a role
  selectResourceGroup: Select a resource group
  validation:
    resourceGroup: Resource Group is Required
    role: Role is Required
  userForm:
    title: New User(s)
    userLabel: Users (name or email)
    userGroupLabel: User Group(s)
  roleAssignSuccess: Role Assignments updated successfully
  invitationSuccess: Invitation sent successfully
  userAddedSuccess: User(s) added successfully
  userAlreadyInvited: User(s) already invited
  userAlreadyAdded: User(s) already added
  resendInviteSuccess: Invitation has been resent to the user '{{name}}'
  invitationError: Could not Invite this user
  deleteConfirmation: Are you sure you want to delete the User '{{name}}'?
  deleteExternallyManagedUserConfirmation: "The user '{{name}}' is managed via an external identity provider. It is strongly advised to delete this user via the respective identity provider."
  resetTwoFactorAuthConfirmation: "Are you sure you want to reset two factor authentication secret for \n the User '{{name}}' ?"
  deleteLastAdminProjectConfirmation: User '{{name}}' is the last admin in this project. If you delete this user, only account or organization admins will be able to manage this project. Are you sure you want to continue?
  deleteLastAdminOrgConfirmation: User '{{name}}' is the last admin in this organization. If you delete this user, only account admins will be able to manage this organization. Are you sure you want to continue?
  deleteLastAdminError: Could not delete the user '{{name}}' as this user is the last admin in this account.
  deleteTitle: Delete User
  deleteSuccessMessage: User '{{name}}' deleted successfully
  resendTwoFactorEmailSuccess: New Two Factor Authentication secret email sent to user '{{name}}'
  noDataDescription: There are no users in this scope. Click on the button below to start adding them.
  noUsersFound: No Users found
  unlockTitle: Unlock user
  unlockConfirmation: Are you sure you want to unlock the user '{{name}}?'
  unlockSuccessMessage: User '{{name}}' unlocked successfully
  lockedOutLabel: (Locked out)
  resetTwoFactorAuth: Email new Two Factor Auth secret
userDetails:
  invalidScopeText: 'You are in the scope: {{scope}}. Please select the organization for which you want to view results. or'
  errorFetchingOrgs: 'An error occurred while fetching organizations.'
  scopeAll: 'Switch to Scope: All'
  groupMemberships: Group Memberships
  noMembersMessage: There are no members added to this User Group
  noUserGroups: There are no user groups found for this user. Click on the button below to add the user to a group
  userGroup:
    deleteTitle: Remove from User Group
    deleteSuccessMessage: User is removed from the User Group '{{name}}'
    confirmDeleteText: Are you sure you want to remove this user from the User Group '{{name}}'
    addToGroup: Add to a new User Group
    addingToGroups: Adding Groups
    addSuccessMessage: User is successfully added to the UserGroups '{{Groups}}'.
    linkedSSOLdapUsersMessage: User group is linked with LDAP group. Users will be populated once sync completes.
  linkToSSOProviderModal:
    linkLabel: Link to SSO Provider Group
    delinkLabel: Delink Group
    delinkText: Do you want to delink the Harness User Group '{{name}}' from '{{ssoName}}'
    selectSSOSetting: Search SSO Settings
    groupNameLabel: Group name
    groupSearchLabel: LDAP Group Search Query
    groupSearchInfo: Only 10 queries will be fetched. Please be specific with your search.
    retainMembersLabel: Retain all members in the user group
    btnDisabledTooltipText: New members cannot be added to SSOLinked UserGroups manually, They will be synced automatically by SSO Provider GroupDetails
    ldap: 'LDAP: '
    saml: 'SAML: '
    group: 'Group: '
    validation:
      groupNameRequired: Group name is required
      ssoIdRequired: Please select a SSO Provider
youAreNotAuthorizedTo: You are not authorized to
unauthorizedText: 'You do not have the necessary permissions to perform this action. You are missing the following permissions:'
permissionOn: permission on
youAreMissingTheFollowingPermission: 'You are missing the following permission{{entityType}}:'
in: '{{ $.common.in }}'
project: project
org: organization
account: account
accountScope: Account scope
generateToken: Generate Token
myApiKeys: My {{$.common.apiKeys}}
roleForm:
  createSuccess: Role created successfully
  updateSuccess: Role updated successfully
roleDetails:
  permissionUpdatedSuccess: Permissions updated successfully
  updateRolePermissions: Update Role permissions
  noDataText: You have no Roles. Click the button below to create a new one.
roleCard:
  confirmDelete: Deleting the role '{{name}}' would mean that you are also deleting all the role bindings it is associated with. Are you sure you want to delete the role?
  confirmDeleteTitle: 'Delete Role'
  successMessage: Role '{{name}}' is deleted successfully
addResourceModal:
  selectedText: Selected {{name}} ({{number}})
  modalCtaLabelSingular: Add {{count}} {{resource}} type
  modalCtaLabelPlural: Add {{count}} {{resource}} types
resourceGroup:
  newResourceGroup: 'New Resource Group'
  updateResourceGroupDialogTitle: 'Update Resource Group'
  color: '{{ $.color}}'
  dragAndDropData: Please select or drag and drop the type of resources, you would like to add to your group.
  summary: '{{ $.summary }}'
  createSuccess: 'Resource Group created successfully'
  updateSuccess: 'Resource Group updated successfully'
  confirmDelete: Deleting the resource group '{{name}}' would mean that you are also deleting all the role bindings it is associated with. Are you sure you want to delete the resource group?
  confirmDeleteTitle: 'Delete Resource Group'
  deletedMessage: 'Resource Group {{name}} deleted'
  limitAccess: 'To limit access to specific set of {{name}}, add them as a list.'
  resourceFilterSelection: In this scope, users get access to all resources within a resource type selected.
  selectResourceGroup: 'Select Resource Group'
  noResourceGroupTypes: 'No Resource Group types available'
  builtInResourceGroup: 'Built in resource-group'
  noResourceGroup: 'No Resource Group available'
  noResourceGroupFound: 'No Resource Group Found'
  selectionHeading: 'Select Resource and define its scope of access.'
updateNotificationSuccess: Notification preferences updated successfully
userRequired: User is required
userGroupRequired: At least one user group is required
resourceSelectorErrorMessage: Add atleast one specific resource for the following types [{{resources}}]
accessControlTitle:
  users: 'Access Control: Users'
  userGroups: 'Access Control: User Groups'
  serviceAccounts: 'Access Control: Service Accounts'
  resourceGroups: 'Access Control: Resource Groups'
  roles: 'Access Control: Roles'
planEnforcement:
  ff:
    teamEnterprisePlan:
      approachingLimit: 'You have used {{ developerUsagePercentage }}% of your developer subscription limit'
      upgradeRequired: 'You have exceeded your developer subscription limit'

customRoles: new Roles
customRolesTooltip: To create custom roles
customResourceGroups: new Resource Groups
customResourceGroupsTooltip: To create Resource Groups
communityErrorMessages:
  role: Requires upgrade to set up Roles
  resourceGroup: Requires upgrade to set up Resource Groups
group: Group
manageSCIMText: 'Unable to {{action}} this {{target}} because it is managed using SCIM by your identity provider.'
unableToEditSCIMMembership: Unable to edit membership to this group because it is managed using SCIM by your identity provider.
unableToEditInheritedMembership: 'Members managed in {{parentScope}} scope'
manageInheritedGroupText: 'Unable to {{action}} this User Group because it is managed at {{parentScope}} level'
unableToEditInheritedMembershipDetailed: 'This group is managed at {{parentScope}} level. Its user membership and notification settings can not be modified at {{childScope}} level.'
linkToOriginalUserGroup: Click here to modify settings
scopeItems:
  accountOnly: Account only
  orgOnly: Organization only
  projectOnly: Project only
  orgWithProjects: Organization with Projects
  accountAll: All (including all Organizations and Projects)
  orgAll: All (including all Projects)
  orgsAndProjects: Organizations (and its Projects)
  specificOrgsAndProjects: Specified Organizations (and their Projects)
  specificProjects: Specified Projects
  allProjects: All Projects
  noOrgs: No Organization or their Projects have been selected
  noProjects: No Projects selected
resourceScope:
  label: Resource Scope
  select: Select Resource Scope
  selectOrg: Select Organization
  selectOrgsandProjects: + Select Organization (and its Projects)
  numberOfOrgsAndProjects: Organizations ({{organizations}}) and their Projects
  numberOfProjects: Projects ({{projects}})
  accountResourcesIncluded: Account-level resources also included.
  orgResourcesIncluded: Org-level resources also included.
  includeAccResources: Include Account-level Resources
  includeOrgResources: Include Organization-level Resources
  includeProjResources: Include Project-level Resources
  noProjects: No Projects
inheritedScope:
  accountScopeTitle: Organizations or Projects using this Group
  orgScopeTitle: Projects using this Group
  projectOrg: '(Organization: {{orgName}})'
  accountScopeNoData: No Organization or Project is using this Group
  orgScopeNoData: No Project is using this Group
scopeLabel: 'Scope:'
notifications:
  name: Notifications
  pipelineName: Notify
  titleEmail: Setup Email Notifications
  titleSlack: Setup Slack Notifications
  titlePagerDuty: Setup PagerDuty Notifications
  helpPagerDuty: Enter the key for a PagerDuty Account/Service to which Harness can send notifications. You can copy/paste this key from PagerDuty's Configuration > Services > Service Details dialog > Integrations tab.
  infoPagerDuty: For more details, see PagerDutys documentation on Creating Integrations.
  helpSlack: You can receive Harness notifications in your Slack channels. You simply add a Slack Incoming Webhook into a Harness User Group's Notification Settings.
  infoSlack: For more details, see Slack’s documentation Getting Started with Incoming Webhooks.
  helpMSTeams: You can receive Harness notifications in Microsoft Teams channels. You simply create an incoming webhook connector in a Microsoft Teams Channel and copy its URL. Next, paste it here in Microsoft Teams Webhook URL(s).
  labelEmailUserGroups: Alternatively Notify the individual users in a user group via their respective email addresses
  buttonSend: Send
  labelSlackUserGroups: Alternatively Notify the Slack Channels associated with these user groups
  labelPagerDutyUserGroups: Alternatively Notify the PageDuty groups associated with these user groups
  labelMSTeamsUserGroups: Alternatively, Harness can notify the Microsoft Teams Channel associated with the user group(s) selected below (Optional)
  validationWebhook: Webhook URL is required
  labelPDKey: PagerDuty Key
  labelPDUserGroups: Alternatively Notify the PagerDuty keys associated with these user groups
  notificationName: Give your notification a name
  nameOftheRule: Name of the Rule
  pipelineEvents: Pipeline Events
  configureConditions: Configure the conditions for which you want to be notified
  selectPipelineEvents: Select Pipeline Events
  selectStagesPlaceholder: 'Select Stages'
  notificationMethod: '{{$.notificationMethod}}'
  emailRecipients: Type emails of your recipients
  emailTestSuccess: Email test is successfully executed
  slackwebhookUrl: Slack Webhook URL
  slackuserGroups: Notify the Slack Channels associated with these user groups
  slackTestSuccess: Slack test is successfully executed
  pagerDutykey: PagerDuty Key (Optional)
  pagerDutyuserGroups: Notify these user groups
  pagerDutyTestSuccess: Pager Duty test is successfully executed
  userGroupsPlaceholder: Type and press enter to add user group
  labelMS: Microsoft Teams
  placeholderMSKeys: Type and press enter to add URL
  errors:
    msTeamUrlRequired: Microsoft Teams URL is required
    invalidUrl: Not a valid URL
  msTestSuccess: Microsoft Teams test is successfully executed
  eventRequired: Event is required
  invalidPagerDutyKey: Invalid pagerduty key
  invalidWebhookURL: Invalid Webhook URL
  stageRequired: Select one of the stages
  enterMicrosoftTeamsUrl: Enter Microsoft Teams URL
  emailOrAlias: Email/Alias
  labelWebhookUrl: Slack Webhook URL (Optional)
  labelPagerDuty: PagerDuty Integration Key
  labelMSTeam: Microsoft Teams Webhook URL(s)
  validationPDKey: PagerDuty Key is required
deleteAnyway: Delete Anyway
