delegatesTitle: 'Resources: Delegates'
newDelegateConfigWizard:
  overviewTitle: 'Delegate Configuration Overview'
  scriptTitle: 'Initialization Scripts'
  successMessage: 'Succesfully created Delegate profile.'
delegateInstances: ' ({{current}} of {{total}} instances)'
downloadYAMLFile: 'Download YAML file'
replicaText: 'Replicas='
totalMemUnit: ' GB'
delegatePermissions:
  title: 'Delegate Permissions'
  clusterWriteTitle: 'Install Delegate with cluster-wide read/write access'
  clusterWriteContent: 'Creates a new namespace called "harness-delegate-ng" with the service account bound to Cluster Admin role. This Delegate will be able to write tasks (deployments needed for Harness Continuous Delivery and Harness Continuous Integration) and read tasks (capture change events etc., needed for Harness Cloud Cost Management and Harness Continuous Verification) anywhere on the k8s cluster where the Delegate is installed.'
  clusterReadTitle: 'Install Delegate with cluster-wide read access'
  clusterReadContent: '(Requires read only Cluster Admin role) Creates a new namespace called "harness-delegate-ng" with the service account bound to Cluster Admin role. This Delegate will be able to perform read-only tasks (capture change events etc., needed for Harness Continuous Integration, Harness Cloud Cost Management and Harness Continuous Verification) anywhere on the k8s cluster where the Delegate is installed.'
  specificNamespaceTitle: 'Install Delegate with specific namespace access'
  specificNamespaceContent: '(Requires namespace admin roles) Specify the namespace where the Harness Delegate is installed. This Delegate will be able to perform tasks (deployments, capture change events etc.) only on the specific namespace.'
delegateNamespaceRequired: 'Namespace is required'
permissionRequired: 'Permission selection is required'
delegateSizeUpTo: 'Run up to {{count}} parallel deployments/builds'
lastUpdated: 'LAST UPDATED'
usedBy: 'USED BY'
delegateNameRegexIssue: 'Delegate name should be lowercase and can include only dash(-) between letters and cannot start or end with a number.'
delegateNameLength: Length cannot be more than {{length}}.
delegateDeleted: 'Delegate {{name}} deleted'
infoForDeleteDelegate: 'Deleting the delegate from the Harness Platform does not uninstall the delegate running on your infrastructure. Click on the Delete button after you have uninstalled the delegate from your infrastructure.'
questionForceDeleteDelegate: 'Are you sure you want to delete the Delegate {{name}} from the Harness Platform?'
reviewYAML: 'Review YML'
delSetup: 'Delegate Setup'
verification: 'Verification '
openTroubleshooter: 'Open Troubleshooter'
troubleshootOption: '(Troubleshoot)'
harnessDocs: 'Check Harness Documentation'
successVerification:
  applyYAMLTitleForHelm: 'Copy the downloaded yaml on a machine with helm version >= 3.2 installed and access to your kubernetes cluster.'
  addHelmRepoLabel: 'Add Harness helm repo'
  addHelmRepoCmd: '$ helm repo add harness-ng https://app.harness.io/storage/harness-download/delegate-helm-chart/'
  installHelmChartLabel: 'To install the helm chart use the below command'
  installHelmChartCmd: '$ helm install  --namespace <namespace> --create-namespace harness-ng/harness-delegate-ng -f harness-delegate-values.yaml'
  checkingForHeartbeat: Checking for heartbeat
  updateHelmRepoLabel: 'Update Harness helm repo'
  helmRepoUpdate: helm repo update harness-ng
delegateNotInstalled:
  verifyStatus1: 'docker container ls -a'
  verifyStatus2: 'docker container ps -a'
  containerRunning: 'Is your container running?'
  verifyLogs1: 'docker logs [container_id]'
  verifyLogs2: 'docker logs [container_id] -f'
  removeDocker: 'docker rm [container_id]'
  title: 'Delegate not installed'
  verifyField2: 'kubectl logs -f <harnessDelegateName> -n <namespace>'
  verifyField3: 'kubectl describe <pod_name> -n <namespace>'
  statusOfCluster: 'Check the status of your Delegate on your cluster'
  podCommand: 'kubectl describe pods -n <namespace>'
  podComeUp: 'Did the pod come up?'
  eventErrorBlock: 'Do you see the error in the events block? If so what is the error?'
  permissionError: 'Permission Error'
  crashloopError: 'Crashloop BackOff'
  pullError: 'ErrorImage Pull'
  logsError: 'Do you see any error in the logs? If the error message in the logs is unclear'
  heartbeatFailed: 'Heartbeat failed [Check if the token used in the delegate is valid]'
  checkError: 'Do you see any error in the logs? If so what is the error?'
  harnessErrorValidation: 'Do you see an error "Failed to connect to Harness SaaS? or Manager?"'
  contactHarness: 'Contact Harness Support'
  checkCanClusterConnectToRegistry: 'Can your Cluster connect to Container Registry:[Docker Hub]? Connect to a VM in the cluster and check if it can reach the Docker Registry'
  checkClusterConfig: 'Check the Cluster Configuration, User may need to provision a VM with more CPU or Memory Reapply Delegate YAML on newly measured infrastructure'
  checkClusterConfig2: 'Is the Delegate Successfully up? Run Kubectl Describe pods -n <namespace>'
  CPUorMemError: 'CPU or Memory Error'
  applicationError: 'Application Error'
  checkClusterPermission: 'You will need to check your K8s Cluster Permissions. User may have to configure a restricted Delegate yaml.'
  checkClusterPermission2: 'Need Help? Check our docs If user cannot figure it out'
  curlHarnessIO: 'Can you curl the app.harness.io URL from the Delegate pod in your cluster?'
  curlHarnessIO2: 'Parameter that can be provided at runtime for url, it could a vanity url, it could be based off the user’s on prem url as well '
  curlHarnessIO3: 'Hostname is what the installation is, i.e. (app.ancestry.harness.io)'
  doYouHaveProxy: 'Do you have a proxy?'
  checkProxy: 'Check the Proxy Settings. Curl your proxy to see if it is available from your Delegate Pod. Authentication to the proxy. In the Harness Proxy Settings please make sure if it is correctly configured please check the docs. Change and reapply the YAML. Did your Delegate spin up in the cluster? Does it say harness-delegate 1/1?'
  checkFirewallPorts: 'Make sure your firewall and ports are properly opened in your Network settings, if everything has been done...'
  goodToGo: 'Good to Go'
  tabs:
    commonProblems:
      removeOlderDelegate: 'Removing older delegate containers'
      title: 'Common Problems'
      hereIsWhatYouCanDo: 'Here is what you can do'
      troubleshoot: 'Troubleshoot'
      checkTheDelegateLogs: 'Check the Delegate Logs'
      description1: 'If the pod is not up, in your cluster you see the Delegate pod in a CrashLoopBackOff:Kubernetes Cluster Resources are not available. Check the Kubernetes Cluster Resources (CPU, Memory)'
      description2: 'If the Delegate didn’t reach a healthy state'
      checkEndPoint: 'Check the Health Check Endpoint in the Delegate. Search YAML for healthCheckEndpoint'
    troubleshooting: 'Troubleshooting'
reviewScript:
  docLinkBefore: 'Please refer to '
  docLink: 'documentation'
  docLinkAfter: ' page.'
  descriptionHelmProxySettings: 'If the Delegate will connect to Harness using a proxy, configure the proxy settings.'
delegateIdentifier: 'Delegate Identifier'
delGroupStatus:
  WAITING_FOR_APPROVAL: 'Waiting for approval'
  DISABLED: 'Disabled'
newDelegate: 'New Delegate'
createDelegate: 'Create a Delegate'
newDelegateConfiguration: 'New Delegate Configuration'
noDelegatesInProject: 'There are no Delegates in your project'
noDelegatesInOrganization: 'There are no Delegates in your organization'
noDelegatesInAccount: 'There are no Delegates in your account'
GBRam: 'GB RAM'
selectors: 'Selectors'
delegateCreation:
  installerSelectionRequired: 'Please select the installer'
  installerText: 'What installer do you want to use?'
  downloadScript: 'Download Script'
  dockerPrerequisites:
    title: 'Docker Prerequisites'
    ensureInst: 'Ensure that you have docker installed.'
    sysReq: 'System requirements:'
    minCPU: 'Default 0.5 CPU.'
    minMem: 'Default 768MB RAM — There is a cap of 768MB per Delegate, but when the Delegate is updating there might be two Delegates running. Hence, the minimum is 1.5GB. Ensure that you provide the minimum memory for the Delegate and enough memory for the host/node system.'
    minMemCommunity: '768MB RAM is required for Delegate. Ensure that you provide the minimum memory for the Delegate and enough memory for the host/node system.'
  docker:
    scriptTitle: 'Setup instructions'
    scriptText: 'Edit launch-harness-delegate.sh to set proxy settings or to enter a delegate description. Install the Harness Delegate by executing launch-harness-delegate.sh.'
    scriptCommandGetIds: 'Get container IDs:'
    scriptSeeLogs: 'See startup logs:'
    scriptRunInShell: 'Run a shell in a container:'
    docLinkBefore: 'For more information, '
    docLink: 'review documentation'
    verifyTitle: 'Run the script and verify the connection'
    verifyDesc1: 'Copy the downloaded script to a machine where you have docker installed.'
    verifyDesc2: 'Run the following command to install the docker delegate.'
delegateNameNotUnique: 'Delegate with that name already exists.'
tokens:
  delegateTokensTitle: 'Resources: Delegate Tokens'
  delegateTokens: 'Delegate Tokens'
  revoke: 'Revoke'
  moreInfo: 'More info'
  copytoken: 'Copy token'
  tokenCopied: Token copied to clipboard
  showRevoked: 'Show Revoked Tokens'
  tokenNameRequired: 'Token name is required.'
  tokenNameNotUnique: 'Token with that name already exists.'
  revokeToken: 'Revoke Token'
  revokeTokenSubtitle: 'Revoking this token will affect the following delegates. They will no longer function.'
  moreInfoTitle: 'More information about {{token}}'
  moreInfoSubtitle: 'The following delegates use this token.'
  generatedValuePlaceholder: '<generated value>'
  tokenNotUsedByDelegates: 'Token has not been used by any delegate'
  tokenBySearchNameNotExisting: 'There are no delegates by that name'
  noTokens: 'There are no tokens'
  revoked: 'Revoked'
  tokenRequired: 'Token is required.'
  createdBySystem: 'system'
delegateProfilesDepricated: 'Delegate profiles are deprecated, please use INIT_SCRIPT instead.'
noInstances: 'No instances'
successfullyUpdatedConfig: 'Successfully Updated Delegate Configuration'
configNameRequired: 'Delegate Configuration name is Required.'
instanceStatus: 'Instance Status'
runAsRoot: 'Run delegate with root access'
commandLineCreation:
  replicas: Replicas
  createYourOwnYaml: This template is configured with auto upgrade set to ON so that the delegate version installed will always remain in sync with the version available on the Harness Manager.
  defaultValuesYaml: Default values.yaml used for command below
  totalMemory: Total Memory / Total CPU needed on the Kubernetes Cluster
  numberOfParallel: Number of parallel deployments/builds that can be run across all replicas
  yamlBasicOptionText: This YAML has all configuration variables pre-populated with values specific to your Harness account. Additionally, the auto upgrade configuration is set to ON so that the delegate version installed will always remain in sync with the version available on the Harness Manager.
  yamlFileOptions: YAML file options
  delegateSizing: Delegate sizing guide - modify the replica count to run specific number of parallel deployments/builds
  installDelegate: Install a Delegate
  closePreview: Close preview
  terraForm: Terraform Helm Provider
  kubernetesManifest: Kubernetes Manifest
  installYourDelegate: Install your Delegate
  harenssDelegates: Harness Delegates
  selectyourDelegate: Select where you want to install your Delegate
  oldWayToCreateDelegate: Switch back to old delegate install experience

  infoText: Harness Delegate is a service that can run in local network or VPC to connect artifact servers, infrastructure, collaboration, verification and other providers, with the Harness Manager. Harness provides different types of Delegates to give you flexibility in how you manage deployments. You can either deploy a kubernetes based delegate or a docker based delegate
  installDelegateSubText: Delegates are worker processes that run on your infrastructure to execute tasks on behalf of the Harness platform.
  firstCommandHeadingHelm: Add Harness helm chart repo to your local helm registry
  firstCommandHelmFirstLine: helm repo add harness-delegate https://app.harness.io/storage/harness-download/delegate-helm-chart/
  firstCommandHelmSecondLine: helm repo update harness-delegate
  secondCommandHeadingHelm: Now we are ready to install the delegate
  firstComandHeadingKubernetes: Create your own YAML from a Kubernetes manifest template
  firstComandKubernetesFirstLine: curl -LO https://raw.githubusercontent.com/harness/delegate-kubernetes-manifest/main/harness-delegate.yaml
  lastCommandKubernetesLastLine: kubectl apply -f harness-delegate.yaml
  commandsKubernetesHeading: Update the downloaded template by replacing the placeholders with the following values. You will now have a Kubernetes manifest YAML ready for installation.
  kubernetesFirstDirectionPartOne: '"PUT_YOUR_DELEGATE_NAME"'
  kubernetesFirstDirectionPartTwo: with the desired delegate name
  kubernetesSecondDirectionPartOne: '"PUT_YOUR_ACCOUNT_ID"'
  kubernetesSecondDirectionPartTwo: with your Account Id
  kubernetesThirdDirectionPartOne: '"PUT_YOUR_MANAGER_ENDPOINT"'
  kubernetesThirdDirectionPartTwo: with your cluster url
  kubernetesFourthDirectionPartOne: '"PUT_YOUR_DELEGATE_TOKEN"'
  kubernetesFourthDirectionPartThree: 'your delegate token'
  firstCommandHeadingDocker: Run the following command to install
  firstCommandHeadingTerraform: Create the main.tf file where you want to install the delegate
  secondCommandHeadingTerraform: Initialize Terraform
  thirdCommandHeadingTerraform: Copy the YAML to a machine with kubectl installed and with access to your Kubernetes cluster. Run the following command to install the Harness Delegate in your Kubernetes Cluster.
  foruthCommandHeading: Apply terraform
  firstCommandTerraFormFirstLine: terraform apply
  secondCommandTerraFormFirstLine: terraform init
  verifyDelegateConnection: Verify Delegate connection to Harness Manager
  enterYourResponse: Enter your response
  learnWatch: Learn more or watch video link
  forAdvancedConfig: For Advanced configuration options, refer to documentation
  verifyInfo: Verify once you have completed the steps above to make sure its installed properly
  didDelegateComeUp: Did the Delegate come up?
  delegateFixed: Can you describe how the issue was fixed
  delegateNotFixed: Can you describe what the issue was
  helmTroubleShooting1: Verify helm is installed correctly
  helmTroubleShooting2: helm
  helmTroubleShooting3: helm version
  helmTroubleShootingInfoCommand: 'If you encounter "Error: rendered manifests contain a resource that already exists..." Delete the existing namespace and retry the helm upgrade command to deploy the delegate.'
  helmTroubleShooting4: To further troubleshoot helm installation refer
  helmTroubleShooting5: Helm troubleshooting guide
  helmTroubleShooting6: If the pod is not up,check the Delegate Logs
  helmTroubleShooting7: If the Delegate pod is in a CrashLoopBackOff state, that means Kubernetes Cluster Resources are not available. Check the Kubernetes Cluster Resources (CPU, Memory).
  dockerTroubleShooting1: docker container logs <delegatename> -f
  dockerTroubleShooting2: Restart the delegate container
  dockerTroubleShooting3: docker container stop <delegatename>
  dockerTroubleShooting4: docker container start <delegatename>
  dockerTroubleShooting5: If there is not enough resources (CPU, Memory), remove the older containers
  dockerTroubleShooting6: docker container rm [container id]
  terraformTroubleShooting1: Verify terraform is installed correctly
  terraformTroubleShooting2: terraform -version
  terraformTroubleShooting3: To further troubleshoot terraform installation refer
  terraformTroubleShooting4: terraform troubleshooting guide
  clickDoneAndCheckLater: Checking if the delegate is installed. It might take 1-3 minutes for the installation. Click Done and check back later.
  feedBackSaved: Feedback Saved
  feedBackNotSaved: Error in saving feedback
  retryConnections: Retry Connection
