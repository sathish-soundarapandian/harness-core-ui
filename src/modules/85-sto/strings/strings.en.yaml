stepDescription:
  ZeroNorth: Run a security tool to test for vulnerabilities.
  Bandit: Use Bandit to test for vulnerabilities.
  Blackduck: Use Black Duck to test for vulnerabilities.
  Brakeman: Use Brakeman to test for vulnerabilities.
  Burp: Use Burp to test for vulnerabilities.
  Grype: Use Anchore Grype to test for vulnerabilities.
  Snyk: Use Snyk to test for vulnerabilities.
  Sonarqube: Use Sonarqube to test for vulnerabilities.
  AquaTrivy: Use Aqua Trivy to test for vulnerabilities.
  Checkmarx: Use Checkmarx to test for vulnerabilities.
  Fortify: Use Fortify to test for vulnerabilities.
  FortifyOnDemand: Use FortifyOnDemand to test for vulnerabilities.
  Owasp: Use Owasp to test for vulnerabilities.
  TwistLock: Use TwistLock to test for vulnerabilities.
  ScoutSuite: Use ScoutSuite to test for vulnerabilities.
  Veracode: Use Veracode to test for vulnerabilities.
  WhiteSource: Use WhiteSource to test for vulnerabilities.
  Zap: Use Zap to test for vulnerabilities.
  PrismaCloud: Use Prisma Cloud to test for vulnerabilities.
  Mend: Use Mend to test for vulnerabilities.
  CustomIngestion: Ingest custom Issues from any scanning tool.
  AWSSecurityHub: Use AWS Security Hub to test for vulnerabilities.
  AWSECR: Use AWS ECR to test for vulnerabilities.
  Nikto: Use Nikto Security Hub to test for vulnerabilities.
  Nmap: Use Nikto to test for vulnerabilities.
  OWASP: Use OWASP Dependency Check to test for vulnerabilities.
  Prowler: Use Prowler to test for vulnerabilities.
  Sniper: Use Sniper to test for vulnerabilities.
  Metasploit: Use Metasploit to test for vulnerabilities.
stepField:
  mode: Scan Mode
  config: Scan Configuration
  target:
    variant: Variant
  image:
    fieldsHeading: Container Image
  authAccessId: Access Id
  authSsl: Enforce SSL
  authVersion: API Version
  authRegion: Access Region
  toolInclude: Include
  tool:
    fieldsHeading: Scan Tool
    javaLibraries: Java Libraries
    javaBinaries: Java Binaries
    context: Context Name
    teamName: Team Name
    projectVersion: Project Version
    projectToken: Project Token
    productToken: Product Token
    productLookupType: Lookup Type
    exclude: Exclude
    projectKey: Project Key
  container:
    containerAccessToken: Container Access Token
    containerRegion: Container Region
  advanced:
    logLevel: Log Level
    serializer: Log Serializer
    cli: Additional CLI flags
    passthrough: Passthrough
    failOnSeverity: Fail On Severity
    includeRaw: Include Raw
  ingestion:
    file: Ingestion File
    customerArtifactsPath: Customer Artifacts Path
  optionLabels:
    logLevel:
      debug: Debug
zeroNorthImagePlaceholder: shield
securityStage:
  description: Scan code, artifacts, and infrastructure for security vulnerabilities.
targets:
  testTargets: Test Targets
issues: Issues
scans: Scans
exemptions: Exemptions
noSecurityResults: No Security Results Processed
failedToGetIssueCounts: Failed to get issue counts
noSecurityIssues: No Security Issues
Critical: Critical
Info: Info
Unassigned: Unassigned
continuous: '{{$.common.purpose.sto.continuous}}'
stoExemption: Exemption
gettingStarted: Getting Started
trial:
  description: Deliver highly secure applications while maintaining deployment velocity and minimizing rework.
  learnMore: Learn more about Security Testing Orchestration
  comingSoon: Trial - Coming soon
