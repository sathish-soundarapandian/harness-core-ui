allowSimultaneousDeployments: Allow simultaneous deployments on the same infrastructure
continuous: '{{$.common.purpose.cd.continuous}}'
learnMore: Learn more about Continuous Delivery
moreIssue: '+ {{count}} More Issue'
moreIssues: '+ {{count}} More Issues'
dynamicProvisioning: Dynamic provisioning
deleteSourceBranch: Delete Source Branch
dashboard:
  subHeading: Let Harness take your software release process to the next level with Continuous Delivery
  createProject: '{{$.createProject}}'
  orSelectExisting: '{{$.orSelectExisting}}'
steps:
  common:
    clusterDetails: Cluster Details
    selectOrEnterClusterPlaceholder: Select or Enter Cluster
    releaseNamePlaceholder: Enter Release Name
    specifyCredentials: Specify Credentials
    undefinedType: Undefined deployment type
    enableKubernetesPruning: 'Enable Kubernetes Pruning'
  commands:
    runTheCommands: Run the following commands
    addCommand: Add Command
    editCommand: Edit Command
    sourceTypeLabel: Select file type to copy
    destinationPath: Destination Path
    destinationPathPlaceholder: Enter Destination Path
    scriptTypePlaceholder: Enter Script Type
    filesAndPatterns: Files and Patterns
    fileToTail: File to Tail
    patternToSearch: Pattern to Search
    fileToTailPlaceholder: Enter File to Tail
    selectScriptLocation: Select script location
    locationFileStore: Harness File Store
    patternToSearchPlaceholder: Enter Pattern to Search
    runOnDelegate: Run on Delegate
    validation:
      sourceTypeRequired: Source Type is required
      destinationPathRequired: Destination Path is required
  shellScriptOutputVariablesLabel: '{{scriptType}} Output Variable'
  kubernetesGcpStep:
    stepName: Specify your GCP Connector
  pdcStep:
    no: No.
    hostsPlaceholder: Specify list of host names here (comma separated)
    specificHostsPlaceholder: Specify list of comma separated hosts here
    attributesPlaceholder: Specify list of comma separated attributes and values. E.g. hostType:DB, region:west
    specifyHostsOption: Specify hosts
    preconfiguredHostsOption: Select preconfigured hosts from Physical Data Center
    dynamicProvision: Map Dynamically Provisioned Infrastructure
    pdcConnectorLabel: Physical Datacentar Connector
    includeAllHosts: Include all hosts
    filterHostName: Filter by host name
    filterHostAttributes: Filter by host attributes
    specificHosts: Specific Hosts
    specificHostsOptional: Specific Hosts (Optional)
    specificAttributes: Specific Attributes
    specificAttributesOptional: Specific Attributes (Optional)
    hostsOptional: Hosts (Optional)
    hostDataMapping: Host Data Mapping
    hostDataMappingEmptyKey: Field cannot have empty key entry
    hostnameRqrd: A hostname key attribute is required
    hostArrayPath: Host Array Path
    hostObjectPathPlaceholder: Path value
    previewHosts: Preview Hosts
    noHosts: No hosts provided
    title: Select Hosts
  azureInfraStep:
    azure: 'Microsoft Azure'
    subscription: '{{ $.common.subscriptionId }}'
    subscriptionPlaceholder: '{{ $.common.subscriptionPlaceholder }}'
    resourceGroupPlaceholder: 'Select or specify Resource Group'
    resourceGroupError: 'No resource groups found with given Subscription'
    clusterError: 'No cluster found with given Resource Group'
  eks:
    eks: Elastic Kubernetes Service
  azureWebAppInfra:
    azureWebApp: '{{ $.pipeline.azureWebApp.name }}'
    subscription: '{{ $.common.subscriptionId }}'
    subscriptionPlaceholder: '{{ $.common.subscriptionPlaceholder }}'
    webAppPlaceholder: 'Select or add Web App Name'
    deploymentSlotPlaceHolder: 'Select or add Deployment Slot'
    targetSlotPlaceHolder: 'Select or add Target Slot'
    targetSlotInfoText: 'Target Slot is required for Swap Slot Step'
    webAppNameError: 'No web app names groups found with given Resource Group'
    deploymentSlotError: 'No deployment slots groups found with given Web App Name'
    targetSlotError: 'No target slots found with given Web App Name'
    webAppInfraheader: 'Web App Infrastructure Details'
  serverless:
    regionPlaceholder: Specify a region
    stagePlaceholder: Specify a stage
  emailStep:
    ccOptionalLabel: CC (optional)
    timeout1DayMinimum: 'Minimum Timeout is 1 day'
  awsInfraStep:
    regionError: Error fetching regions
    placeholders:
      loadBalancer: Select Load Balancer
      connectionAttribute: Select Connection Attribute
      hostName: Type Host Name Convention
      autoScallingGroup: Select Auto Scalling Group
      vpcs: Select VPCs
    labels:
      connectionAttribute: Connection Attribute
      useAutoScallingGroup: Use Auto Scalling Group
      autoScallingGroup: Auto Scalling Group
      useAwsInstanceFilter: Use AWS Instance Filter
      hostName: Host Name Convention
      vpcs: VPCs
  ecsRunTaskStep:
    ecsRunTaskDefinition: ECS Run Task Definition
    ecsRunTaskDefinitionArn: ECS Run Task Definition ARN
    ecsRunTaskDefinitionArnPlaceholder: Enter ECS Run Task Definition ARN
    runTaskDefinition: Run Task Definition
    ecsRunTaskRequestDefinition: ECS Run Task Request Definition
    runTaskRequestDefinition: Run Task Request Definition
    skipSteadyStateCheck: Skip Steady-State Check
  ecsBGCreateServiceStep:
    sectionHeaders:
      configureProductionService: Configure your Production Service
      configureStageService: Configure your Stage Service
    labels:
      elasticLoadBalancer: Elastic Load Balancer
      prodListener: Prod Listener
      prodListenerRuleARN: Prod Listener Rule ARN
      stageListener: Stage Listener
      stageListenerRuleARN: Stage Listener Rule ARN
  elastigroup:
    infraDetailHeader: Elastigroup Infrastructure Details
    connectorSpot: Spot Connector
    elastigroupConfig: Elastigroup Configuration
    elastigroupConfigReq: Elastigroup Configuration is required
    elastigroupTitle: Elastigroup Configuration Source
    elastigroupConfigDetails: '{{$.common.configDetails}}'
  tasInfra:
    space: Space
    organizationPlaceholder: Select organization
    spacePlaceholder: Specify the space
    organizationError: No organization found with given Connector
    spacesError: No spaces found within given organization
  tas:
    enableDownSizeOldApplication: Downsize Old Applications
    enableUpsizeInActiveApp: Upsize Applications in Active App
    upsizeInactiveService: Upsize inactive Service
    ignoreInstanceCountManifest: Ignore instance count in Manifest
    totalInstances: Total Instances
    oldAppInstances: Desired Instances - Old Version
    newAppInstance: New App Instance
    oldAppInstance: Old App Instance
    minimumCountPercentage: Percentage must be greater than or equal to 0
    existingVersionToKeep: Existing Versions To Keep
    resizeStrategy: Resize Strategy
    additionalRoutes: Additional Routes
    tempRoutes: Temporary Routes
    readFromManifest: Read from Manifest
    matchRunningInstances: Match Running Instances
    typeAndEnterForRouteAdd: Type and press enter to add a route
    tempRouteMandatory: Temp route is mandatory
    upscaleNewFirstLabel: Add new instances first, then downsize old instances
    downScaleOldFirstLabel: Downsize old instances first, then add new instances
    zeroOldInstancesWarning: There can be a downtime as the old instances are downsized first with instance value as zero
    routeMandatory: Route is mandatory
    mappingType: Mapping type
    mapRoute: Map Route
    unMapRoute: UnMap Route
    routes: Routes
  googleCloudFunctionCommon:
    fieldMask: Field Mask
    fieldMaskPlaceholder: Enter Field Mask
    trafficPercent: Traffic Percent
    trafficPercentPlaceholder: Enter Traffic Percent
    envVersionLabel: Google Cloud Function Environment Version
    envTypes:
      gen1: '1st gen'
      gen2: '2nd gen'
filePathPlaceholder: 'Enter path within manifest folder'
resourceCannotBeEmpty: 'Resource cannot be empty'
manifestPathsCannotBeEmpty: 'Manifest Paths cannot be empty'
workloadRequired: Workload is a required field
stepName: Step Name
serviceCreated: '{{ $.common.serviceCreated }}'
serviceUpdated: '{{ $.common.serviceUpdated }}'
environmentCreated: '{{ $.common.environmentCreated }}'
environmentUpdated: '{{ $.common.environmentUpdated }}'
preProduction: '{{ $.common.preProduction }}'
preProductionType: 'Pre-Prod'
environmentDelete: '{{ $.common.deleteEnvironment.title }}'
environmentDeleteMessage: 'Are you sure you want to delete environment <strong>{{name}}</strong>?'
releaseNameValidation: Release name must consist of lowercase alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. http://example.com). Harness evaluates the release name using the regex [a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*
cdTrialHomePage:
  startTrial:
    description: Take your software build processes to the next level using our Harness Continuous Delivery.
    startBtn:
      description: Start 14 day CD Enterprise trial
cdSwitchToFirstGen:
  description1: Harness Continuous Delivery First Generation is our dedicated industry leading Continuous Delivery Platform.
  description2: Donâ€™t worry, you can switch back to the Next Generation Platform at any time to get access to additional integrated Harness modules and features.
  description3: Pipelines are not transferable between First and Next Generation platforms
  description4: You are currently in the new and exciting Continuous Delivery NexGen platform. The platform is rapidly evolving to support all popular deployment types. The deployment types below are availible on our existing First Generation platform.
  startWith14DayTrial: Start with 14 day Trial
  learnMoreAboutCD1stGen: Learn more about CD First Generation
chooseProvisionerText: What type of provisioner do you want to use?
setUpProvisionerBtnText: Set Up Provisioner

filePathRequired: At least one file path is required
pathCannotBeEmpty: File Path cannot be empty
configFilePlaceHolder: 'Specify Config File...'
backendConfigFilePlaceHolder: 'Specify Backend Config File...'

configIdentifer: Configuration Identifier
addInline: Add Inline
addRemote: Add Remote
tfVarStore: Terraform Var Store
varFileDetails: Var File Details
varFile: Var File
backEndConfig: Backend Configuration
gitFetchTypeRequired: Git Fetch Type Required
specifyTfVarStore: Specify Terraform Var File Store
addTFVarFileLabel: 'Add File Path'
enterWorkDirectory: Enter Working Directory
enterTragets: Enter Targets
exportTerraformPlanJson: Export JSON representation of Terraform Plan
exportTerraformHumanReadablePlan: Export Human Readable representation of Terraform Plan
exportTerragruntPlanJson: Export JSON representation of Terragrunt Plan
commandLineOptions: Command Line Options
skipRefreshCommand: Skip Refresh Command
specifyTargetHost: Specify Target Host
configurationFile: 'Configuration File Repository'
backendConfigurationFile: 'Backend Configuration File Repository (optional)'
terraformVarFiles: 'Terraform Var Files'
secretManagerRequired: 'Secret Manager is required.'
pipelineSteps:
  environmentTab:
    specifyYourEnvironment: Specify Environment
    specifyYourEnvironments: Specify Environments
    specifyYourEnvironmentGroup: Specify Environment Group
    specifyYourInfrastructure: Specify Infrastructure
    specifyYourInfrastructures: Specify Infrastructures
    specifyEnvironmentOrGroup: Specify environment or environment group
    specifyGitOpsCluster: Specify GitOps Cluster
    specifyGitOpsClusters: Specify GitOps Clusters
    selectEnvironment: '{{$.common.entityPlaceholderText}}'
    selectEnvironments: '{{$.common.entityPlaceholderText}}'
    selectEnvironmentGroup: '{{$.common.entityPlaceholderText}}'
    selectInfrastructure: '{{$.common.entityPlaceholderText}}'
    selectInfrastructures: '{{$.common.entityPlaceholderText}}'
    allInfrastructures: 'All Infrastructures'
    selectInfrastructureType: 'Select Infrastructure Type'
    plusNewEnvironment: '+ {{$.newEnvironment}}'
    newEnvironment: '{{$.newEnvironment}}'
    deployToAll: Deploy in parallel on all infrastructure
    environmentOrEnvGroupAsRuntime: Which of Environment or Environment Group should be marked as runtime?
    allClustersSelected: All Clusters in Environment
    environmentIsRequired: '{{ $.common.validation.environmentIsRequired }}'
    environmentsAreRequired: Environments are required
    infrastructureIsRequired: 'Infrastructure is required'
    infrastructuresAreRequired: 'Infrastructures are required'
    environmentOrEnvGroupIsRequired: 'Environment or Environment Group is required'
    environmentInEnvGroupIsRequired: 'Environment in Environment Group is required'
    environmentGroupIsRequired: 'Environment Group is required'
    clusterIsRequired: 'Cluster is required'
    multiEnvToggleText: 'Deploy to multiple Environments or {{name}}'
    envGroupToggleText: 'Deploy to Environment Group'
    viewEnvironmentInputs: View Environment inputs
    hideEnvironmentInputs: Hide Environment inputs
    viewServiceOverrideInputs: View Service Override inputs
    hideServiceOverrideInputs: Hide Service Override inputs
    viewEnvironmentServiceOverrideInputs: View Environment inputs & Service Override inputs
    hideEnvironmentServiceOverrideInputs: Hide Environment inputs & Service Override inputs
    viewInfrastructureInputs: View infrastructure inputs
    hideInfrastructureInputs: Hide infrastructure inputs
    multiEnvironmentsParallelDeployLabel: Deploy to Environments or Infrastructures in parallel?
    environmentGroupDialogTitleText: Deploy to environment group?
    environmentGroupConfirmationText: Are you sure you want to switch to deploying to a single environment group? If you choose to proceed, your existing environments will be lost.
    multiEnvironmentsDialogTitleText: Deploy to multiple environments or infrastructures?
    multiEnvironmentsConfirmationText: Are you sure you want to switch to deploying multiple environments or infrastructures? If you choose to proceed, your existing environment will be migrated automatically.
    multiEnvironmentsClearConfirmationText: Are you sure you want to switch to deploying multiple environments or infrastructures? If you choose to proceed, your existing environment will be lost.
    singleEnvironmentDialogTitleText: Deploy to single environment?
    singleEnvironmentConfirmationText: Are you sure you want to switch to deploying to a single environment? If you choose to proceed, your existing environments will be lost.
    deleteEnvironmentFromListDialogTitleText: Remove Environment from list?
    deleteEnvironmentFromListConfirmationText: Are you sure you want to remove Environment - {{name}} from the list?
    deleteInfrastructureFromListDialogTitleText: Remove Infrastructure from list?
    deleteInfrastructureFromListConfirmationText: Are you sure you want to remove Infrastructure - {{name}} from the list?
    deleteClusterFromListDialogTitleText: Remove Cluster from list?
    deleteClusterFromListConfirmationText: Are you sure you want to remove Cluster - {{name}} from the list?
    deleteEnvironmentGroupFromListDialogTitleText: Remove Environment Group from list?
    deleteEnvironmentGroupFromListConfirmationText: Are you sure you want to remove Environment Group - {{name}} from the list?
  serviceTab:
    stageOverrides: Stage Overrides
    overrideChanges: Override artifacts, manifests, service variables for this stage
    deploymentTypeRequired: Deployment type selection is required
    propagateFrom: Propagate from
    differentService: Deploy different Service
    specifyYourService: '{{$.common.selectService}}'
    specifyYourServices: '{{$.common.selectServices}}'
    selectService: '{{$.common.entityPlaceholderText}}'
    selectServices: '{{$.common.entityPlaceholderText}}'
    newService: '{{$.newService}}'
    plusNewService: '+ {{$.newService}}'
    serviceIsRequired: Service is required
    servicesAreRequired: Services are required
    useFromStageRequired: Service or Propagate From is required
    aboutYourService: About the Service
    manifest:
      taskDefinition: Task Definition
      taskDefinitionARNPlaceholder: Enter Task Definition ARN
      serviceDefinition: Service Definition
      scalingPolicy: Scaling Policy
      scalableTarget: Scalable Target
      functionDefinition: Function Definition
      manifestFirstStepTitle: Copy the template manifest file to create your own
      googleCloudFunctionDefinitionLearnMore: Learn more about YAML format for Google cloud function creation
      manifestSecondStepTitle: Link the function file from your Git repository
    newServiceOverride: New configuration overrides
    multiServicesText: Deploy multiple Services
    multiServicesTitleText: Deploy multiple Services?
    multiServicesParallelDeployLabel: Deploy Services in parallel?
    multiServicesConfirmationText: Are you sure you want to switch to deploying multiple Services?. If you choose to proceed, your existing Service will be migrated automatically.
    multiServicesClearConfirmationText: Are you sure you want to switch to deploying multiple Services? If you choose to proceed, your existing Service will be lost.
    singleServicesTitleText: Deploy to single Service?
    singleServicesConfirmationText: Are you sure you want to switch to deploying to a single Service?. If you choose to proceed, your existing Services will be lost.
    deleteServiceFromListTitleText: Remove Service from list?
    deleteServiceFromListText: Are you sure you want to remove {{name}} Service from the list?
    viewServiceInputs: View Service inputs
    hideServiceInputs: Hide Service inputs
  infraTab:
    deploymentType: Infrastructure type selection is required
    clusterError: No cluster found with given Connector
    stageIsRequired: Stage is required
cdLaunchText: Launch CD First Generation
serviceDashboard:
  instanceDataEmpty: Instance data is empty.
  activeServiceInstancesLabel: '{{$.common.subscriptions.usage.srvcInst}}'
  runningServiceInstancesLabel: 'Running Service Instances (Current)'
  recentDeployments: 'Recent Deployments'
  servicesInLast: 'Services added in {{period}}'
  serviceInstancesInLast: 'Active service instance trend in {{period}}'
  activeInstanceCount: 'Active Instance Count'
  nonProd: 'Non Prod'
  prod: 'Prod'
  in: 'in {{timeRange}}'
  instanceId: 'Instance Id'
  strategy: 'Strategy'
  bgEnv: 'BG Env'
  asgName: 'Asg Name'
  frequency: '{{$.common.frequency}}'
  totalServices: 'Total Services: {{total}}'
  lastDeployment: 'last deployment'
  executionId: 'Execution Id: {{id}}'
  noDeployments: No Deployments in {{timeRange}}
  noServices: No services in {{timeRange}} for given criteria
  noServiceInstances: No Service Instances in {{timeRange}}
  seeMore: '+ {{count}} more'
  buildName: 'Build Name'
  noServiceDetails: No services matching the criteria
  6monthTrend: 6 month trend
  instanceCountHistory: Instance Count History
  instanceDetails: Instance Details
  instancesDetails: Instances Details
  deploymentDetails: Deployment Details
  moreDetails: More Details >
  headers:
    artifactVersion: Artifact Version
    environment: '{{$.environment}}'
    infrastructures: '{{$.common.infrastructures}}'
    infras: Infras
    clusters: '{{$.common.clusters}}'
    instances: '{{$.instanceFieldOptions.instances}}'
  pod: pod
  function: function
  deployedAt: Deployed At
  deployedBy: Deployed By
  host: host
  deploymentSlot: deploymentSlot
  webApp: Web App Name
  artifact: artifact
  totalPipelines: Total Pipelines
  totalDeployments: Total Deployments
  noPipelines: No pipeline execution in {{timeRange}} matches the given criteria
  envName: Env Name
  noActiveServiceInstances: No Active Service Instances
  noActiveServices: No Active Services in {{timeRange}}
  helmChartDetails: Helm Chart Details
  helmChartName: Helm Chart Name
  helmSubChartPathName: Helm Sub-Chart Path
  helmRopoUrl: Repo URL
  manageServiceLabel: Manage Services
  unitDay: '/Day'
  lastPipelineExecution: Last Pipeline Execution
  noLastDeployment: No last deployment exist
  taskDefinitionArn: Task Definition ARN
  taskArn: Task ARN
  awsRegion: AWS Region
  containerList: Container List
  elastigroupId: Elastigroup Id
  ec2InstanceId: EC2 Instance Id
  revision: revision
  functionName: functionName
  source: source
  runTime: runTime
  updatedTime: updatedTime
  memorySize: memorySize
noEnvironment:
  title: You have no Environments
  message: Create an environment and letâ€™s start configuring the deployment
gitOps: '{{ $.common.gitOps }}'
addService: Add Service
noService: You have no Services
addEnvironment: Add Environment
existingEnvironment: 'Existing Environment'
editIdError: 'ID: {{id}} cannot be edited'
typeError: 'Type should not be empty and contain either "Production" or "PreProduction"'
newAdapter: New Adapter
newGitOpsServer: New GitOps Server
adapterDetails: Adapter Details
launchArgo: Launch Argo App Dashboard
argoAdapterURL: 'Adapter URL'
noAdapterText: 'There are no adapters in your project'
aboutProvider: 'Adapters help connect to your Argo CD Instance and view your Apps.'
noGitOpsServerText: 'There are no GitOps Servers in your project'
aboutGitOpsServer: 'GitOps description'
installAdapterHelperText: 'Install Argo CD adapter in your cluster. This adapter allows customers to interact with the Argo CD server directly from Harness UI with minimal configuration. <ul> <li> Install one adapter per Argo CD Server. </li> <li> This Adapter should be able to reach the Argo CD Server. </li> <li> The communication between Harness UI to Harness Argo Adapter takes place over HTTPS for security purposes. </li> </ul>'
whatIsHarnessAdapter: 'What is an Adapter?'
aboutHarnessAdapter: 'The adapter is a service you run in your local network or VPC to establish connectivity between Harness UI and Argo CD.'
learnMoreAboutHarnessAdapter: 'Learn More about this'
nameEmptyError: 'Service name cannot be empty'
IdEmptyError: 'Identifier cannot be empty'
updating: 'Updating adapter {{name}}'
creating: 'Creating adapter {{name}}'
createdSuccessfully: 'Adapter {{name}} created successfully'
updatedSuccessfully: 'Adapter {{name}} updated successfully'
deletedSuccessfully: 'Adapter {{name}} deleted'
confirmDeleteTitle: Delete Adapter
confirmProviderDelete: Are you sure you want to delete the Adapter
updatingGitOpsServer: 'Updating GitOps Server {{name}}'
creatingGitOpsServer: 'Creating GitOps Server {{name}}'
createdGitOpsServerSuccessfully: 'GitOps Server {{name}} created successfully'
updatedGitOpsServerSuccessfully: 'GitOps Server {{name}} updated successfully'
deletedGitOpsServerSuccessfully: 'GitOps Server {{name}} deleted'
confirmGitOpsServerDeleteTitle: Delete Server
confirmGitOpsServerDelete: Are you sure you want to delete the GitOps Server
duplicateIdError: 'Failed to create Adapter: {{ providerName }}. There is already an Adapter with identifier {{ providerIdentifier }} present. Please provide a new unique identifier and save again.'
duplicateGitOpsServerIdError: 'Failed to create GitOps Server: {{ providerName }}. There is already a server with identifier {{ providerIdentifier }} present. Please provide a new unique identifier and save again.'
connectionIssueSuggestion: 'Try these suggestions <ul> <li> Install the Adapter. Follow the <a target="_blank" href="https://docs.harness.io/article/bymoar4glr-argo#step_2_install_and_launch_the_ecs_delegate"> steps </a>  </li> <li> Make sure the Adapter URL is reachable from your network </li> </ul>'
connectionIssueInfo: 'Issue could be <ul> <li> Adapter is not installed or not running </li> </ul>'
searchPlaceholder: 'Search by name, description or tag'
gitOpsWizardTitle: 'Adapter'
harnessManagedGitOpsWizardTitle: 'Harness Managed GitOps Server'
notReachable: 'Could not reach the Adapter at URL: '
adapterDelete: 'Adapter {{adapterName}} deleted'
GitOpsServerDelete: 'GitOps Server {{adapterName}} deleted'
testConnectionStepName: 'Trying to reach the Adapter at URL: {{url}}'
setupGitOpsServerStep: 'Setup GitOps Server'
whatIsHarnessManagedGitOpsServer: 'What is a Harness Managed GitOps Server?'
aboutHarnessManagedGitOpsServer: 'The Harness GitOps Server is a worker process that runs in your environment and performs GitOps tasks.'
componentsInstalled: '<ul> <li> GitOps agent </li> <li> Repo server </li><li> Redis cache </li> <li> Application controller  </li> </ul>'
requiredPermissions: '<ul> <li> Permission to create Deployment, Service, Statefulset, Network Policy, Service Account, Role, ClusterRole, RoleBinding, ClusterRoleBinding, ConfigMap, Secret (For the Harness GitOps Server) </li> <li> Permission to apply CustomResourceDefinition For the Harness GitOps Server) </li> </ul>'
featureRestriction:
  banners:
    serviceLevelUp: 'You have used {{ serviceLimit }} services included in the free plan. Consider upgrading to unlock more services.'
    serviceLevelUpTeamEnterprise: 'You have used {{ serviceLimit }} services included in the team plan. Consider upgrading to unlock more services.'
    deploymentsPerMonthLevelUp: 'You have used {{ count }} / {{ deploymentsLimit }} free deployments this month. Consider upgrading for unlimited deployments.'
    serviceAndDeploymentsLevelUp: 'You have used {{ deploymentsLimit }} free deployments this month and {{ serviceLimit }} free services. Consider upgrading for higher limits.'
    serviceWarningActive: You have used {{ warningLimit }}% of your service subscription limit.

    dpmWarningActive: You have used {{ count }} / {{ warningLimit }} free deployments this month.
    initialDeploymentsWarningActive: You have used {{ warningLimit }}% of deployments included in the free plan. After 1,000 deployments, the free plan will be restricted to 100 deployments per month.
    serviceOveruseTeamEnterprise: You have exceeded your service subscription limit. Consider increasing your limits to keep shipping.
configFileDetails: 'Config File Details'
terraformConfigFileStore: 'Specify Terraform Config File Store'
terragruntConfigFileStore: 'Specify Terragrunt Config File Store'
terraformConfigFileStepOne: 'Terraform Config Store'
terragruntConfigFileStepOne: 'Terragrunt Config Store'
configFileStoreTitle: 'Config File'
backendConfigFileDetails: 'Backend Config File Details'
backendConfigFileStore: 'Specify Terraform Backend Config File Store'
backendConfigFileStepOne: 'Terraform Backend Config Store'
backendConfigFileStoreTitle: 'Backend Config File'
selectRepository: Select a repository
fetchingRepository: Fetching repositories...
selectArtifact: Select an artifact
artifactName: Artifact Name
selectArtifactSource: Select Artifact Source
artifactFormErrors:
  artifactFilePath: Enter the artifact path. You can use wildcards such as `todo/*/*`
  repositoryName: Repository name is required
  artifactName: '{{$.validation.nameRequired}}'
serviceList:
  noIdentifier: Selected service does not have any identifier associated with it.
artifactRepoTooltip: Enter the name of the repository where the artifact source is located.
serverlessDeployCommandOptions: Serverless Deploy Command Options
useConnectorCredentials: 'Use Connector Credentials'
configurationVariable: Configuration Variable
overrideValue: Override Value
overrideType: Override Type
environment:
  delete: '{{ $.common.deleteEnvironment.title }}'
  deleteConfirmation: Are you sure you want to delete this Environment?
  deleted: Successfully deleted Environment {{ identifier }}
  fetchNext: Fetching Environments
  createSubTitle: An environment is the representation of where your deployments take place
  filters:
    environmentNamePlaceholder: Enter Environment Name
serviceOverrides:
  variableOverrides: Variable Overrides
  manifestOverrides: Manifest Overrides
  configFileOverrides: Config File Overrides
  configFileSelection: Config File Selection
  newConfigFile: New Config File
  helperText: Override existing variables or define new variables based on the selected service
  deleted: Successfully deleted Service Override
  deletedOneVariable: Successfully deleted variable from service override
infrastructure:
  infrastructureDefinitions: Infrastructure Definitions
  infrastructureDetails: Infrastructure Details
  noInfrastructureInEnvironment: You have no infrastructures in this environment
  createNew: Create New Infrastructure
  edit: Edit Infrastructure
  created: Successfully created Infrastructure {{ identifier }}
  updated: Successfully updated Infrastructure {{ identifier }}
  delete: Delete Infrastructure
  deleteConfirmation: Are you sure you want to delete this Infrastructure?
  deleted: Successfully deleted Infrastructure {{ identifier }}
  sshWinRmAzure:
    cloudProvider: Cloud Provider
    hostConnectionAttributes: Host Connection Attributes
    hostConnectionType: Host Connection Type
    noTagsAzure: No Tags found with given Connector and Subscription Id
cloudFormation:
  createDescription: Provision resources using a CloudFormation template.
  deleteDescription: Remove any CloudFormation stack you provisioned via Harness or other methods.
  rollbackDescription: Roll back CloudFormation-provisioned resources to the last successful deployment of this stage.
  cfTemplateFile: Cloud Formation Template File
  templateFile: Template File
  specifyTemplateFile: Specify Template File
  stackName: Stack Name
  specifyCapabilities: Specify Capabilities
  parameterFiles: Cloud Formation Parameter Files
  parameterFileDetails: Parameter File Details
  overrideParameterFileDetails: Override Parameter File Details
  specifyParameterFiles: Specify Parameter Files...
  inlineParameterFiles: CloudFormation Parameters Overrides
  specifyInlineParameterFiles: Specify Inline Parameters...
  continueStatus: Continue Based on Stack Statuses
  paramFileConnector: Parameter File Connector
  templateFileConnector: Template File Connector
  templateFileStore: Template File Store
  retrieveNames: Retrieve Names from template
  awsURL: S3 URL
  urls: URLs
  parameterFilePaths: Parameter File Paths
  remoteTags: Specify Remote Tags File...
  tagsConnector: Tags Connector
  tagsFileStore: Tags File Store
  remoteTagsConnector: Remote Tags Connector
  remoteTagsFileStore: Remote Tags File Store
  remoteTagsDetails: Remote Tags
  remoteTagsFilePath: Remote Tags File Path
  remoteTagsUrlPath: Remote Tags S3 URL
  errors:
    region: AWS Region is required
    role: Role ARN required
    stackName: Stack Name is required
    name: Name cannot be empty
    value: Value cannot be empty
    templateBody: Template body required
    awsURL: S3 url required
    getParam: AWS Connector, Region and Template File are required to retrieve parameters
    templateRequired: Template file required
  deploymentTypes:
    pdc: PDC
gitOpsCluster: 'GitOps Clusters'
selectGitopsCluster: 'Select GitOps Clusters to add to Environment'
agentID: Agent Id
linked: Linked
clustersSelected: 'Clusters Selected'
selectClusterLabel: 'Select Cluster(s)'
noLinkedClusters: 'No Linked Clusters Available'
selectedLabel: 'Selected'
successfullyLinkedClusters: 'Successfully Linked Clusters'
unLink: 'UnLink'
unLinkedCluster: 'Unlinked Successfully'
overrideYaml: Override Yaml Values
manifestId: Manifest Id
azureWebAppRollbackDescription: Rollback to the last successfully deployed app.
azureWebAppSwapSlotDescription: Azure Swap environment slot with new instance.
asgCanaryDeleteStepDescription: Asg Canary Delete
asgRollingDeployStepDescription: Asg Rolling Deploy
asgRollingRollbackStepDescription: Asg Rolling Rollback
asgBlueGreenRollbackStepDescription: Asg Blue Green Rollback
asgBlueGreenSwapServiceStepDescription: Asg Blue Green Swap Service
downsizeOldAsg: Downsize old ASG
asgBlueGreenDeployStepDescription: Asg Blue Green Deploy
minimumHealthyPercentageMaxLimit: Minimum Healthy Percentage should be less than 100%
minimumHealthyPercentageMinLimit: Minimum Healthy Percentage should be positive percentage
instanceWarmupError: Instance Warmup must be a positive number
useAlreadyRunningInstance: Same as already running Instances
instanceRefresh: Instance Refresh Configuration
minimumHealthyPercentageLabel: Minimum Healthy Percentage (Optional)
minimumHealthyPercentagePlaceholder: Minimum Healthy Percentage
instanceWarmupLabel: Instance Warmup (Optional)
instanceWarmupPlaceholder: Instance Warmup
loadBalancerConfig: Load Balancer Configuration
skipMatchingLabel: Skip Matching
k8sDryRunStepDescription: Perform a dry run on the manifests configured for this stage.
getStartedWithCD:
  cdWizardEventName: CD Wizard - {{ eventName }}
  creatingApp: Creating Application in progress
  main: main
  installationInstructions: Installation Instructions
  clusterRepo: Cluster Repo
  destinationDetails: Destination Details
  gitURL: Git URL
  sourceDetails: Source Details
  hostedGitopsAgent: Hosted GitOps Agent
  applicationDetails: Application Details
  syncCompleteMessage: Application sync has been triggered successfully
  provisionedSuccessfully: provisioned successfully
  selectAuthenticationType: Select Authentication Type
  failedToProvisionCluster: Failed to provision cluster
  provisioningInProgress: Provisioning in progress
  createHostedCluster: Connect to Cluster
  retryProvisioningHostedCluster: Retry provisioning cluster
  clustersCount: 'You currently have {{target}} cluster(s), would you like to connect it to?'
  backToRepoList: < Back to existing repo selection
  backToClusterList: < Back to existing cluster selection
  sampleRule1: Login to your git account and clone the sample app repository below.
  sampleRule2: Set your repository name any as you desire
  sampleRule3: Under Privacy, Select "Public"
  sampleRule4: Click "Begin Import"
  sampleRule5: Tell us your new repository
  sampleRepoLink: https://github.com/wings-software/gitops-demo.git
  useSample: Sample Source
  provideMyOwn: Own Source
  sourceOrSampleCode: Would you like to use your own source code or sample code?
  clusterSpec1: 4GB Memory
  clusterSpec2: 2 CPU
  clusterSpec3: 1 worker node
  clusterSpecInfo: This specification is sufficient for you to host a basic hello world application
  clusterspec: Cluster Specifications
  managedCluster: Make use of our managed cluster to facilitate your deployment if youâ€™re trying out Harness CD-GitOps for the first time, this will expire after X days! Learn more
  ipWhitelist1: 'You will be required to '
  ipWhitelist2: ' for Harness to connect to your cluster'
  setupIPWhitelist: Set up IP Whitelisting
  tryAnotherCreds: Not the right authentication? Switch account here!
  master: master
  targetRevision: Target Revision
  anonymous: Anonymous
  usernameAndPassword: Username & Password
  clickForOtherDeploymentTypes: Click here for other deployment types
  createCluster: Create a cluster if needed
  failedToAuthenticate: Failed to authenticate to
  createdSuccessfully: created successfully
  testesSuccessfully: tested successfully
  successfullyAuthenticated: Successfully authenticated to
  failedSourceText: Still failed to authenticate despite having entered the correct credentials? Hereâ€™s what you can try to do..
  checkAnnonymously: Connect Annonymously
  checkAuthSettings: Check to ensure thereâ€™s sufficient access/authorization settings in your git repo.
  awsRegionHelperText: replace REGION with your AWS region, for example us-west-1
  azureAKSHelperText: replace myResourceGroup with your AKS resource group
  googleGKEHelperText: replace ZONE with your GCP region, for example us-central1-c
  onboardingTitle: Start your deployments journey with Harness CD
  onBoardingSubTitle: Define and manage your deployment pipelines to deliver software faster, with visibility and control
  gitopsOnboardingAgentStep: Connect to Harness by provisioning hosted Agent
  gitopsOnboardingSelectAgent: Select existing agent
  gitopsOnboardingSource: Where is your source?
  gitopsOnboardingDestination: Where to deploy to?
  gitopsOnboardingConfigureStep: Configure the source and destination
  gitopsOnboardingDeployStep: You are all set!
  runDelegateSubtitle: You can install the Delegate in your target environment.
  haveGitRepo: Do you have a git repo you can connect to?
  selectAuthType: How would you like to authenticate?
  doesntHaveGitRepo: No, connect to sample source
  delegateInstalled: Delegate installed successfully
  selectDeploymentType: Select deployment type
  deployToGitops: Do you want to deploy using GitOps?
  helm: Helm
  manifestTypeSelection: Manifest type
  manifestStoreLabel: Manifest location
  selectAuthMethod: Select an authentication method
  registryDetails: Registry details
  repoDetails: Repository details
  gitopsRedirect:
    title: Deploy with Gitops
    subtitle: You will be redirected to Gitops section. Are you sure you want to leave this page?
  closeOnboarding:
    title: Leave Onboarding Process?
    subtitle: You are about to leave without having set up a pipeline for deployment. Are you sure you want to leave anyway?
  inHarnessFileStore: Use the sample manifest files to deploy the sample service, or your own service.
  environmentDetails: Environment details
  entityCreationTitle: 'The following Harness entities have automatically been created for you:'
  delegateRunAs: Delegate run as
  artifactStorage: Artifact storage
  manifestStorage: Manifest storage
  serviceConfiguration: Service Configuration
  allSet: Your pipeline is ready to go!
  successFull: successful
  connectTo: 'Connect to a {{entity}}'
  deploymentType: Deployment type
  serviceName: Service name
  selectArtifactRepo: Select your artifact repository
  artifactToDeploy: Do you have an artifact to deploy?
  workloadDeploy: What workload would you like to deploy?
  serviceDeploy: Where do you want to deploy your service?
  serviceHeading: What is the name of your Service?
  configureRepo: Configure Repository
  manifestFile: Configure Infra
  serverless: Serverless Function
  artifactLocation: Where is your Artifact?
  codeRepos: Where is your code repository?
  inManifest: In Manifest
  inManifestContent: Harness can take your existing Kubernetes manifests and can proceed to deploy with them
  artifactManifest: Artifact + Manifest
  artifactManifestContent: Harness can take your existing Kubernetes manifests and artifacts and can proceed to deploy with them
  provideManifest: Provide Manifest Details
  reposubheading: We need to connect to your repo to access serverless.yaml file
  directK8s: Direct K8s
  googleK8s: Google K8s Engine
  azureK8s: Azure K8s Engine
  awsElasticK8s: AWS Elastic K8s Service
  envName: Environment Name
  infraName: Infrastructure Name
  setupDelegate: Setup Delegate
  delegateInfo1: Harness Continuous Delivery empowers teams to deliver new features, fast and securely. The first step to creating deployment pipelines is connecting to your target environment by installing a Harness Delegate.
  delegateInfo2: The delegate is a worker process that runs on your infrastructure execute tasks on your infrastructure on behalf of Harness platform.
  delegateNotConnected: Delegate not connected
  delegateRequiredWarning: The delegate is not successfully connected, you will not be able to deploy without a delegate. Are you sure you want to continue?
  setupaNewDelegate: + Setup a New Delegate
  viewDelegateDetails: View Delegate Details
  hideDelegateDetails: Hide Delegate Details
  checkDelegateInstalled: Checking for the delegate. Installation takes a minute or two.
  testConnection: Test connection
  harnessFileStore: Harness Filestore
  sampleManifest: Sample manifest
  sampleManifests: Sample Kubernetes Manifest
  sampleToDoListApp: Sample To Do List App
  sampleAppOnDockerRegistry: Sample Artifact on DockerHub
  delegateSuccess: The delegate is installed. Next you can configure the service.
  connectHarnessEnv: Connect Harness to your environment
  installDelegateToTargetEnv: Install a Harness Delegate in your target environment.
  delegateDescription: Run the Harness Delegate in your Kubernetes cluster directly in order to deploy your app. You can install the Harness Delegate with a Helm chart by copying and running the commands below in your Kubernetes cluster.
  helpAndTroubleshoot: Help & Troubleshoot
  hostedAgentExplain: What is it?
  hostedAgentExplainContent: Harness hosts and manages your GitOps agent, making set up easy with zero maintenance
  hostedAgentInstall: What will be Provisioned
  hostedAgentInfoTitle: What you need to do
  gitOpsAgent: GitOps agent
  repoServer: Repo server
  redisCache: Redis cache
  applicationController: Application controller
  provisioningText: Provisioning these components will take up to 5 minutes
  setupIPWhiteListing: Set up IP Whitelisting for Harness to connect to your cluster
  agentProvisionedSuccessfully: Your agent has been provisioned successfully
  agentSetupTimeInfo: This process may take up to 1 minutes to complete. While the agent is being provisioned, please set up IP Whitelisting so Harness can connect to your cluster
  ensureFullConnectivity: To ensure the full connectivity, please make sure you have set up IP Whitelisting before moving to the next step
  harnessHosted: Harness hosted
  selfManaged: Self-managed
  nameYourCluster: Name your cluster
  connectionStatus: Connection Status
  healthStatusLabel: Health Status
  mappedHarnessProjects: Mapped Harness projects
  disconnected: Disconnected
  syncApplication: Create and Sync Application
  healthStatus:
    degraded: Degraded
    healthy: Healthy
    missing: Missing
    progressing: Progressing
    suspended: Suspended
    unknown: Unknown
  checkAgentStatus: Checking if the agent has been installed. This process may take upto 2-5 minutes to complete
  agentInstalled: GitOps agent installed
  repoServerInstalled: Repo server installed
  redisCacheInstalled: Redis cache installed
  appControllerInstalled: Application controller installed
  serviceDescription: A Service represents what you're deploying. It contains a code description of your deployment and a link to what you want to deploy.
  artifactDescription: The artifact is the image you are deploying. If your Docker image location is hardcoded in your manifest files, you do not need to provide artifact details.
  manifestDescription: A manifest is a YAML description of your deployment.
  useOwnManifest: Use my own manifest
  connectOwnArtifact: Connect my own artifact
  artifactInManifest: No, it is hard-coded in my manifest
  giveSample: Give me a Sample
  artifactReferencedInManifest: Fantastic! If your artifact is already referenced in your manifest you are ready to continue to the next step.
ecsRollingDeployStep:
  sameAsAlreadyRunningInstances: Same as already running instances
  forceNewDeployment: Force new deployment
ecsBGSwapTargetGroupsStep:
  doNotDownsizeOldService: Do not downsize old service
serviceName: '{{ $.common.serviceName }}'
skipRendering: Skip K8s Manifest(s) Rendering
credentialsRef: credentialsRef
connectorRefText: connectorRef
loadingDelegate: Please Wait, Creating a Delegate for you...
fetchingDelegate: Please wait, fetching delegate details for you...
fetchingAgent: Please wait, fetching agent details for you...
hosts: hosts
hostFilters: hostFilters
attributeFilters: attributeFilters
azureArmRollback:
  description: Restore the Azure ARM resource group to its previous running state.
azureBlueprint:
  description: Build Azure Blueprint artifacts to rapidly build and start up new environments.
  templateFileSource: Template File Source
  templateFileDetails: Template File Details
  specifyTemplateFileSource: Specify Azure Blueprint Template File
  azureBlueprintTemplate: Azure Blueprint Template
  assignmentName: Assignment Name
  assignmentNameError: Assignment Name Required
  configuration: Azure Blueprint Configuration
  managementGroup: Management Group
  templateFolderPath: Template Folder Path
validation:
  keyData: Key data is required
  certData: Cert data is required
  authType: Auth Type is required
  clusterType: Cluster Type is required
  specifyFilter: Specify the filter condition
welcomeMessage: Welcome to Harness
welcomeToHarnessCD: Welcome to Harness Continuous Delivery!
runDelegate: How do you want to install the Delegate?
installDelegate: Install Delegate
instructionsDelegate: Install the Delegate
previewYAML: '{{ $.common.previewYAML }}'
installCluster: Install on your Cluster
checkCluster: Set up and connect to your target cluster.
delegateInstallCommand: 'Install the Delegate with the following command:'
delegateConnectionWait: Wait for the Delegate to register
delegateFailText1: Harness Delegate Failed to connect to our Harness SaaS. Please make sure the infrastructure the delegate is installed on can reach https://app.harness.io

pipelineCreation: Please proceed to creating your first pipeline
instructionsCluster: Set up and connect to your target cluster
googleK8sService: Google K8s Service
amazonElasticK8sService: Amazon Elastic K8s Service
azureK8sService: Azure K8s Service
minikube: Minikube
delegateWarning: Waiting for Delegate to connect. Visit Project Setup -> Delegates to check the status of delegate connection.
gCloud: Make sure Gcloud is installed.
kubectl: Install Kubectl
kubectlCommand: gcloud components install kubectl
oauthPlugin: Install Google auth plugin to the cluster
oauthPluginCmd: gcloud components install gke-gcloud-auth-plugin
clusterVerify: Verify the connection to the cluster
gcloudClusterCreate: gcloud container clusters create mycluster --machine-type n1-standard-2 --num-nodes 2 --zone ZONE
gcloudClusterList: gcloud container clusters list
gcloudClusterCmd: gcloud container clusters get-credentials CLUSTER_NAME
kubectlNamespace: kubectl get namespaces
pluginVersion: gke-gcloud-auth-plugin --version
awsCli: Make sure the aws cli and eksctl and are installed
awsClusterCreate: eksctl create cluster --name mycluster --version 1.18 --region REGION --nodegroup-name standard-workers --node-type t3.xlarge --nodes 2 --nodes-min 1 --nodes-max 3 --node-ami auto
amazonElasticCmd: eksctl utils write-kubeconfig --cluster=delegate
azureCli: Make sure the Azure CLI is installed
azureCliCmd: az aks install-cli
azureCmd: az aks create -g myResourceGroup -n myAKSCluster --enable-managed-identity --node-count 2 --enable-addons monitoring --enable-msi-auth-for-monitoring  --generate-ssh-keys
kubectlNodes: kubectl get nodes
miniKube: Install Minikube
miniKubeCmd1: curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
miniKubeCmd2: sudo install minikube-linux-amd64 /usr/local/bin/minikube
miniKubeCmd3: minikube start --memory 4g --cpus 4
miniKubeCmd4: kubectl get pods -A
deploymentSteps: Deployment Steps
useStepTemplatesForYourDeploymentType: Use step templates for your deployment type here
removeStepTemplate: Remove Step Template
duplicateStep: Step with same name already exists
removeStepTemplateConfirmationLabel: 'Are you sure you want to remove linked step template ?'
apiParameters: API Parameters
artifactSource:
  artifactRepositoryTypeIsRequired: Artifact Repository Type is required
azureArm:
  description: Deploy resources using Azure Resource Manager (ARM).
  location: Location
  templateFile: ARM Template File
  templateFileSource: '{{ $.cd.azureBlueprint.templateFileSource }}'
  templateFileDetails: '{{ $.cd.azureBlueprint.templateFileDetails }}'
  paramFileSource: Parameter File Source
  specifyTemplateFile: Specify ARM Template File
  specifyTemplateFileSource: Specify Template File Source
  paramFile: ARM Parameter File
  paramFilePath: Parameter File Path
  specifyParameterFile: Specify ARM Parameter File
  managementGroup: '{{ $.cd.azureBlueprint.managementGroup }}'
  tenant: Tenant
  required: '{{name}} is Required'
removeStepTemplateSuccess: Step Template has been successfully removed
createAndUseTemplate: Create and Use Template
ignoreReleaseHistFailStatus: 'Ignore Release History Failed Status'
artifactVersion: 'Version :'
artifactPath: 'Path :'
logoOfName: 'Logo of {{name}}'
deploymentTemplates: 'Deployment Templates'
environmentDetailPage:
  infraSlashCluster: Infra / GitOps Cluster
  selectArtifactMsg: 'Select an Artifact to view instance details'
  noInstancesToShow: No Instances to show
  seeFull: See full
  viewInTable: 'View in table'
  noServiceArtifactMsg: 'There is no service and artifact details present'
  emptyInstanceDetailMsg: 'Empty instance detail'
  emptyServiceDetailMsg: 'There are no services with instances in this environment.'
ElastigroupStep:
  appName: App Name
  minInstances: Min Instances
  maxInstances: Max Instances
  desiredInstances: Desired Instances
  valueCannotBeLessThan: '{{value}} cannot be less than {{value2}}'
  valueCannotBeGreaterThan: '{{value}} cannot be greater than {{value2}}'
  valueCannotBe: '{{value}} cannot be empty, string etc., should only be a non-negative number'
ElastigroupSwap:
  downsizeOldElastigroup: Downsize old Elastigroup
oldService: Old Service
ElastigroupBGStageSetup:
  connectedCloudProvider: Connected Cloud Provider
  awsLoadBalancerConfig: AWS Load Balancer Configuration
  awsLoadBalancer: AWS Load Balancer
  configureProductionListener: Configure your Production Listener
  configureStageListener: Configure your Stage Listener
  listenerColon: 'Listener :'
  ruleColon: 'Rule :'
moduleConfiguration: Module Configuration
inlineEntityFilters:
  filterIdentifier: Filter identifier
  enterFilterIdentifier: Enter filter identifier
  validation:
    filterIdentifierRequired: Filter identifier is required
    filterIdentifierAlreadyExists: Filter with same identifier already exists
    selectAtleastOneEntity: Atlteast 1 entity is required
    tagsAreRequired: Tags are required
    chooseAllOrAny: Please choose one of All or Any
  valueCannotBe: '{{value}} cannot be empty, string etc., should only be a positive number'
trendMessage:
  upTrend: 'Percent increase in rate compared to the previous time interval'
  downTrend: 'Percent decrease in rate compared to the previous time interval'
  noChangeTrend: 'No change in rate compared to the previous time interval'
  invalidTrend: 'No trend data in the previous time interval'
envChanges: 'Environment Changes'
valuesYamlValidation: 'Values.yaml file path cannot be empty'
infra: infra
pipelineId: 'Pipeline ID: '
openExecution: 'Open Execution'
openTask:
  notificationImgAlt: Notification Image
  notificationPopoverExpression: Psst!
  notificationPopoverMsg: You can still access and manage your open tasks here.
  notificationPopoverBtn: Got it
  bannerMsg: '{{count}} Open tasks requiring your attention.'
  seeOpenTask: See Open Tasks
  title: Open Tasks
  openTaskEmptyStateMsg: Hurray! You have no open tasks.
  openTaskStatusMsgFailed: 'deployment failed'
  openTaskStatusMsgExpired: 'deployment expired'
  openTaskStatusMsgAbortedByFreeze: 'deployment aborted by freeze'
  openTaskStatusMsgAborted: 'deployment aborted'
  openTaskStatusMsgApprovalWaiting: 'deployment waiting for approval'
since: Since
noInfraInputsWhenDeployingToAllInfra: No infrastructure inputs are required when deploying to all infrastructures under this environment
changingTaskDefinitionTypeWarningTitle: 'Changing Task Definition Type?'
changeTaskDefinitionTypeWarning: If you move to {{nextSection}} section, you will loose your {{currentSection}} value. Do you still want to continue?
identifiersDoNotExist: The following {{ entity }} identifier(s) do not exist - {{ nonExistingIdentifiers }}. Please remove them from the yaml before proceeding.
