allowSimultaneousDeployments: Allow simultaneous deployments on the same infrastructure
continuous: '{{$.common.purpose.cd.continuous}}'
learnMore: Learn more about Continuous Delivery
moreIssue: '+ {{count}} More Issue'
moreIssues: '+ {{count}} More Issues'
dynamicProvisioning: Dynamic provisioning
deleteSourceBranch: Delete Source Branch
dashboard:
  subHeading: Let Harness take your software release process to the next level with Continuous Delivery
  createProject: '{{$.createProject}}'
  orSelectExisting: '{{$.orSelectExisting}}'
steps:
  common:
    clusterDetails: Cluster Details
    selectOrEnterClusterPlaceholder: Select or add Cluster
    releaseNamePlaceholder: Enter Release Name
    specifyCredentials: Specify Credentials
    undefinedType: Undefined deployment type
    enableKubernetesPruning: 'Enable Kubernetes Pruning'
  commands:
    runTheCommands: Run the following commands
    addCommand: Add Command
    editCommand: Edit Command
    sourceTypeLabel: Select file type to copy
    destinationPath: Destination Path
    destinationPathPlaceholder: Enter Destination Path
    scriptTypePlaceholder: Enter Script Type
    filesAndPatterns: Files and Patterns
    fileToTail: File to Tail
    patternToSearch: Pattern to Search
    fileToTailPlaceholder: Enter File to Tail
    selectScriptLocation: Select script location
    locationFileStore: Harness File Store
    patternToSearchPlaceholder: Enter Pattern to Search
    runOnDelegate: Run on Delegate
    validation:
      sourceTypeRequired: Source Type is required
      destinationPathRequired: Destination Path is required
  kubernetesGcpStep:
    stepName: Specify your GCP Connector
  pdcStep:
    no: No.
    hostsPlaceholder: Specify list of host names here (comma separated)
    specificHostsPlaceholder: Specify list of comma separated hosts here
    attributesPlaceholder: Specify list of comma separated attributes and values. E.g. hostType:DB, region:west
    specifyHostsOption: Specify hosts
    preconfiguredHostsOption: Select preconfigured hosts from Physical Data Center
    pdcConnectorLabel: Physical Datacentar Connector
    includeAllHosts: Include all hosts
    filterHostName: Filter by host name
    filterHostAttributes: Filter by host attributes
    specificHosts: Specific Hosts
    specificHostsOptional: Specific Hosts (Optional)
    specificAttributes: Specific Attributes
    specificAttributesOptional: Specific Attributes (Optional)
    hostsOptional: Hosts (Optional)
    previewHosts: Preview Hosts
    noHosts: No hosts provided
  azureInfraStep:
    azure: 'Microsoft Azure'
    subscription: '{{ $.common.subscriptionId }}'
    subscriptionPlaceholder: '{{ $.common.subscriptionPlaceholder }}'
    resourceGroupPlaceholder: 'Select or specify Resource Group'
    resourceGroupError: 'No resource groups found with given Subscription'
    clusterError: 'No cluster found with given Resource Group'
  azureWebAppInfra:
    azureWebApp: 'Azure Web App'
    subscription: '{{ $.common.subscriptionId }}'
    subscriptionPlaceholder: '{{ $.common.subscriptionPlaceholder }}'
    webAppPlaceholder: 'Select or add Web App Name'
    deploymentSlotPlaceHolder: 'Select or add Deployment Slot'
    targetSlotPlaceHolder: 'Select or add Target Slot'
    targetSlotInfoText: 'Target Slot is required for Swap Slot Step'
    webAppNameError: 'No web app names groups found with given Resource Group'
    deploymentSlotError: 'No deployment slots groups found with given Web App Name'
    targetSlotError: 'No target slots found with given Web App Name'
    webAppInfraheader: 'Web App Infrastructure Details'
  serverless:
    regionPlaceholder: Specify a region
    stagePlaceholder: Specify a stage
  awsInfraStep:
    regionError: Error fetching regions
    placeholders:
      loadBalancer: Select Load Balancer
      connectionAttribute: Select Connection Attribute
      hostName: Type Host Name Convention
      autoScallingGroup: Select Auto Scalling Group
      vpcs: Select VPCs
    labels:
      connectionAttribute: Connection Attribute
      useAutoScallingGroup: Use Auto Scalling Group
      autoScallingGroup: Auto Scalling Group
      useAwsInstanceFilter: Use AWS Instance Filter
      hostName: Host Name Convention
      vpcs: VPCs
  ecsRunTaskStep:
    ecsRunTaskDefinition: ECS Run Task Definition
    runTaskDefinition: Run Task Definition
    ecsRunTaskRequestDefinition: ECS Run Task Request Definition
    runTaskRequestDefinition: Run Task Request Definition
    skipSteadyStateCheck: Skip Steady-State Check
  ecsBGCreateServiceStep:
    sectionHeaders:
      configureProductionService: Configure your Production Service
      configureStageService: Configure your Stage Service
    labels:
      elasticLoadBalancer: Elastic Load Balancer
      prodListener: Prod Listener
      prodListenerRuleARN: Prod Listener Rule ARN
      stageListener: Stage Listener
      stageListenerRuleARN: Stage Listener Rule ARN
filePathPlaceholder: 'Enter path within manifest folder'
resourceCannotBeEmpty: 'Resource cannot be empty'
manifestPathsCannotBeEmpty: 'Manifest Paths cannot be empty'
workloadRequired: Workload is a required field
stepName: Step Name
serviceCreated: '{{ $.common.serviceCreated }}'
serviceUpdated: '{{ $.common.serviceUpdated }}'
environmentCreated: '{{ $.common.environmentCreated }}'
environmentUpdated: '{{ $.common.environmentUpdated }}'
preProduction: '{{ $.common.preProduction }}'
preProductionType: 'Pre-Prod'
environmentDelete: '{{ $.common.deleteEnvironment.title }}'
environmentDeleteMessage: 'Are you sure you want to delete environment <strong>{{name}}</strong>?'
namespaceValidation: Namespace must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc')
releaseNameValidation: Release name must consist of lowercase alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. http://example.com). Harness evaluates the release name using the regex [a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*
cdTrialHomePage:
  startTrial:
    description: Take your software build processes to the next level using our Harness Continuous Delivery.
    startBtn:
      description: Start 14 day CD Enterprise trial
cdSwitchToFirstGen:
  description1: Harness Continuous Delivery First Generation is our dedicated industry leading Continuous Delivery Platform.
  description2: Donâ€™t worry, you can switch back to the Next Generation Platform at any time to get access to additional integrated Harness modules and features.
  description3: Pipelines are not transferable between First and Next Generation platforms
  description4: You are currently in the new and exciting Continuous Delivery NexGen platform. The platform is rapidly evolving to support all popular deployment types. The deployment types below are availible on our existing First Generation platform.
  startWith14DayTrial: Start with 14 day Trial
  learnMoreAboutCD1stGen: Learn more about CD First Generation
chooseProvisionerText: What type of provisioner do you want to use?
setUpProvisionerBtnText: Set Up Provisioner

filePathRequired: Atleast one file path is required
pathCannotBeEmpty: File Path cannot be empty
configFilePlaceHolder: 'Specify Config File...'

configIdentifer: Configuration Identifier
addInline: Add Inline
addRemote: Add Remote
tfVarStore: Terraform Var Store
varFileDetails: Var File Details
varFile: Var File
backEndConfig: Backend Configuration
gitFetchTypeRequired: Git Fetch Type Required
specifyTfVarStore: Specify Terraform Var File Store
addTFVarFileLabel: 'Add File Path'
enterWorkDirectory: Enter Working Directory
enterTragets: Enter Targets
exportTerraformPlanJson: Export Json representation of Terraform Plan
specifyTargetHost: Specify Target Host
configurationFile: 'Configuration File Repository'
terraformVarFiles: 'Terraform Var Files'
secretManagerRequired: 'Secret Manager is required.'
pipelineSteps:
  environmentTab:
    specifyYourEnvironment: Specify Environment
    specifyYourEnvironments: Specify Environments
    specifyYourEnvironmentGroup: Specify Environment Group
    specifyYourInfrastructure: Specify Infrastructure
    specifyYourInfrastructures: Specify Infrastructures
    specifyEnvironmentOrGroup: Specify environment or environment group
    specifyGitOpsClusters: Specify GitOps Clusters
    selectEnvironment: '- Select Environment -'
    selectEnvironments: '- Select Environments -'
    selectEnvironmentGroup: '- Select Environment Group -'
    selectInfrastructure: '- Select Infrastructure -'
    selectInfrastructures: '- Select Infrastructures -'
    selectInfrastructureType: 'Select Infrastructure Type'
    plusNewEnvironment: '+ {{$.newEnvironment}}'
    newEnvironment: '{{$.newEnvironment}}'
    deployToAll: Deploy in parallel on all infrastructure
    environmentOrEnvGroupAsRuntime: Which of Environment or Environment Group should be marked as runtime?
    allClustersSelected: All Clusters in Environment
    environmentIsRequired: '{{ $.common.validation.environmentIsRequired }}'
    environmentsAreRequired: Environments are required
    infrastructureIsRequired: 'Infrastructure is required'
    infrastructuresAreRequired: 'Infrastructures are required'
    environmentOrEnvGroupIsRequired: 'Environment or Environment Group is required'
    environmentInEnvGroupIsRequired: 'Environment in Environment Group is required'
    environmentGroupIsRequired: 'Environment Group is required'
    clusterIsRequired: 'Clusters are required'
    multiEnvInfraToggleText: 'Deploy to multiple Environments or Infrastructures'
    viewEnvironmentInputs: View environment inputs
    hideEnvironmentInputs: Hide environment inputs
    viewInfrastructureInputs: View infrastructure inputs
    hideInfrastructureInputs: Hide infrastructure inputs
    multiEnvironmentsParallelDeployLabel: Deploy environments in parallel?
    environmentGroupDialogTitleText: Deploy to environment group?
    environmentGroupConfirmationText: Are you sure you want to switch to deploying to a single environment group?. If you choose to proceed, your existing environments will be lost.
    multiEnvironmentsDialogTitleText: Deploy to multiple environments or infrastructures?
    multiEnvironmentsConfirmationText: Are you sure you want to switch to deploying multiple environments or infrastructures?. If you choose to proceed, your existing environment will be migrated automatically.
    singleEnvironmentDialogTitleText: Deploy to single environment?
    singleEnvironmentConfirmationText: Are you sure you want to switch to deploying to a single environment?. If you choose to proceed, your existing environments will be lost.
    deleteEnvironmentFromListDialogTitleText: Remove environment from list?
    deleteEnvironmentFromListConfirmationText: Are you sure you want to remove {{name}} environment from the list?
    deleteInfrastructureFromListDialogTitleText: Remove infrastructure from list?
    deleteInfrastructureFromListConfirmationText: Are you sure you want to remove {{name}} infrastructure from the list?
  serviceTab:
    stageOverrides: Stage Overrides
    overrideChanges: Override artifacts, manifests, service variables for this stage
    deploymentTypeRequired: Deployment type selection is required
    propagateFrom: Propagate from
    differentService: Deploy different Service
    specifyYourService: '{{$.common.selectService}}'
    specifyYourServices: '{{$.common.selectServices}}'
    selectService: '- Select Service -'
    selectServices: '- Select Services -'
    newService: '{{$.newService}}'
    plusNewService: '+ {{$.newService}}'
    serviceIsRequired: Service is required
    aboutYourService: About the Service
    manifest:
      taskDefinition: Task Definition
      serviceDefinition: Service Definition
      scalingPolicy: Scaling Policy
      scalableTarget: Scalable Target
    newServiceOverride: New configuration overrides
    multiServicesText: Deploy to multiple Services
    multiServicesTitleText: Deploy to multiple services?
    multiServicesParallelDeployLabel: Deploy services in parallel?
    multiServicesConfirmationText: Are you sure you want to switch to deploying multiple services?. If you choose to proceed, your existing service will be migrated automatically.
    singleServicesTitleText: Deploy to single service?
    singleServicesConfirmationText: Are you sure you want to switch to deploying to a single services?. If you choose to proceed, your existing services will be lost.
    deleteServiceFromListTitleText: Remove service from list?
    deleteServiceFromListText: Are you sure you want to remove {{name}} service from the list?
    viewServiceInputs: View service inputs
    hideServiceInputs: Hide service inputs
  infraTab:
    deploymentType: Infrastructure type selection is required
    clusterError: No cluster found with given Connector
    stageIsRequired: Stage is required
  executionTab:
    stepsCount: At least one step is required
cdLaunchText: Launch CD First Generation
serviceDashboard:
  activeServiceInstancesLabel: '{{$.common.subscriptions.usage.srvcInst}}'
  servicesInLast: 'Services added in {{period}}'
  serviceInstancesInLast: 'Active service instance trend in {{period}}'
  serviceInstances: 'Service Instances'
  activeInstanceCount: 'Active Instance Count'
  nonProd: 'Non Prod'
  prod: 'Prod'
  in: 'in {{timeRange}}'
  frequency: '{{$.common.frequency}}'
  totalServices: 'Total Services: {{total}}'
  lastDeployment: 'last deployment'
  executionId: 'Execution Id: {{id}}'
  noDeployments: No Deployments in {{timeRange}}
  noServices: No services in {{timeRange}} for given criteria
  noServiceInstances: No Service Instances in {{timeRange}}
  seeMore: '+ {{count}} more'
  buildName: 'Build Name'
  noServiceDetails: No services matching the criteria
  6monthTrend: 6 month trend
  instanceCountHistory: Instance Count History
  instanceDetails: Instance Details
  instancesDetails: Instances Details
  deploymentDetails: Deployment Details
  moreDetails: More Details >
  headers:
    artifactVersion: Artifact Version
    environment: '{{$.environment}}'
    infrastructures: '{{$.common.infrastructures}}'
    infras: Infras
    clusters: '{{$.common.clusters}}'
    instances: '{{$.instanceFieldOptions.instances}}'
    pipelineExecution: Pipeline Execution
  pod: pod
  function: function
  deployedAt: Deployed At
  deployedBy: Deployed By
  host: host
  deploymentSlot: deploymentSlot
  webApp: Web App Name
  artifact: artifact
  totalPipelines: Total Pipelines
  totalDeployments: Total Deployments
  noPipelines: No pipeline execution in {{timeRange}} matches the given criteria
  envName: Env Name
  noActiveServiceInstances: No Active Service Instances
  noActiveServices: No Active Services in {{timeRange}}
  helmChartDetails: Helm Chart Details
  helmChartName: Helm Chart Name
  helmRopoUrl: Repo URL
  manageServiceLabel: Manage Services
  unitDay: '/Day'
  lastPipelineExecution: Last Pipeline Execution
  noLastDeployment: No last deployment exist
  taskDefinitionArn: Task Definition ARN
  taskArn: Task ARN
  awsRegion: AWS Region
  containerList: containerList
noEnvironment:
  title: No Environments Available
  message: Create an environment and letâ€™s start configuring the deployment
gitOps: '{{ $.common.gitOps }}'
addService: Add Service
addEnvironment: Add Environment
editIdError: 'ID: {{id}} cannot be edited'
typeError: 'Type should not be empty and contain either "Production" or "PreProduction"'
newAdapter: New Adapter
newGitOpsServer: New GitOps Server
adapterDetails: Adapter Details
launchArgo: Launch Argo App Dashboard
argoAdapterURL: 'Adapter URL'
noAdapterText: 'There are no adapters in your project'
aboutProvider: 'Adapters help connect to your Argo CD Instance and view your Apps.'
noGitOpsServerText: 'There are no GitOps Servers in your project'
aboutGitOpsServer: 'GitOps description'
installAdapterHelperText: 'Install Argo CD adapter in your cluster. This adapter allows customers to interact with the Argo CD server directly from Harness UI with minimal configuration. <ul> <li> Install one adapter per Argo CD Server. </li> <li> This Adapter should be able to reach the Argo CD Server. </li> <li> The communication between Harness UI to Harness Argo Adapter takes place over HTTPS for security purposes. </li> </ul>'
whatIsHarnessAdapter: 'What is an Adapter?'
aboutHarnessAdapter: 'The adapter is a service you run in your local network or VPC to establish connectivity between Harness UI and Argo CD.'
learnMoreAboutHarnessAdapter: 'Learn More about this'
nameEmptyError: 'Service name cannot be empty'
IdEmptyError: 'Identifier cannot be empty'
updating: 'Updating adapter {{name}}'
creating: 'Creating adapter {{name}}'
createdSuccessfully: 'Adapter {{name}} created successfully'
updatedSuccessfully: 'Adapter {{name}} updated successfully'
deletedSuccessfully: 'Adapter {{name}} deleted'
confirmDeleteTitle: Delete Adapter
confirmProviderDelete: Are you sure you want to delete the Adapter
updatingGitOpsServer: 'Updating GitOps Server {{name}}'
creatingGitOpsServer: 'Creating GitOps Server {{name}}'
createdGitOpsServerSuccessfully: 'GitOps Server {{name}} created successfully'
updatedGitOpsServerSuccessfully: 'GitOps Server {{name}} updated successfully'
deletedGitOpsServerSuccessfully: 'GitOps Server {{name}} deleted'
confirmGitOpsServerDeleteTitle: Delete Server
confirmGitOpsServerDelete: Are you sure you want to delete the GitOps Server
duplicateIdError: 'Failed to create Adapter: {{ providerName }}. There is already an Adapter with identifier {{ providerIdentifier }} present. Please provide a new unique identifier and save again.'
duplicateGitOpsServerIdError: 'Failed to create GitOps Server: {{ providerName }}. There is already a server with identifier {{ providerIdentifier }} present. Please provide a new unique identifier and save again.'
connectionIssueSuggestion: 'Try these suggestions <ul> <li> Install the Adapter. Follow the <a target="_blank" href="https://docs.harness.io/article/bymoar4glr-argo#step_2_install_and_launch_the_ecs_delegate"> steps </a>  </li> <li> Make sure the Adapter URL is reachable from your network </li> </ul>'
connectionIssueInfo: 'Issue could be <ul> <li> Adapter is not installed or not running </li> </ul>'
searchPlaceholder: 'Search by name, description or tag'
gitOpsWizardTitle: 'Adapter'
harnessManagedGitOpsWizardTitle: 'Harness Managed GitOps Server'
notReachable: 'Could not reach the Adapter at URL: '
adapterDelete: 'Adapter {{adapterName}} deleted'
GitOpsServerDelete: 'GitOps Server {{adapterName}} deleted'
testConnectionStepName: 'Trying to reach the Adapter at URL: {{url}}'
setupGitOpsServerStep: 'Setup GitOps Server'
whatIsHarnessManagedGitOpsServer: 'What is a Harness Managed GitOps Server?'
aboutHarnessManagedGitOpsServer: 'The Harness GitOps Server is a worker process that runs in your environment and performs GitOps tasks.'
componentsInstalled: '<ul> <li> GitOps agent </li> <li> Repo server </li><li> Redis cache </li> <li> Application controller  </li> </ul>'
requiredPermissions: '<ul> <li> Permission to create Deployment, Service, Statefulset, Network Policy, Service Account, Role, ClusterRole, RoleBinding, ClusterRoleBinding, ConfigMap, Secret (For the Harness GitOps Server) </li> <li> Permission to apply CustomResourceDefinition For the Harness GitOps Server) </li> </ul>'
featureRestriction:
  banners:
    serviceLevelUp: 'You have used {{ serviceLimit }} services included in the free plan. Consider upgrading to unlock more services.'
    serviceLevelUpTeamEnterprise: 'You have used {{ serviceLimit }} services included in the team plan. Consider upgrading to unlock more services.'
    deploymentsPerMonthLevelUp: 'You have used {{ count }} / {{ deploymentsLimit }} free deployments this month. Consider upgrading for unlimited deployments.'
    serviceAndDeploymentsLevelUp: 'You have used {{ deploymentsLimit }} free deployments this month and {{ serviceLimit }} free services. Consider upgrading for higher limits.'
    serviceWarningActive: You have used {{ warningLimit }}% of your service subscription limit.

    dpmWarningActive: You have used {{ count }} / {{ warningLimit }} free deployments this month.
    initialDeploymentsWarningActive: You have used {{ warningLimit }}% of deployments included in the free plan. After 1,000 deployments, the free plan will be restricted to 100 deployments per month.
    serviceOveruseTeamEnterprise: You have exceeded your service subscription limit. Consider increasing your limits to keep shipping.
configFileDetails: 'Config File Details'
configFileStore: 'Specify Terraform Config File Store'
configFileStepOne: 'Terraform Config Store'
configFileStoreTitle: 'Config File'
selectRepository: Select a repository
selectArtifact: Select an artifact
artifactName: Artifact Name
selectArtifactSource: Select Artifact Source
artifactFormErrors:
  artifactFilePath: Enter the artifact path. You can use wildcards such as `todo/*/*`
  repositoryName: Repository name is required
  artifactName: '{{$.validation.nameRequired}}'
artifactPaths: Artifact Paths
serviceList:
  noIdentifier: Selected service does not have any identifier associated with it.
artifactRepoTooltip: Enter the name of the repository where the artifact source is located.
serverlessDeployCommandOptions: Serverless Deploy Command Options
useConnectorCredentials: 'Use Connector Credentials'
configurationVariable: Configuration Variable
overrideValue: Override Value
overrideType: Override Type
environment:
  delete: '{{ $.common.deleteEnvironment.title }}'
  deleteConfirmation: Are you sure you want to delete this Environment?
  deleted: Successfully deleted Environment {{ identifier }}
  fetchNext: Fetching Environments
  createSubTitle: An environment is the representation of where your deployments take place
  filters:
    environmentNamePlaceholder: Enter Environment Name
serviceOverrides:
  variableOverrides: Variable Overrides
  manifestOverrides: Manifest Overrides
  configFileOverrides: Config File Overrides
  configFileSelection: Config File Selection
  newConfigFile: New Config File
  helperText: Override existing variables or define new variables based on the selected service
  deleted: Successfully deleted Service Override
  deletedOneVariable: Successfully deleted variable from service override
infrastructure:
  infrastructureDefinitions: Infrastructure Definitions
  noInfrastructureInEnvironment: You have no infrastructures in this environment
  createNew: Create New Infrastructure
  edit: Edit Infrastructure
  created: Successfully created Infrastructure {{ identifier }}
  updated: Successfully updated Infrastructure {{ identifier }}
  delete: Delete Infrastructure
  deleteConfirmation: Are you sure you want to delete this Infrastructure?
  deleted: Successfully deleted Infrastructure {{ identifier }}
  sshWinRmAzure:
    cloudProvider: Cloud Provider
    hostConnectionAttributes: Host Connection Attributes
    hostConnectionType: Host Connection Type
    noTagsAzure: No Tags found with given Connector and Subscription Id
cloudFormation:
  createDescription: Provision resources using a CloudFormation template.
  deleteDescription: Remove any CloudFormation stack you provisioned via Harness or other methods.
  rollbackDescription: Roll back CloudFormation-provisioned resources to the last successful deployment of this stage.
  cfTemplateFile: Cloud Formation Template File
  templateFile: Template File
  specifyTemplateFile: Specify Template File
  stackName: Stack Name
  specifyCapabilities: Specify Capabilities
  parameterFiles: Cloud Formation Parameter Files
  parameterFileDetails: Parameter File Details
  overrideParameterFileDetails: Override Parameter File Details
  specifyParameterFiles: Specify Parameter Files...
  inlineParameterFiles: CloudFormation Parameters Overrides
  specifyInlineParameterFiles: Specify Inline Parameters...
  continueStatus: Continue Based on Stack Statuses
  paramFileConnector: Parameter File Connector
  templateFileConnector: Template File Connector
  templateFileStore: Template File Store
  retrieveNames: Retrieve Names from template
  awsURL: S3 URL
  urls: URLs
  parameterFilePaths: Parameter File Paths
  remoteTags: Specify Remote Tags File...
  tagsConnector: Tags Connector
  tagsFileStore: Tags File Store
  remoteTagsConnector: Remote Tags Connector
  remoteTagsFileStore: Remote Tags File Store
  remoteTagsDetails: Remote Tags
  remoteTagsFilePath: Remote Tags File Path
  remoteTagsUrlPath: Remote Tags S3 URL
  errors:
    region: AWS Region is required
    role: Role ARN required
    stackName: Stack Name is required
    name: Name cannot be empty
    value: Value cannot be empty
    templateBody: Template body required
    awsURL: S3 url required
    getParam: AWS Connector, Region and Template File are required to retrieve parameters
    templateRequired: Template file required
  deploymentTypes:
    pdc: PDC
gitOpsCluster: 'GitOps Clusters'
selectGitopsCluster: 'Select GitOps Clusters to add to Environment'
clustersSelected: 'Clusters Selected'
selectClusterLabel: 'Select Cluster(s)'
noLinkedClusters: 'No Linked Clusters Available'
selectedLabel: 'Selected'
successfullyLinkedClusters: 'Successfully Linked Clusters'
unLink: 'UnLink'
unLinkedCluster: 'Unlinked Successfully'
overrideYaml: Override Yaml Values
manifestId: Manifest Id
azureWebAppRollbackDescription: Rollback to the last successfully deployed app.
azureWebAppSwapSlotDescription: Azure Swap environment slot with new instance.
getStartedWithCD:
  workloadDeploy: What workload would you like to deploy?
  serviceDeploy: Where do you want to deploy your service?
  serviceHeading: What is the name of your Service?
  configureRepo: Configure Repository
  manifestFile: Configure Infra
  serverless: Serverless Function
  artifactLocation: Where is your Artifact?
  codeRepos: Where is your code repository?
  inManifest: In Manifest
  inManifestContent: Harness can take your existing Kubernetes manifests and can proceed to deploy with them
  artifactManifest: Artifact + Manifest
  artifactManifestContent: Harness can take your existing Kubernetes manifests and artifacts and can proceed to deploy with them
  provideManifest: Provide Manifest Details
  reposubheading: We need to connect to your repo to access serverless.yaml file
  directK8s: Direct K8s
  googleK8s: Google K8s Engine
  azureK8s: Azure K8s Engine
  awsElasticK8s: AWS Elastic K8s Service
  envName: Environment Name
  infraName: Infrastructure Name
  setupDelegate: Setup Delegate
  delegateInfo: Delegates are worker processes that run on your infrastructure to execute tasks on behalf of the Harness platform.
  delegateRequiredWarning: The delegate is not successfully connected, you will not be able to deploy without a delegate. Are you sure you want to continue?
  setupaNewDelegate: + Setup a New Delegate
ecsRollingDeployStep:
  sameAsAlreadyRunningInstances: Same as already running instances
  forceNewDeployment: Force new deployment
ecsBGSwapTargetGroupsStep:
  doNotDownsizeOldService: Do not downsize old service
serviceName: '{{ $.common.serviceName }}'
skipRendering: Skip K8s Manifest(s) Rendering
credentialsRef: credentialsRef
connectorRefText: connectorRef
loadingDelegate: Please Wait, Creating a Delegate for you...
hosts: hosts
hostFilters: hostFilters
attributeFilters: attributeFilters
azureArmRollback:
  description: Restore the Azure ARM resource group to its previous running state.
azureBlueprint:
  description: Build Azure Blueprint artifacts to rapidly build and start up new environments.
  templateFileSource: Template File Source
  templateFileDetails: Template File Details
  specifyTemplateFileSource: Specify Azure Blueprint Template File
  azureBlueprintTemplate: Azure Blueprint Template
  assignmentName: Assignment Name
  assignmentNameError: Assignment Name Required
  configuration: Azure Blueprint Configuration
  managementGroup: Management Group
  templateFolderPath: Template Folder Path
validation:
  specifyFilter: Specify the filter condition
welcomeMessage: Welcome to Harness
delegateInstallation: Install the Delegate to deploy your cluster
learnMoreDelegate: Learn more about Delegates
runDelegate: How do you want to run the Delegate
installDelegate: Install Delegate
instructionsDelegate: Instructions to Install the Delegate
downloadYAML: DOWNLOAD THE YAML
previewYAML: Preview Yaml
installCluster: INSTALL ON YOUR CLUSTER
checkCluster: Check if you can connect to your cluster
delegateInstallCommand: Install the delegate by running the following command
delegateConnectionWait: WAITING FOR DELEGATE TO CONNECT
delegateFailed: Delegate Failed to connect to Harness
delegateFailText1: Harness Delegate Failed to connect to our Harness SaaS. Please make sure the infrastructure the delegate is installed on can reach https://app.harness.io
delegateFailText2: The Delegate failed to come up on the cluster, please check to see if the pods are healthy or could be scheduled on the cluster
delegateSuccess: Great! You have successfully installed the Delegate.
pipelineCreation: Please proceed to creating your first pipeline
instructionsCluster: Instructions to check if you have access to your cluster
googleK8sService: Google K8s Service
amazonElasticK8sService: Amazon Elastic K8s Service
azureK8sService: Azure K8s Service
minikube: Minikube
delegateWarning: Waiting for Delegate to connect. Visit Project Setup -> Delegates to check the status of delegate connection.
gCloud: Make sure Gcloud is installed.
kubectl: Install Kubectl
kubectlCommand: gcloud components install kubectl
oauthPlugin: Install Google auth plugin to the cluster
oauthPluginCmd: gcloud components install gke-gcloud-auth-plugin
clusterVerify: Verify the connection to the cluster
gcloudClusterCmd: gcloud container clusters get-credentials CLUSTER_NAME
kubectlNamespace: kubectl get namespaces
pluginVersion: gke-gcloud-auth-plugin --version
awsCli: Make sure the aws cli and eksctl and are installed
amazonElasticCmd: eksctl utils write-kubeconfig --cluster=delegate
azureCli: Make sure the Azure CLI is installed
azureCliCmd: az aks install-cli
azureCmd: az aks get-credentials --resource-group myResourceGroup --name myAKSCluster
kubectlNodes: kubectl get nodes
miniKube: Install Minikube
miniKubeCmd1: curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
miniKubeCmd2: sudo install minikube-linux-amd64 /usr/local/bin/minikube
miniKubeCmd3: minikube start
miniKubeCmd4: kubectl get pods -A
deploymentSteps: Deployment Steps
useStepTemplatesForYourDeploymentType: Use step templates for your deployment type here
removeStepTemplate: Remove Step Template
removeStepTemplateConfirmationLabel: 'Are you sure you want to remove linked step template ?'
azureArm:
  description: Deploy resources using Azure Resource Manager (ARM).
  location: Location
  templateFile: ARM Template File
  templateFileSource: '{{ $.cd.azureBlueprint.templateFileSource }}'
  templateFileDetails: '{{ $.cd.azureBlueprint.templateFileDetails }}'
  paramFileSource: Parameter File Source
  specifyTemplateFile: Specify ARM Template File
  specifyTemplateFileSource: Specify Template File Source
  paramFile: ARM Parameter File
  paramFilePath: Parameter File Path
  specifyParameterFile: Specify ARM Parameter File
  managementGroup: '{{ $.cd.azureBlueprint.managementGroup }}'
  tenant: Tenant
  required: '{{name}} is Required'
removeStepTemplateSuccess: Step Template has been successfully removed
createAndUseTemplate: Create and Use Template
ignoreReleaseHistFailStatus: 'Ignore Release History Failed Status'
artifactVersion: 'Version :'
artifactPath: 'Path :'
