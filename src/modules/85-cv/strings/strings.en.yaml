continuous: '{{$.common.purpose.cv.serviceReliability}}'
srmTitle: SRM
methodLabel: Method Label
count: count
request: '{{ $.common.request }}'
response: Response
responseBody: Response Body
dateAndTimeLabel: Date and Time
statusCode: Status Code
failures: Failures
initiated: Initiated
processing: Processing...
verifications: Verifications
verificationStatus: Verification Status
preProductionTests: Pre Production Tests
postDeployment: Post Deployment
logCluster: Log Cluster
logsCluster: Logs Cluster
showMore: '{{ $.common.showMore }}'
showLess: '{{ $.common.showLess }}'
queries: Queries
timeline: Timeline
changeTimeline: Change Timeline
selectedTimeInterval: Selected time interval
anomalous: Anomalous
nonAnomalous: Non-Anomalous
ends: 'Ends:'
share: Share
healthScore: Health Score
clusterType: Cluster Type
sampleMessage: Sample Message
sampleEvent: Sample Event
messageFrequency: Message Frequency
trend: Trend
known: Known
unexpected: Unexpected
knownEvents: Known events
baselineEvents: Baseline events
unknownEvents: Unknown events
unexpectedEvents: Unexpected events
knownEvent: Known event
baselineEvent: Baseline event
unknownEvent: Unknown event
unexpectedEvent: Unexpected event
unexpectedFrequency: Unexpected Frequency
copyURL: Copy URL
urlCopied: URL Copied
copycURL: Copy cURL command
cURLCopied: cURL command Copied
unit: Unit
anomalousMetrics: Anomalous metrics
proceedToEdit: Proceed to Edit
filter: '{{$.common.filter}}'
allMetrics: All Metrics
selectNamespace: Select Namespace
riskTimeline: Risk Timeline
perHeatMapCell: per heat map cell
servicesAtRisk: Services at Risk
searchForAService: Search for a service
trafficSplit: Traffic Split Percentage (optional)
pinABaseline: Pin a baseline
lastSuccessfulRun: Last Successful Job Run
jobNamePlaceholder: Enter a Job Name
identifierPlaceholder: Enter an Identifier
throughput: Throughput
serviceHealthTrend: Service Health Score and SLO Performance Trend
query: Query
selectQuery: Select Query (Optional)
addNew: + Add New
turnService: Turn service
affectedServices: Affected services
showYAMLChange: Show YAML Change
seeYAML: See full event YAML
addGroupName: Please Select Group Name
minimum: Minimum
notificationTimestampError: Notification timestamp greater than chart start time and less than chart end time
serviceDashboardPage:
  fiveMinutes: 5 Minutes
  fifteenMinutes: 15 Minutes
  oneHour: 1 Hour
  fourHours: 4 Hours
  twelveHours: 12 Hours
  oneDay: 1 Day
  sevenDays: 7 Days
  thirtyDays: '{{$.common.30days}}'
  noServicesConfigured: No services have been configured
  goToMonitoringSources: Go to Monitoring Source Page
abbreviatedCategories:
  performance: Perf
  infrastructure: Infra
  errors: 'Err'
thirdPartyCalls:
  modalTitle: Calls to
  timeTaken: Time Taken
  requestMade: Request Made
  noCallsWereMade: No calls were made
metricVerificationModal:
  viewCalls: View calls to {{type}}
  modalTitle: Metric Pack Connection Test
dashboard:
  subHeading: Take your software build verification processes to the next level using our Harness Continuous Verifications
  createProject: '{{$.createProject}}'
  notStarted: Not started
hostNamePlaceholder: '${host}'
harnessService: 'Harness Service'
harnessEnvironment: 'Harness Environment'
selectOrCreateEnv: 'Select or create an environment'
verificationErrored: 'Verification errored'
getRiskAssessment: 'Get risk assessment'
setup: Setup Continuous Verification
riskScore: Risk Score
noAnalysis: No Analysis
noAnomalies: No anomalies detected
overall: Overall
currentProductionRisk: Current Production Risk
evaluationPeriod: Evaluation period
overviewPage:
  recentChangeVerifications: 'Recent Change Verifications'
riskCardTooltip:
  header: Performance risk was computed based on metrics from your data providers
  allServicesGreen: all services green
analysisScreens:
  totalClusters: 'TOTAL CLUSTERS:'
navLinks:
  activities: 'Activities'
  adminSideNavLinks:
    activitySources: 'Change Sources'
    monitoringSources: 'Monitoring Sources'
changesPage:
  changeSourceDetails: 'Change Source Details'
  changeSummary: 'Change Summary'
  eventCount: 'Event Count'
  viewKubernetesEvents: 'View Kubernetes Change Summary'
admin:
  activitySources:
    dialogDeleteTitle: 'Delete Change Source'
onboarding:
  defaultChangeSource: Default change source that is already created for you
  changeSourceTypes:
    HarnessCDNextGen:
      name: Harness CD NextGen
      icon: cd-main
    HarnessCDCurrentGen:
      name: Harness CD
    Custom:
      title:
        Use webhook URL or cURL command to send requests to you custom change source to monitors change events related
        to deployments, infrastructure changes, and incidents.
      curl: cURL
      note: Upon saving, a webhook URL and cURL command will be generated, which can be obtained from the change source listing
      copyCURL: Copy as cURL command
  monitoringSources:
    addMoreSources: Add more Monitoring Sources
    select: Select your Monitoring Source
    addedStatus: You have added {{sourceCount}} Monitoring Source
    defineMonitoringSource: Define your Monitoring Source
    monitoringSourceSubheading: Which Monitoring Source are you setting up for this deployment?
    skipToMonitoringSource: Skip to Monitoring Sources
    monitoringSourceInfo: Verification Monitoring Sources provide the metrics and log data that CV uses to score the risk of your deployment and infrastructure
    specifyConnector: Specify your {{type}} Connector
    firstTimeSetupText: First time? You can setup a new Connector to {{type}}. It takes 2 minutes.
    selectConnector: Select your {{type}} Connector
    addConnector: + Add {{type}} Connector
    selectProduct: Select the {{type}} product that you would like to select {{entity}} from
    selectMetricPacks: Select Metric Pack(s)
    metricPacksToMonitor: Select metric packs you want to monitor.
  activitySources:
    changeSourceInfo: Change Sources provide the details of deployment and infrastructure change
    infrastructureProvider: Infrastructure Provider
    dontHaveChangeSource: Don’t have a Change Source?
    addMoreSources: Add more Change Sources
    addedStatus: You have added {{sourceCount}} Change Source
  verificationJobs:
    heading: Almost there
    setupInfo: Verification Jobs score the risk of changes coming in from Change Sources using data from verification Monitoring Sources.
    infoText: Verification jobs trigger automatically whenever a relevant change is sourced from a Change Source. They verify the risk of the change by analyzing the data collected from the Verification Monitoring Sources.
    subHeading: Default health verification jobs are applied automatically.
    createJobQues: Would you like to create a new verification job?
    createJob: Create Job
    keepGoing: Want to keep going...
  progress:
    heading: 'Your Progress'
    mapServices: 'Map the above {{serviceLabel}} to a Monitoring Source.'
    serviceEnvCount: 'You have {{serviceCount}} {{serviceLabel}} and {{envCount}} {{environmentLabel}}.'
    servicesUsedInActivitySources: '{{serviceCount}} service is used in Change Sources.'
    multiServicesUsedInActivitySources: '{{serviceCount}} services are used in Change Sources.'
    serviceUsedInMonitoringSources: '{{serviceCount}} service is used in Monitoring Sources.'
    multiServiceUsedInMonitoringSources: '{{serviceCount}} services are used in Monitoring Sources.'
    servicesUndergoingHealthVerification: '{{serviceCount}} service has ongoing health verification.'
    multipleServicesUndergoingHealthVerification: '{{serviceCount}} services have ongoing health verifications.'
  selectProductScreen:
    validationText:
      name: Name is required.
      identifier: '{{$.validation.identifierRequired}}'
      connectorRef: Connector Selection is required.
      validIdRegex: Identifier can only contain alphanumerics, _ and $.
      product: 'Product selection is required.'
      source: Source selection is required
selectCreateService: Select or create a service
deploymentVerification:
  failed: Deployment verification has failed and requires manual intervention.
monitoringSources:
  assign: Assign
  mapMetricsToServices: Map Metric(s) to Harness Services
  mapQueriesToServices: Map Queries to Harness Services
  metricPackValidation: Metric Pack Validation
  nameYourMonitoringSource: Name your Monitoring Source
  oneMetricMappingValidation: At least one application must be mapped
  oneMetricPackValidation: At least one Metric Pack must be selected
  oneMetricMappingValidationSubtext: You need to select one Metric Pack for verification
  metricNameLabel: Metric Name
  metricLabel: Metric
  queryNameLabel: Name your Query
  queryName: Query Name
  riskProfile: Risk Profile
  riskCategoryLabel: Risk Category
  riskCategoryTemplateNote: Provide in format 'Category / MetricType'
  baselineDeviation: Deviation Compared to Baseline
  higherCounts: Higher value is higher risk
  lowerCounts: Lower value is higher risk
  metricNameValidation: Metric Name is required.
  metricIdentifierPattern: Identifier should be alphanumeric and should start with lower case. Only allowed special character is "_"
  metricIdentifierValidation: Metric identifier is required.
  metricValidation: Metric is required.
  uniqueIdentifierValidation: '{{idName}} already exists. Provide a unique identifier.'
  queryNameValidation: Query Name is required.
  envValidation: Environment is required.
  serviceValidation: Service is required.
  buildYourQuery: Build your Query
  serviceInstanceIdentifier: Service Instance Identifier
  optionalServiceInstanceLabel: (only needed for CV)
  addMetric: Add Metric
  addQuery: Add Query
  totalMappedQueries: '{{total}} {{query}} mapped'
  commonHealthSource:
    metric: HealthSource Metric
    chart: Chart
    addMetric: Add metric
    metricName: '{{name}} name'
    addGroupName: Add Group Name
    runQuery: Run Query
    confirmDeleteMetric: 'Are you sure you want to delete metric {{name}}'
    submitQueryToSeeRecords: Enter your query
    searchMetric: Search ...
    defineQuery: Define Query
    defineQueryDescriptionMetrics: Queries can only be defined for a single timeseries.
    defineQuerySubDescription: Learn how to find the query to monitor your data source with Harness.
    querySectionSecondaryTitle: Query Section
    noQueries: 'There are no {{name}}'
    query:
      enterQuery: Please enter query
      selectQueryField: 'Please select {{queryFieldIdentifier}}'
      enterQueryAndQueryField: 'Please enter query and select {{queryFieldIdentifier}}'
    records:
      fetchingRecords: Fetching records ...
      runQueryToSeeRecords: Run query to fetch the records
    fields:
      timestampFormat: Timestamp format
      timestampIdentifier: Timestamp identifier
      serviceInstance: Service Instance identifer
      messageIdentifier: Message identifer
    metricsChart:
      fetchingCharts: Fetching charts data ...
      runQueryToFetchResults: Run query to fetch the results
    logsTable:
      title: Field Mapping
      subTitle: Choose the data to display the logs from the fields below
      sampleLogButtonText: Get sample log messages
      sampleLogMessageDrawerTitle: Sample Log Messages
      noSampleAvailable: No sample data available
      timestamp: Timestamp
      ServiceInstance: Service Instance
      jsonSelectorDrawerTitlePrefix: Select path for
      validationMessage: '{{fieldName}} is required'
      fetchLogDataButtonDisableMessage: Records are not available
    assign:
      subHeader: Select services to which the custom metric will be applied.
      riskProfileSubHeader: Harness will verify and rate your events based on your selected risk category and deviation.
      continuousVerification:
        title: Continuous Verification (Applied to the pipelines in the Continuous Deployment)
        helptext: Apply this to the pipeline in the Continuous Deployment to verify that the deployed service is running safely, perform automatic rollbacks, and apply machine learning to every deployment to find and highlight problems in future deployments.
      serviceHealth:
        helptext: Apply this to track the changes in the health trend of your Monitored Service.
      serviceLevelIndicator:
        title: Service Level Indicator (SLI)
        helptext: Use this metric to measure the SLI to obtain the service’s performance
      deviation:
        title: Deviation Compared To Baseline
        helptext: Measures your service’s normal behaviour by comparing it to the deviation from your health source
      serviceInstance:
        title: Map service instance identifier
        helptext: A Service Instance represents a dynamically created service you deploy through Harness.
        higherLabel: Higher counts = higher risk
        lowerLabel: Lower counts = higher risk
  appD:
    advancedOptional: Advanced (Optional)
    ignoreThresholds: Ignore Thresholds
    failFastThresholds: Fail-Fast Thresholds
    ignoreThresholdHint: You can select the type of events that you want to set the thresholds for Continuous Verification only, and all metrics that match any of the following rules will not be flagged as anomalous regardless of the analysis.
    failFastThresholdHint: You can select the type of events that you want to set the thresholds for Continuous Verification only, and all metrics that match any of the following rules will be marked as anomalous, causing the Workflow state to fail.
    metricType: Metric Type
    groupTransaction: Group/Transaction
    greaterThan: Greater than
    lesserThan: Lesser than
    customMetric: Custom Metric
    addThreshold: Add Threshold
    register: Register
    verificationService: Verification service
    averageWaitTime: Average Wait Time
    callsPerMinute: Calls per Minute
    failImmediately: Fail Immediately
    failAfterMultipleOccurrences: Fail after multiple occurrences
    failAfterConsecutiveOccurrences: Fail after consecutive occurrences
    absoluteValue: Absolute Value
    percentageDeviation: Percentage Deviation
    appdPathTitle: AppDynamics Path
    tierName: Tier Name
    completeMetricPath: Complete Metric Path
    serviceInstanceMetricPath: Service Instance Label Path
    serviceInstanceFieldName: Service Instance Field Name
    appdChartTitle: Chart & Record
    appdPathDetail: Select base path for AppD Metric
    appdMetricDetail: Select metric path for AppD Metric
    defaultAppDMetricName: appdMetric
    basePathPlaceholder: Please select value to append to base path
    metricPathPlaceholder: Please select value to append to metric path
    noValueBasePath: No value for selected base path
    noValueMetricPath: No value for selected base path and metric path
    envDescription: An Environment is the representation of your production or non-production infrastructure.
    appDApplications: APPDYNAMICS APPLICATIONS
    appDTier: APPDYNAMICS TIER
    harnessEnv: HARNESS ENVIRONMENT
    validationMsg: Services should be mapped uniquely to application services
    mapApplicationsToEnv: Map the AppDynamics Application to a Harness Environment
    mapTiersToServices: Map AppDynamics Application Tiers to Harness Services
    noAppsMsg: No Applications were found
    noTiersMsg: No Tiers were found for selected application
    mappingToHarnessService: MAPPING TO HARNESS SERVICE
    mapToHarnessEnvironment: MAPPING TO HARNESS ENVIRONMENT
    mappedToHarnessService: MAPPED TO HARNESS SERVICE
    mappedToHarnessEnvironment: MAPPED TO HARNESS ENVIRONMENT
    harnessServices: HARNESS SERVICES
    validation: VALIDATION
    tiersMappedToServices: tiers mapped to services
    errorsFound: errors found
    noData: No data
    searchPlaceholderApplications: Search for Applications
    validationsPassed: Validation passed
    validationsFailed: Validation failed
    newGroupName: New AppDynamics Group Name
    validations:
      selectApp: Please select application and its environment
      selectTier: Please select tier and its service
      selectMetricPack: Please select atleast one metric pack
    connectToMonitoringSource: Connect to your AppDynamics Monitoring Source
    firstTimeSetupText: 'First time? You can setup a new Connector to AppDynamics. It takes 2 minutes.'
    createConnectorText: '+ New AppDynamics Connector'
    selectProduct: 'Select the AppDynamics Product that you would like to select applications from'
    product:
      applicationMonitoring: 'Application Monitoring'
      businessMonitoring: 'Business Performance Monitoring'
      machineMonitoring: 'Machine Monitoring'
      endUserMonitoring: 'End User Moniorting'
    infoPanel:
      mapDashboards: Map Dashboards to Harness Services
      mapDashboardsMsg: Define the Stackdriverdashboards you want to monitor. For example, here is a Workspace prod-setup. Harness will extract the widgets, metrics and queries within each dashboard. The metrics within the dashboard will create a service within Harness.
      applicationsDesc: Define the Stackdriverdashboards you want to monitor. For example, here is a Workspace “prod-setup.” Harness will extract the widgets, metrics and queries within each dashboard. The metrics within the dashboard will create a service within Harness.
      tiers: Tiers
    searchTiersPlaceHolder: 'Search for Tiers'
  gco:
    noMetricData: No data for current metric
    connectToMonitoringSource: Connect to your Google Cloud Platform
    defaultName: 'My Google Cloud Operations Monitoring Source'
    firstTimeSetupText: 'First time? You can setup a new Connector to Google Cloud Platform. It takes 2 minutes.'
    createConnectorText: '+ New Google Cloud Platform Connector'
    addManualInputQuery: '+ Manually input query'
    selectProduct: 'Select the Google Cloud Operations feature that you would like to choose dashboards from'
    searchForDashboardsPlaceholder: Search for dashboards
    product:
      metrics: 'Cloud Metrics'
      logs: 'Cloud Logs'
    productValidationText: 'Google Cloud Operations feature is required.'
    selectDashboardsPage:
      noDataText: 'No Google Cloud Operation dashboards found.'
      dashboardColumnName: 'Google Cloud Operation Dashboards'
    manualInputQueryModal:
      modalTitle: 'Add your Google Cloud Operations query'
      subtitle1: 'Make sure your provide'
      subtitle2: 'string for filtering in query.'
      subtitle3: 'For example: '
      exampleString: 'resource.label.\"pod_name\"=\"${host}\"".'
      validation:
        query: 'Query is required.'
        uniqueMetricName: '{{metricName}} is an already taken metric name'
    mapMetricsToServicesPage:
      metricTagsLabel: Metric Tags
      manuallyInputQueriesLabel: 'Manually input queries'
      viewQuery: 'View Query'
      operationsQueryLabel: 'Operations query'
      mapMetricToServiceAndEnvironment: 'Map Stackdriver Metric to a Harness Service and Environment'
      querySpecifications: 'Query Specifications'
      configureRiskProfile: 'Configure Risk Profile'
      enterQueryForValidation: Please enter a query.
      validation:
        mainSetupValidation: 'All fields for at least one metric must be filled completely.'
        validJSON: Please provide valid json.
        riskCategory: Risk Category is required.
        tags: Tags are required.
        baseline: One selection is required.
        tooManyMetrics: Too many metrics for provided query. Please fix query to return data for one metric.
      noDataForQuery: 'No data for provided query.'
    reviewPage:
      mappedMetrics: '{{metricCount}} metric(s) mapped to {{serviceCount}} service(s)'
      gcoMetrics: Google Cloud Operation metrics
  datadog:
    noQueryAdded: 'Please add query manually or pick from dashboard'
    noMetricsWidgets: 'No metrics'
    manualInputQueryModal:
      modalTitle: 'Add your Datadog query'
    selectDashboardsPage:
      noDataText: 'No Datadog dashboards found.'
      dashboardColumnName: 'Datadog Dashboards'
    newDatadogGroupName: 'Add new Datadog group name'
    validation:
      queryContains: 'Query must contain '
  datadogLogs:
    submitQueryToSeeRecords: Submit query to see records from Datadog Logs
    datadogLogsQuery: Datadog Logs Query
    logIndexesLabel: Log indexes
  newRelic:
    mapNewRelicAppsToServicesAndEnvs: Map New Relic Applications to Harness Environments and Services
    mappingServiceAndEnvSubheading: Select Harness Environments and Services to map to New Relic Applications
    newRelicAppColumn: NEW RELIC APPLICATION
    selectedApplications: Selected Applications
    oneMetricMappingValidationSubtext: You need to map an application to a Harness Environment and Service.
    totalMappedApplications: '{{total}} Application(s) mapped'
    defaultNewRelicMetricName: New Relic Metric
  prometheus:
    prometheusMetrics: Prometheus Metrics
    provideQueryToSeeRecords: Provide query to see records from Prometheus
    querySpecificationsAndMappings: Query Specifications and Mapping
    undoManualQuery: Undo manual query selection
    submitQueryToSeeRecords: Submit query to see records from Prometheus
    customizeQuery: Customize the query to get the desired output and map to Harness Service.
    mapPrometheusMetricsToServicesAndEnvs: Map Prometheus metrics to Harness Environments and Services
    chartAndRecords: Chart and Records
    addMetricTooltip: Fill all required fields before adding a new metric
    mappingValidation: At least one metric mapping must be entirely filled out
    environmentFilter: Filter on Environment
    serviceFilter: Filter on Service
    additionalFilter: Additional Filter
    prometheusMetric: Prometheus Metric
    groupName: Group Name
    aggregator: Aggregator
    noRecordsForQuery: No records for given query
    newPrometheusGroupName: New Prometheus Group Name
    querySettingsNotEditable: Query Builder will not be available
    querySettingsSubtext: Query Builder will not be available if you manually edit the query.
    isManualQuery: Query Builder will not be available since this mapping contains a manually edited query.
    sumAggregator: sum (calculate sum over dimensions)
    minAggregator: min (select minimum over dimensions)
    maxAggregator: max (select maximum over dimensions)
    avgAggregator: avg (calculate the average over dimensions)
    stddevAggregator: stddev (calculate population standard deviation over dimensions)
    stdvarAggregator: stdvar (calculate population standard variance over dimensions)
    countAggregator: count (count number of elements in the vector)
    validation:
      aggregator: Aggregator is required.
      promethusMetric: Prometheus Metric is required.
      filterOnEnvironment: Filter on Environment is required.
      filterOnService: Filter on Service required.
      serviceInstanceIdentifier: Service Instance Identifier is required.
      deviation: Deviation Compared to Baseline is required.
      metricNameUnique: Metric name must be unique.
      metricIdentifierUnique: Metric identifier must be unique.
      groupName: Group Name is required.
      uniqueName: '{{existingName}} already exists. Provide a unique name.'
      recordCount: Current query yields too many records. Please change query to yield one record.
  elk:
    elkLogsQuery: ElasticSearch Logs Query
    identifyTimeStampnoRecordModalHeader: 'New TimeStamp Identifier'
    identifyTimeStampnoRecordInputLabel: 'Add TimeStamp Identifier'
    identifyTimeStamprecordsModalHeader: 'Select Path for TimeStamp'
    identifyTimeStampinputLabel: 'Identify TimeStamp'

    timeStampFormatInputLabel: 'TimeStamp Format'
    selectTimeStampFormat: 'Select TimeStamp Format'

    logIndexesInputLabel: 'Log Indexes'
    selectLogIndex: 'Select Log Index'

    logIndexValidation: 'Log Index is required field'
    serviceInstanceValidation: 'Service Instance is required field'
    identifyTimeStampValidation: 'Identify TimeStamp is required field'
    timestampFormatValidation: 'TimeStamp Format is required field'
    messageIdentifierValidation: 'Message Identifier is required field'
    submitElkQuery: 'Submit query to see records from ELK'

  splunk:
    splunkLogsQuery: SPLUNK Logs Query
    splunkMetric: Splunk Metrics
    savedSearchQuery: Select saved query
    submitQueryToSeeRecords: Submit query to see records from Splunk
    staleRecordsWarning: Records not upated with latest query. Please fetch records
    defaultSplunkMetricName: Splunk Metric
    addSplunkGroupName: add Splunk group name
  gcoLogs:
    query: QUERY
    gcoLogsServiceInstance: Add service instance
    querySpecificationsAndMappings: Query Specifications and Mappings
    customizeQuery: Enter the query to get the desired output and map to Harness Service.
    gcoLogsMessageIdentifer: Add message identifier
    selectPathForServiceInstance: Select path for service instance
    selectPathForMessageIdentifier: Select path for message identifier
    newGCOLogsServiceInstance: New Service Instance
    newGCOLogsMessageIdentifier: New Message Identifier
    messageIdentifierTitle: Message Identifier
    fetchRecords: Fetch records
    newGCOLogsMessage: New GCO Logs Message
    records: Records
    submitQueryToSeeRecords: Submit query to see records from Stackdriver Logs
    noRecordsForQuery: No records found for the provided query
    gcoLogsQuery: GCO Logs Query
    addQueryTooltip: Fill all required fields before adding a new query
    serviceInstance: Identify Service Instance
    messageIdentifier: Identify Message
    selectRecords: After fetching records click on the plus icon ...
    validation:
      queryNameUnique: Query name must be unique.
      serviceInstance: Service Instance is required.
      messageIdentifier: Message Identifier is required.
      serviceInstanceUniqueName: '{{existingName}} already exists. Provide a unique name for service instance.'
      messageIdentifierUniqueName: '{{existingName}} already exists. Provide a unique name for message.'
activitySources:
  name: 'Name your Change Source'
  harnessCD:
    defaultName: 'My Harness CD'
    select: 'Select your Change Source'
    selectEnvironment: 'Select Environments'
    selectService: '{{ $.common.selectServices }}'
    iconLabel: 'Harness FirstGen'
    harnessApps: 'HARNESS FIRSTGEN APPLICATION'
    application:
      noData: 'No applications were found'
      infoText: 'Harness CV can verify change activities by automatically sourcing them from your Harness FirstGen applications. Select which applications and services you’d like to import over to your current project.'
      servicesToBeImported: HARNESS FIRSTGEN SERVICES (TO BE IMPORTED)
      searchPlaceholder: Search for FirstGen Applications
    environment:
      noData: 'No environments were found'
      infoText: 'Select the FirstGen Environments that you would be interested in. This ensures that all the activities about your services are indentified to belong to selected environments only.'
      harnessEnv: 'HARNESS FIRSTGEN ENVIRONMENTS'
      env: 'HARNESS NEXTGEN ENVIRONMENTS'
      searchPlaceholder: Search for FirstGen Environments
    service:
      noData: 'No services were found'
      infoText: 'The following services will get added to the list of services tracked by Harness Continous Verification. To enable verification on the services, continue to the next step where you map a verification Monitoring Source to your servcies.'
      harnessServices: 'HARNESS FIRSTGEN SERVICES'
      services: 'HARNESS NEXTGEN SERVICES'
      searchPlaceholder: Search for FirstGen Services
    validation:
      applicationValidation: At least one application must be selected.
      serviceValidation: At least one service mapping must be selected.
      environmentValidation: At least one environment mapping must be selected.
learnMore: Learn more about Service Reliability Management
cvTrialHomePage:
  startTrial:
    description: Take your software build processes to the next level using our Harness Continuous Verification.
    startBtn:
      description: Start 14 day CV Enterprise trial
monitoredServices:
  title: '{{ $.common.monitoredServices }}'
  listToggleSwitchDisableMessage: Nice work! You've reached our plan limits. Upgrade to enable SLO and service health for a monitored service.
  heading: Monitored Service
  filterlabel: 'Environment:'
  youHaveNoMonitoredServices: You have no monitored services
  nameValidation: Monitored Service Name is required
  environmentValidation: '{{ $.common.validation.environmentIsRequired }}'
  serviceValidation: '{{$.cd.pipelineSteps.serviceTab.serviceIsRequired}}'
  serviceAndEnvironment: Service And Environment
  monitoredServiceDetails: Monitored Service Details
  monitoredServiceName: Monitored service name
  newMonitoredServices: New Monitored Service
  addNewMonitoredServices: Create new monitored service
  editMonitoredServices: Edit Monitored Service
  editService: Edit service
  deleteMonitoredServiceWarning: Deleting your monitored service ‘{{ name }}’ will also delete its resources.
  deleteService: Delete service
  copyET: Copy Error Tracking Config
  monitoredServiceDeleted: Monitored service successfully deleted
  monitoredServiceCreated: Monitored Service created
  monitoredServiceUpdated: Monitored Service updated
  monitoredServiceToggle: 'Monitored Service successfully {{enabled}}'
  showingAllServices: Showing all Services ({{ serviceCount }})
  showingServiceAtRisk: Showing Services at Risk ({{ serviceCount }})
  noAvailableData: No available data.
  noAvailableLogData: 'Select a timeline to see logs data'
  noMatchingData: No matching data.
  dependencyHealth: Dependency Health
  dependenciesHealth: Dependencies Health
  healthScoreDataNotAvailable: Health score data not available.
  serviceHealthScoreDataNotAvailable: Service Health score data not available.
  dependencyHealthScoreDataNotAvailable: Dependency Health score data not available.
  failedToFetchHealthScore: Failed to fetch health score data.
  failedToFetchSummaryData: Failed to fetch summary data
  changeMonitoredServiceType: Change Monitored Service Type
  changeMonitoredServiceTypeMessage: Changing monitored service type will reset change sources
  searchMonitoredServices: Search Monitored Services
  sloErrorBudget: SLO / Error Budget
  searchMonitoresService: 'Search monitored services'
  serviceHealth:
    last4Hrs: Last 4 hours
    last24Hrs: Last 24 hours
    last3Days: Last 3 days
    last7Days: '{{ $.common.last7days }}'
    overallHealthScore: Overall Health Score
    userMessage: To view anomalies, metrics and logs for a specific time window, click the time slot on the timeline. To expand or contract the window, simply drag the handles.
    noDataAvailableForHealthScore: No healthscore data available in the {{duration}}
    pleaseSelectAnotherTimeWindow: Please select another time window.
    selectTimeline: Select a timeline to see metric & logs data
    selectTimelineErrorTracking: Select a timeline to see error data
    metricsAndLogs: Metrics & Logs
    lowestHealthScore: Lowest Health Score
    anamolies: Anamolies
    serviceDependencies:
      states:
        unhealthy: Unhealthy
        needsAttention: Needs attention
        observe: Observe
        exhausted: Exhausted
  monitoredServiceTabs:
    serviceHealth: Service Health
    configurations: Configurations
    disabledText: Enable the monitored service to view the tab
  table:
    lastestHealthTrend: Health trend (Last 24h)
    serviceHealthScore: service Health Score
    healthMonitoring: Health Monitoring
    changes: Changes (Last 24H)
  changesTable:
    impact: Impact
  serviceDependencies:
    noData: No data available for service dependencies
  assignLabel: Select the services you want to apply the metric
  continuousVerification: Continuous Verification
dependenciesHealthWithCount: Dependencies Health ({{ count }})
notifications:
  deleteNotificationWarning: Are you sure you want to delete notification ‘{{ name }}’ ?
  errorBudgetPolicies: Error Budget Policies
  newNotificationRule: New Notification Rule
  notificationName: Notification Name
  deleteNotification: Delete notfication {{ name }}
  serviceHealth: Changes and Service Health
  serviceHealthDescription: Focuses on changes to a service's code, configuration, behaviour, deployment and infrastructure.
  sloDescription: Focuses on SLO target and error budget changes on a given SLO.
  condition: '{{$.common.condition}}'
  changeType: Change Type
  healthScoreBelow: Health score is below
  thresholdBelow: Threshold is below
  validations:
    conditionIsRequired: Condition is required
    eventStatusIsRequired: Events is required
    eventTypeIsRequired: Event Type is required
changeSource:
  alertText: Alert
  incident: Incident
  noChangeSource: No Change Sources Present
  noData: No changes data available
  configureChangeSource: Configure Change Sources
  addChangeSource: Add New Change Source
  selectChangeSource: Select Change Source
  defineChangeSource: Define Change Sources
  connectChangeSource: Connect Change Source
  sourceName: Source Name
  editChangeSource: Edit Change Source
  duplicateIdentifier: identifier already exist
  selectChangeSourceName: Select change source name
  selectChangeSourceProvider: Select change source provider
  selectChangeSourceType: Select change source type
  deleteChangeSourceWarning: Are you sure you want to delete Change Source
  noDataAvailableForChangeScore: No {{type}} data available in the last {{duration}}
  noDataAvaiableForCard: No data available
  tooltip:
    incidents: Incidents
  PageDuty:
    pagerDutyService: PagerDuty Service
    selectPagerDutyService: Select PageDuty Service
    pagerDutyEmptyService: No service available for {{ connector }}
  HarnessCDCurrentGen:
    selectHarnessAppId: Select Application Id
    selectHarnessService: Select Harness Service
    selectHarnessEnv: Select Harness Environment
    applicationId: '{{$.common.application}}'
  changeSourceCard:
    information: Information
    triggred: Triggered
    viewDeployment: View Deployment
    viewFeatureFlag: View Feature Flag
    finished: 'Finished: '
    deploymentHealth: Deployment Health
    ago: ago
  kubernetes:
    validatingConnector: Validating permissions to fetch Kubernetes events.
    invalidConnector: Unable to fetch kubernetes events for this connector. Please use a connector with permissions to fetch events from the cluster.
  FeatureFlag:
    noDataAvailableForYAMLDiff: No data available for YAML Difference
    label: Harness FF
Dependency:
  serviceList: Service list
  noData: No Data For Dependency Graph
  serviceChanges: Service Changes
healthSource:
  nameLabel: Health Source Name
  namePlaceholder: Type your health source name
  featureLabel: Select Feature
  noData: No Health Sources Present
  featurePlaceholder: Select your {{ sourceType }} feature
  environmentLabel: Create or select an Environment
  serviceLabel: Create or select a Service
  addHealthSource: Add New Health Source
  newHealthSource: New Health Source
  editHealthSource: Edit Health Source
  backtoMonitoredService: Back to monitored service
  connectHealthSource: Connect Health Source
  selectHealthSource: Select health source type
  defineYourSource: Define Your Sources
  defineHealthSource: Define Health Source
  deleteHealthSourceWarning: Are you sure you want to delete Health Source
  deleteHealthSource: Delete Health Source
  selectConnectionTypeInfo: Select the connection type to see your hosted entities directly in Harness
  awsRegionLabel: Select AWS Region
  awsWorkspaceLabel: Select Workspace Id
  awsDataSourceName: Amazon Web services
  awsWorkspaceIdValidation: Workspace Id is required
  awsWorkspacePlaceholderText: Select a Workspace Id
  dataSourceTypeValidation: Connection Type is required
  noDataPresentHealthSource: No data is present for the selected Health Source
  seriveEnvironmentNote: Service selected is {{service}} and Environment selected is {{environment}}
  productChangeConfirmationHeader: Changing feature will reset the configurations.
  productChangeConfirmation: Are you sure you want to change the feature ?
  table:
    serviceMapping: Service Mapping
    environmentMapping: Environment Mapping
  connectors:
    selectConnector: Select {{sourceType}} Connector
    customMetrics: Custom Metrics (optional)
    customMetricsWithoutOptional: Custom Metrics
    customQueries: Custom Queries
    customMetricsTooltip: Add custom metrics
    buildChart: Build Chart
    CloudWatch:
      awsSelectorPlaceholder: Select an AWS Region
      fetchDataButtonText: Fetch data
      validationMessage:
        expression: Expression is required
        customMetrics: Add minimum one custom metric
        submitQuery: Submit query to see chart
      groupModalTitle: New CloudWatch Group Name
    NewRelic:
      applicationLabel: Find an NewRelic application
      nrqlQuery: NRQL Query
      groupName: New Relic Group Name
      submitQueryNoRecords: Submit query to see response from New Relic
      metricValueAndCharts: Metric values and charts
      queryMapping: Query Specifications and mapping
      validations:
        application: Please select application
        nrql: NRQL Query is required
        continuousVerification: Service selection is required
        metricValue: Metric Value JSON Path is required
        timestamp: Timestamp Field/Locator JSON Path is required
      metricFields:
        metricValueJsonPath:
          label: Metric Value JSON Path
          noRecordModalHeader: New Metric Value
          recordsModalHeader: Select path for Metric value
        timestampJsonPath:
          label: Timestamp Field/Locator JSON Path
          noRecordModalHeader: New Timestamp Locator
          recordsModalHeader: Select path for timestamp field
        timestampFormat: Timestamp Format
    AppDynamics:
      applicationsAndTiers: Applications & Tiers
      applicationLabel: Find an AppDynamics application
      applicationPlaceholder: Type an application name
      trierLabel: Find an AppDynamics tier
      tierPlaceholder: Type an tier name
      metricPackLabel: Select Metric Packs to be monitored
      serviceInstance: Specify a service instance label path
      validation:
        application: Please select applications
        tier: Please select tier
        basePath: Please select base path
        metricPath: Please select metric path
        metricPathWithoutLeafNode: Please select metric in metric path
        fullPath: Please provide complete metric path
        missingTierInFullPath: Path should have Tier as well
        inCorrectOrderOfTierInPath: Path should not start or end with tier
        inCorrectMetricPath: Please provide correct complete metric path
        missingServiceInstanceMetricPath: Service instance metric path is missing
      metricPathType:
        text: Specify a complete metric path
        dropdown: Select the path from the AppD metric
      selectedPathLabel: Selected path
    gco:
      selectDashboardTab: 'Select Dashboards'
    Dynatrace:
      servicesLabel: Find a Dynatrace service
      servicePlaceholder: Type a service name
      validations:
        selectedService: Please select a service
      defaultMetricName: Dynatrace metric
      submitQueryLabel: Submit query to see Dynatrace metrics
      keyRequestRequiredLabel: Only services with marked Key Requests are shown
  splunkMetric:
    queryTextareaPlaceholder: 'Please write a splunk query that outputs table for time, value. Use span of 1m. Example: source="access_log" status < 400 | bucket _time span=1m | stats p99(response_time) as value by _time | rename _time as time | fields time value'
templates:
  healthSourceDetails: Health Source Details
sensitivityValidation: Sensitivity should be high, medium or low
metricsAnalysis:
  analysisReason:
    customFailFastThreshold: Failed because a fail-fast threshold was breached
    mlAnalysis: '{{ verificationType }} by the Harness ML analysis'
    noControlData: No control data to compare against.
    noTestData: No data to be analysed.
  showDetails: Show details
  controlDataType:
    minDeviation: Host with minimum deviation
  metricThresholds:
    thresholdType: THRESHOLD TYPE
    criteria: CRITERIA
    value: VALUE
    applied: APPLIED
    failAfterConsecutiveOccurrence: 'Fail after {{ actionableCount }} consecutive {{ occurrenceText }}'
    failAfterOccurrence: 'Fail after {{ actionableCount }}  {{ occurrenceText }}'
slos:
  title: SLOs
  subTitle: Review the status and error budget of all your defined service level objectives
  completeTitle: Service Level Objectives (SLOs)
  defineSLOSubttitle: Select the Monitored Service for which you want to define the SLO
  configureSLI: Configure Service Level Indicatiors (SLIs)
  configureSLISubtitle: Calculate your SLI by defining which aspect of your service you wish to measure for performance.
  setSLOSubtitle: Set a time period for compliance and a target for “good service”
  errorBudgetPolicySubtitle: Notifications are sent to channels as soon as conditions meet a threshold specified by the rule.
  monitoredService: MONITORED SERVICE
  monitoredServiceSubTitle: Monitored Service is a service and environment combination that monitors any changes, such as deployments, infrastructure changes and any health trend deviations using logs and metrics obtained from APM and Logging tools.
  evaluationMethod: Evaluation method
  evaluationMethodSubtitle: The evaluation method will determine how your events are measured
  goodRequests: Good requests
  badRequests: Bad requests
  validRequests: Valid requests
  status: STATUS
  target: TARGET
  burnRate: BURN RATE/DAY
  deleteSLO: Delete SLO
  createSLO: Create SLO
  createCompositeSLO: Create Composite SLO
  healthSource: Health source
  sloCreated: SLO created successfully
  sloUpdated: SLO updated successfully
  noDataMS: There are no SLOs available for this service
  noMatchingData: No matching data for the applied filters.
  noMatchingDataForSearch: No matching data for the applied search.
  monitoredServiceText: A Monitored Service is automatically created by Harness by concatenating the names of the Service and Environment.
  createMonitoredService: Create a Monitored Service
  confirmDeleteSLO: 'Are you sure you want to delete SLO: {{ name }}?'
  sloDeleted: '{{ name }} successfully deleted'
  sli: SLI
  ratioObjectiveValueCheck: Objective value should be between 0 and 100
  backToSLI: Back to SLI
  sliMetricChartRatioBasedHeader: Metric for good requests vs valid requests
  sliMetricChartSubHeader: Using historical data and current parameters in the last 1 day
  sloTargetAndBudgetPolicy: SLO Target & Error Budget Policy
  sloName: SLO Name
  userJourney: User Journey
  totalServices: Total SLOs
  userJourneyPlaceholder: Select or create user journey
  userJourneyCreated: User journey created successfully
  userJourneySubTitle: A user journey is a visualization of a user's interaction with a service to achieve a specific goal over time and across different channels.
  selectMonitoredService: Select Monitored Service
  selectMonitoredServiceForSlo: Select monitored service on which to define SLO
  selectHealthsource: Select Health Source
  healthSourceForSLI: Health Source for SLI
  sliType: SLI Type
  sliTypeSubtitle: Measures how available your service was to users or valid requests served successfully
  sliTypeChooseMetric: SLI Type - Choose a metric
  latencySLI: Latency SLI measures the proportion of requests that were faster than some threshold.
  pickMetricsSLI: Pick metrics powering the SLI
  configureSLIQueries: Configure SLI queries
  sloDefinition: Define SLO identification
  reviewChanges: Review changes
  sloEditWarningMessage: It may take a few minutes to recalculate the Error Budget. Are you sure you want to proceed?
  noSLOsStateMessage: Service level objectives (SLOs) are used to describe and measure service level performance and reliability for any service/microservice applications.
  searchSLO: Search by SLO name
  requestType: RequestType
  goodRequestMetric: Good request metric
  badRequestMetric: Bad request metric
  validRequestMetric: Valid request metric
  sloFormula:
    title: How we do the SLI calculation?
    subHeader: The SLI equation is the number of good requests divided by the total number of valid requests, multiplied by 100 to keep it a uniform percentage.
  validations:
    nameValidation: SLO name is required
    userJourneyRequired: User journey is required
    healthSourceRequired: Health Source is required
    specialCharacters: SLO Name can only contain alphanumeric, hyphen and underscore characters
  sloTargetAndBudget:
    periodType: Period Type
    periodTypeOptions:
      rolling: Rolling
      calendar: Calendar
    setSLOTarget: Set the SLO time window and target
    complianceTimePeriodTitle: Compliance time period for evaluating SLO
  slis:
    HealthSource: Health Source to manage the service level
    HealthSourceSubTitle: It uses logs and metrics to track changes in the Service's health trend
    SLIChartTitle: SLI based on the objective value
    type:
      availability: Availability
      latency: Latency
    metricOptions:
      thresholdBased: Threshold based
      ratioBased: Ratio based
    ratioMetricType:
      eventType: Event type
      goodRequestsMetrics: Metric for good requests
      badRequestsMetrics: Metric for bad requests
      validRequestsMetrics: Metric for valid requests
      goodRequestsByValidRequest: Ratio of good requests by valid requests
      badRequestsByValidRequest: Ratio of bad requests by valid requests
      selectMetric1: Select metric 1
      selectMetric2: Select metric 2
  contextualHelp:
    sli:
      intro: Metrics such as response time, error rate etc. are used to evaluate the performance of the monitored service.
      healthSource: A Health Source is a combination of a Harness Service and associated Environment that monitors changes in health trends of the service using logs or metrics collected from an Application Performance Management(APM) or logging provider.
      whatIsSli: What is an SLI?
      sliDefinition: An SLI (service level indicator) measures the performance of a service and compliance with an SLO (service level objective).
      sliDefinition2: So, if your SLA (Service Level Agreement) specifies that your systems will be available 99.9% of the time, your SLO should be set higher than 99.9%
      availabilityDescription: Measures how available your service was to users or valid requests served successfully.
      latencyDescription: Measures how fast your service responded to users or how many valid request served faster than a defined thresholds.
      thresholdDescription: The number of valid requests is compared to the length of time.
      ratioBasedDescription: Percentage of good requests that are acceptable.

    target:
      compliance: Compliance
      complianceDefinition: Compliance measures the current performance of the system and is measured against your SLO. There are two types of compliance periods for SLOs
      complianceDefinition2: Rolling periods (from n days ago to now, where n ranges from 1 to 30 days)
      complianceDefinition3: Calendar-based periods (from date to date)
      rollingWindowBased: Rolling window-based
      rollingWindowDefinition: Measures compliance over a rolling period, so that you are always evaluating, for example, the last 30 days. With a rolling period, the oldest data in the previous calculation drops out of the current calculation and new data replaces it.
      rollingWindowDefinition2: Rolling windows are more closely aligned with user experience
      calendarBased: Calendar-based
      calendarBasedDefinition: Compliance periods can be set to calendar periods like a weekly, monthly or quarterly. At the end of a calendar period, you are given a performance score. The performance score, which is calculated against the performance threshold, tells you whether your service was compliant or not. Even though you may view the performance throughout the period when you use a calendar period, you only get a compliance rating for every compliance period.
      calendarBasedDefinition2: Calendar windows are more closely aligned with business planning and project work.
CompositeSLO:
  CreateTitle: Create a Composite Service Level Objective (SLO)
  CreateMessage: Combines multiple SLOs to measure the services for a specific time frame that contribute to a single budget.
  DefineSLO: Define SLO Identification
  SetTimeWindow: Set SLO Time Window
  AddSLO: Add SLOs
  AddSLOMessage: By default, all services are equally weighted. If you assign a service a custom weighting, the remaining services will be computed automatically to receive 100 percent for the composite SLO.
  SetTarget: Set SLO Target
  ErrorBudgetPolicy: Error Budget Policy
  Weightage: Weightage
  NoData: You don’t have any matching SLOs
  NoDataSuggestion: Try changing the time window or clearing your search input.
  Consumption:
    title: SLO consumption breakdown for the period
    AssignedWeightage: Assigned Weightage
    ActualSlo: Actual SLO
    ErrorBudgetBurned: Error Budget Burned
    ContributedErrorBudgetBurned: Contributed Error Budget Burned
  PeriodChangeWarning:
    title: Review Period Type Change
    message: Updating period type will reset selected SLOs, Do you want to continue ?
  MatchingSLO: SLOs matching the time window.
  NoSloFound: There are no SLOs available for selected filter
  compositeSloCreated: Composite SLO created successfully
  compositeSloUpdated: Composite SLO updated successfully
  SLIMetricRatio: SLI = (SLO1*weightage1 + SLO2*weightage2... + SLON*weightageN)/n*100
  AddSLOValidation:
    minMaxSLOCount: Should have minimum 2 SLOs and maximum 20 SLO's
    totalSLOWeight: Total SLO weight should be equal to 100
    minSLOCount: Should have minimum 2 SLOs
    maxSLOCount: Should have maximum 20 SLOs
    weightMinMax: SLO weight should be between 0.01 to 99.99
sloDowntime:
  oneWeek: 1 week
  oneMinute: 1 minute
  label: Downtime
  downtimeName: Downtime Name
  downtimeWindow: SLO Downtime Window
  category: Category
  noData: No SLO downtime configured
  addDowntime: Add a SLO Downtime
  info: During downtime, SLO status and error budget calculations will be excluded for that specific time period.
  bannerText: SLO status and error budget calculations will be excluded from {{ startTime }} until {{ endTime }}
  scheduledMaintenance: Scheduled Maintenance
  selectCategory: Select downtime category
  selectMonitoredServices: Select Monitored Services
  selectAllMonitoredServices: Apply the downtime to all existing and future services
  allMonitoredServices: All monitored services
  repeatEvery: Repeat every
  repeatEndsOn: Repeat ends on
  durationText: from start time
  numberOfSLOs: NUMBER OF SLOs ASSIGNED
  downtimeCreated: SLO Downtime created successfully
  downtimeUpdated: SLO Downtime updated successfully
  downtimeToggle: SLO Downtime {{ name }} turned {{ off }}
  timeFrame: Every {{ recurrenceType }} at {{ time }} for {{ duration }}
  recurringDowntime: 'RECURRING: Starts from {{ startTime }} until {{ endTime }}'
  msList: Downtime will be applied to the following monitored services
  NoData: You don’t have any matching monitored services
  NoDataSuggestion: Try changing the filter or clearing your search input.
  confirmDeleteDowntime: 'Are you sure you want to delete downtime: {{ name }}?'
  validations:
    nameValidation: SLO Downtime is required
    categoryValidation: Category is required
    timezoneValidation: Timezone is required
    startTimeValidation: Start time is required
    endTimeValidation: End time is required
    endTimeGreaterThanStartTime: End time should be greater than start time
    endTimeNotMoreThan3Years: End time can't be more than 3 years from start time
    msListValidation: At least one monitored service should be selected
  steps:
    identification: Define SLO downtime identification
    downtimeWindow: Select the SLO downtime window
    monitoredServices: Apply to monitored services
SLO: SLO
SLOWithName: 'SLO: {{ name }}'
lastModifiedOn: Last modified on
createdOn: Created on
sloCreateInfo: To create SLO, you’ll need at least one Monitored Service, Health Source and a Metric.
SLOPerformanceTrend: SLO Performance Trend
sloGraphInitialState: You'll see a preview here once the queries are generated
sloGraphUserHint: To view anomalies, metrics and logs for a specific time window, click the time slot on the timeline. To expand or contract the time window, simply drag the handles.
sloRecalculationInProgress: SLO recalculation in progress
errorBudgetRecalculationInProgress: Error Budget recalculation in progress
sloAnalysisTakingLong: The SLO analysis is taking too long. Please check the execution logs and third party API call logs.
errorBudgetRemaining: Error Budget Remaining
errorBudgetRemainingWithMins: Error Budget Remaining (mins)
minutesRemaining: minutes remaining
errorBudgetBurnDown: Error Budget Burndown
SLITriggered: SLI Triggered
burnRatePerDay: Burn Rate/Day
timeRemaining: Time Remaining
SLOTarget: SLO Target
SLIMetricRatio: SLI - Latency (Metric1 / Metric2 X 100)
SLIRequestRatio: SLI = (Good requests/ Valid requests) X 100
objectiveValue: Objective Value
SLIValueIsGoodIf: Good requests must be
percentageValidrequests: % of valid requests
ThresholdSLIValueGoodIf: SLI value is good if the availability is
ThresholdValidrequests: the objective value
thanObjectiveValue: than objective value
toObjectiveValue: to objective value
considerMissingMetricDataAs: Consider missing metric data as
sliMissingDataTypeIsRequired: SLI Missing data type is required
metricIsRequired: Metric is required
metricForGoodAndValidRequestsShouldBeDifferent: Metric for good/bad and valid requests should be different
required: Required
periodLength: Period Length
periodLengthDays: Period Length (Days)
widowEnds: Window Ends
windowEndsDay: Window Ends (Day)
periodLengthIsRequired: Period Length is required
windowsEndIsRequired: Windows End is required
quarterly: Quarterly
monday: Monday
tuesday: Tuesday
wednesday: Wednesday
thursday: Thursday
friday: Friday
saturday: Saturday
sunday: Sunday
good: Good
bad: Bad
ignore: '{{ $.common.ignore }}'
errorBudget: Error Budget
mins: mins
minValueN: 'Min value {{n}}'
maxValue: 'Max value {{n}}'
pleaseFillTheRequiredFieldsToSeeTheSLIData: Please fill the required fields to see the SLI data
month: month
week: week
day: day
oneDay: 1 day
oneHour: 1 hour
days: days
nDays: '{{ n }} days'
resetErrorBudget: Reset Error Budget
yourExistingErrorBudgetIs: Your existing Error Budget is
andYouHave: and you have
left: left
adjustTheErrorBudgetToContinueWithDeployments: Adjust the Error Budget to continue with deployments.
previousErrorBudgetResetHistory: Previous Error Budget reset history
increaseErrorBudgetBy: Increase Error Budget by
increaseErrorBudgetByIsRequired: '"Increase Error Budget by" is required'
reasonIsRequired: Reason is required
updatedErrorBudget: Updated Error Budget
remainingErrorBudget: Remaining Error Budget
updatedRemainingErrorBudget: Updated remaining Error Budget
minutes: minutes
weeks: weeks
months: months
noPreviousErrorBudgetResetHistoryAvailable: No previous Error Budget reset history available
dateAndTime: Date/Time
increaseInMinutes: 'Increase (minutes)'
errorBudgetIsSuccessfullyReset: Error Budget is successfully reset
queryTypeService: Service Based  (used for Health Score and SLI)
queryTypeHost: Host Based (used for CV)
forConfigurationYouWillNeedAtLeastOneMonitoredServiceWithAHealthSourceAndAMetric: For configuration, you’ll need a Health Source, and a Metric.
newMetric: New Metric
cvChanges:
  changeTypeFilterDefault: 'Change Types'
  sourceFilterDefault: 'Sources'
  changesTimeline: 'Changes Timeline'
  clearFilters: 'Clear filters'
componentValidations:
  requestMethod: Request Method is required
  queryType: Query Type is required
  queryTypeLabel: Query Type
customHealthSource:
  fetchRecordsButton: Click on Fetch Records to pull records from provided URL
  addGroupNameTitle: Add New Custom Health Group Name
  customHealthMetric: Custom Health Metrics
  customHealthLog: Custom Health Log
  chartRuntimeWarning: Runtime inputs will be required to verify your configurations
  Querymapping:
    title: Query specifications and mapping
    jsonPathTitle: JSON path selection
    label: Customize the query to get our desired output and map to Harness Service
    startAndEndTimeTitle: Start and End Time Placeholders
    startTimeLabel: Start time placeholder
    endTimeLabel: End time placeholder
    logMessageJsonPath: Log Message JSON Path
    logMessageJsonPathPlaceholder: Select path for log message
    validation:
      queryName: Query name is required
      body: Body is required.
      path: Please select path.
      pathWithoutPlaceholder: Start and end time placeholders must be included in either Path or Body.
      queryType: Query Type is required.
      startAndEndTime: Start and end time placeholders must differ.
      enableJSONPaths: Fetch records from provided URL to enable path fields
      timestampJsonPath: Timestamp JSON Path is required.
      logMessageJsonPath: Log Message JSON Path is reqired.
      startTime:
        placeholder: Start time placeholder is required.
        timestamp: Start time unit is required.
      endTime:
        placeholder: End time placeholder is required.
        timestamp: End time unit is required.
  ServiceInstance:
    pathLabel: Provide Service Instance to map to Harness Service Instance
    pathModalHeader: Select path for Service Instance
top: Top
bottom: Bottom
executionLogs: Execution Logs
displayOnlyErrors: Display only errors
download: '{{ $.common.download }}'
lastOneHour: Last 1 hour
last12Hours: Last 12 hours
showingLogsFor: Showing logs for
showingLogs: Showing logs
logs:
  priorityOrRiskSelectionRequired: 'Priority or Risk selection is required'
  eventMarkedAs: This event was marked as
  eventPriorityUpdate: This event was marked with priority
  notARisk: Not a Risk
  reportedBy: Reported by
  totalCount: Total Count
  radarChartInfo: Each point in the graph above represents a log message. The region inside innermost circle represents logs from baseline/control nodes. The region between outermost circle and second circle is used for unknown logs seen in canary nodes while  the region between second circle and innermost circle is used for logs with unexpected frequency. The points that are related (logs observed in both canary and baseline nodes) will be shown on the same radii.The circle is divided into several sectors with each sector having several log messages. Use the slider to narrow down to the specific sector.
  baselineLegendTooltip: Average of the event counts across all of the control hosts
externalAPICalls: External API Calls
somethingWentWrongWhileParsingTheData: Something went wrong while parsing the data
fetchingDataFrom: Fetching data from
serviceDetails: '{{ $.common.serviceDetails }}'
theTrendIsDeterminedForTheSelectedPeriodOverPeriod: The trend % is determined for the selected period over period.
zoom: Zoom
selectTimeRange: Select time range
aMaximumOfThreeSLOCanBeComparedWithTheServiceHealth: A maximum of three SLO’s can be compared with the Service Health.
pleaseSelectSLOToGetTheData: Please select a SLO to get the data.
noSLOHasBeenCreated: No SLO has been created
noDataAvailableForTheCurrentSLOCycle: No data available for the current SLO cycle
metricThresholds:
  validations:
    countValue: Enter 2 or more
    duplicateThreshold: Duplicate threshold
    percentageValidation: Enter value below 100
  deletePromptTitle: Confirm delete Metric thresholds
  noThresholdsMessage: No thresholds created yet
  metricPacksDeletePromptContent: Unchecking the metric pack will also remove the corresponding metric thresholds settings. This action cannot be undone.
  customMetricsDeletePromptContent: Deleting the custom metric will also remove the corresponding metric thresholds settings. This action cannot be undone.
codeErrors:
  title: Code Errors
  agents: '{{ $.common.agents }}'
  agentTokens: '{{ $.common.tokens }}'
  criticalEvents: 'Critical Events'
licenseBanner:
  freePlanUsageMessage: You have used {{activeServicesCount}}/{{totalServices}} Services included in the free plan
  teamPlanUsageMessage: You have used {{activeServicesCount}}/{{totalServices}} Services included in the team plan
  limitExceedMessage: You have reached your service subscription limit. Consider increasing your limits to keep using services
