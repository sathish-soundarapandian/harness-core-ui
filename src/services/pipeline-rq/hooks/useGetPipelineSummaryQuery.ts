/*
 * Copyright 2022 Harness Inc. All rights reserved.
 * Use of this source code is governed by the PolyForm Shield 1.0.0 license
 * that can be found in the licenses directory at the root of this repository, also available at
 * https://polyformproject.org/wp-content/uploads/2020/06/PolyForm-Shield-1.0.0.txt.
 */
/* eslint-disable */
// This code is autogenerated using @harnessio/oats-cli.
// Please do not modify this code directly.
import { useQuery, UseQueryOptions } from '@tanstack/react-query'

import type { ResponsePmsPipelineSummaryResponse } from '../schemas/ResponsePmsPipelineSummaryResponse'
import type { Failure } from '../schemas/Failure'
import type { Error } from '../schemas/Error'
import { fetcher, FetcherOptions } from 'services/fetcher'

export interface GetPipelineSummaryQueryPathParams {
  pipelineIdentifier: string
}

export interface GetPipelineSummaryQueryQueryParams {
  accountIdentifier: string
  orgIdentifier: string
  projectIdentifier: string
  branch?: string
  repoIdentifier?: string
  getDefaultFromOtherRepo?: boolean
  parentEntityConnectorRef?: string
  parentEntityRepoName?: string
  parentEntityAccountIdentifier?: string
  parentEntityOrgIdentifier?: string
  parentEntityProjectIdentifier?: string
  repoName?: string
  getMetadataOnly?: boolean
}

export type GetPipelineSummaryOkResponse = ResponsePmsPipelineSummaryResponse

export type GetPipelineSummaryErrorResponse = Failure | Error

export interface GetPipelineSummaryProps
  extends GetPipelineSummaryQueryPathParams,
    Omit<FetcherOptions<GetPipelineSummaryQueryQueryParams, unknown>, 'url'> {
  queryParams: GetPipelineSummaryQueryQueryParams
}

export function getPipelineSummary(props: GetPipelineSummaryProps): Promise<GetPipelineSummaryOkResponse> {
  const { pipelineIdentifier, ...rest } = props

  return fetcher<GetPipelineSummaryOkResponse, GetPipelineSummaryQueryQueryParams, unknown>({
    url: `pipeline/api/pipelines/summary/${pipelineIdentifier}`,
    method: 'GET',
    ...rest
  })
}

/**
 *
 */
export function useGetPipelineSummaryQuery(
  props: GetPipelineSummaryProps,
  options?: Omit<UseQueryOptions<GetPipelineSummaryOkResponse, GetPipelineSummaryErrorResponse>, 'queryKey' | 'queryFn'>
) {
  return useQuery<GetPipelineSummaryOkResponse, GetPipelineSummaryErrorResponse>(
    ['getPipelineSummary', props.pipelineIdentifier, props.queryParams],
    ({ signal }) => getPipelineSummary({ ...props, signal }),
    options
  )
}
