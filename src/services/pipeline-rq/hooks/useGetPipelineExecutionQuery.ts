/*
 * Copyright 2022 Harness Inc. All rights reserved.
 * Use of this source code is governed by the PolyForm Shield 1.0.0 license
 * that can be found in the licenses directory at the root of this repository, also available at
 * https://polyformproject.org/wp-content/uploads/2020/06/PolyForm-Shield-1.0.0.txt.
 */
/* eslint-disable */
// This code is autogenerated using @harnessio/oats-cli.
// Please do not modify this code directly.
import { useQuery, UseQueryOptions } from '@tanstack/react-query'

import type { ResponseDashboardPipelineExecutionInfo } from '../schemas/ResponseDashboardPipelineExecutionInfo'
import type { Failure } from '../schemas/Failure'
import type { Error } from '../schemas/Error'
import { fetcher, FetcherOptions } from 'services/fetcher'

export interface GetPipelineExecutionQueryQueryParams {
  accountIdentifier: string
  orgIdentifier: string
  projectIdentifier: string
  pipelineIdentifier: string
  moduleInfo: string
  /**
   * @format int64
   */
  startTime: number
  /**
   * @format int64
   */
  endTime: number
}

export type GetPipelineExecutionOkResponse = ResponseDashboardPipelineExecutionInfo

export type GetPipelineExecutionErrorResponse = Failure | Error

export interface GetPipelineExecutionProps
  extends Omit<FetcherOptions<GetPipelineExecutionQueryQueryParams, unknown>, 'url'> {
  queryParams: GetPipelineExecutionQueryQueryParams
}

export function getPipelineExecution(props: GetPipelineExecutionProps): Promise<GetPipelineExecutionOkResponse> {
  const { ...rest } = props

  return fetcher<GetPipelineExecutionOkResponse, GetPipelineExecutionQueryQueryParams, unknown>({
    url: `pipeline/api/pipelines/pipelineExecution`,
    method: 'GET',
    ...rest
  })
}

/**
 *
 * @deprecated
 */
export function useGetPipelineExecutionQuery(
  props: GetPipelineExecutionProps,
  options?: Omit<
    UseQueryOptions<GetPipelineExecutionOkResponse, GetPipelineExecutionErrorResponse>,
    'queryKey' | 'queryFn'
  >
) {
  return useQuery<GetPipelineExecutionOkResponse, GetPipelineExecutionErrorResponse>(
    ['getPipelineExecution', props.queryParams],
    ({ signal }) => getPipelineExecution({ ...props, signal }),
    options
  )
}
