/*
 * Copyright 2022 Harness Inc. All rights reserved.
 * Use of this source code is governed by the PolyForm Shield 1.0.0 license
 * that can be found in the licenses directory at the root of this repository, also available at
 * https://polyformproject.org/wp-content/uploads/2020/06/PolyForm-Shield-1.0.0.txt.
 */
/* eslint-disable */
// This code is autogenerated using @harnessio/oats-cli.
// Please do not modify this code directly.
import { useQuery, UseQueryOptions } from '@tanstack/react-query'

import type { ResponseValidateTemplateInputsResponseDto } from '../schemas/ResponseValidateTemplateInputsResponseDto'
import type { Failure } from '../schemas/Failure'
import type { Error } from '../schemas/Error'
import { fetcher, FetcherOptions } from 'services/fetcher'

export interface ValidateTemplateInputsQueryQueryParams {
  accountIdentifier: string
  orgIdentifier?: string
  projectIdentifier?: string
  identifier?: string
  branch?: string
  repoIdentifier?: string
  getDefaultFromOtherRepo?: boolean
  parentEntityConnectorRef?: string
  parentEntityRepoName?: string
  parentEntityAccountIdentifier?: string
  parentEntityOrgIdentifier?: string
  parentEntityProjectIdentifier?: string
  repoName?: string
}

export type ValidateTemplateInputsOkResponse = ResponseValidateTemplateInputsResponseDto

export type ValidateTemplateInputsErrorResponse = Failure | Error

export interface ValidateTemplateInputsProps
  extends Omit<FetcherOptions<ValidateTemplateInputsQueryQueryParams, unknown>, 'url'> {
  queryParams: ValidateTemplateInputsQueryQueryParams
}

export function validateTemplateInputs(props: ValidateTemplateInputsProps): Promise<ValidateTemplateInputsOkResponse> {
  const { ...rest } = props

  return fetcher<ValidateTemplateInputsOkResponse, ValidateTemplateInputsQueryQueryParams, unknown>({
    url: `pipeline/api/refresh-template/validate-template-inputs`,
    method: 'GET',
    ...rest
  })
}

/**
 *
 */
export function useValidateTemplateInputsQuery(
  props: ValidateTemplateInputsProps,
  options?: Omit<
    UseQueryOptions<ValidateTemplateInputsOkResponse, ValidateTemplateInputsErrorResponse>,
    'queryKey' | 'queryFn'
  >
) {
  return useQuery<ValidateTemplateInputsOkResponse, ValidateTemplateInputsErrorResponse>(
    ['validateTemplateInputs', props.queryParams],
    ({ signal }) => validateTemplateInputs({ ...props, signal }),
    options
  )
}
