/**
 * Generated by @openapi-codegen
 *
 * @version 0.1.0-beta
 */
/**
 * @example {"approverId":"user111111111111111111"}
 */
export type ApproveExemptionRequestBody = {
  /*
   * User ID the user who approved or rejected this exemptions
   *
   * @example user111111111111111111
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  approverId: string
}

/**
 * @example {"expiration":1651578240,"issueId":"abcdef1234567890ghijkl","link":"https://example.com/ABC-1234","pipelineId":"your_pipeline","reason":"Waiting on upstream bug fix","requesterId":"user111111111111111111","targetId":"abcdef1234567890ghijkl","type":"Ignored"}
 */
export type CreateExemptionRequestBody = {
  /*
   * Unix timestamp at which this Exemption will expire
   *
   * @example 1651578240
   * @format int64
   */
  expiration?: number
  /*
   * Issue ID associated with the Exemption
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  issueId: string
  /*
   * Link to a related ticket
   *
   * @example https://example.com/ABC-1234
   * @maxLength 1024
   */
  link?: string
  /*
   * ID of the Harness Pipeline to which the exemption applies. You must also specify "projectId" and "orgId". Cannot be specified alongside "targetId".
   *
   * @example your_pipeline
   * @pattern ^[A-Za-z_][A-Za-z0-9_]*$
   * @maxLength 128
   */
  pipelineId?: string
  /*
   * Text describing why this Exemption is necessary
   *
   * @example Waiting on upstream bug fix
   * @maxLength 1024
   */
  reason: string
  /*
   * User ID of user who requested this exemptions
   *
   * @example user111111111111111111
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  requesterId: string
  /*
   * ID of the Target to which the exemption applies. Cannot be specified alongside "projectId" or "pipelineId".
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  targetId?: string
  /*
   * Type of Exemption (Ignored / False Positive)
   *
   * @example Ignored
   */
  type: 'Ignored' | 'False Positive'
}

/**
 * @example {"details":{"package":"json-schema","version":"v0.2.3"},"exemptionId":"abcdef1234567890ghijkl","key":"json-schema@0.2.3","keyPattern":["library_name","library_version"],"occurrences":[{"line":"42"},{"line":"666"}],"productId":"product1234567890abcde","scanId":"abcdef1234567890ghijkl","severity":8.5,"severityCode":"High","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"}
 */
export type CreateIssueRequestBody = {
  /*
   * Issue details common to all occurrences
   *
   * @example {"package":"json-schema","version":"v0.2.3"}
   */
  details: {
    [key: string]: any
  }
  /*
   * ID of the associated Exemption
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  exemptionId?: string
  /*
   * Compression/deduplication key
   *
   * @example json-schema@0.2.3
   * @maxLength 512
   */
  key: string
  /*
   * The pattern of fields used to generate this Security Issue's Key
   *
   * @example library_name
   * @example library_version
   */
  keyPattern: string[]
  /*
   * Array of details unique to each occurrence
   *
   * @example {"line":"42"}
   * @example {"line":"666"}
   */
  occurrences?: {
    [key: string]: any
  }[]
  /*
   * The scan tool that identified this Security Issue
   *
   * @example product1234567890abcde
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  productId: string
  /*
   * The Security Scan execution that detected this Security Issue
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  scanId: string
  /*
   * Numeric severity, from 0 (lowest) to 10 (highest)
   *
   * @example 8.5
   * @format float
   */
  severity: number
  /*
   * Severity code
   *
   * @example High
   */
  severityCode: 'Critical' | 'High' | 'Medium' | 'Low' | 'Info' | 'Unassigned'
  /*
   * Title of the Security Issue
   *
   * @example json-schema@0.2.3 is vulnerable to Prototype Pollution
   * @maxLength 128
   */
  title: string
}

/**
 * @example {"executionId":"abcdef1234567890ghijkl","orgId":"your_harness_org","pipelineId":"your_harness_pipeline","productId":"product111111111111111","projectId":"your_harness_project","refinementVersion":"1.0.5","stageId":"stage_id","status":"Succeeded","stepId":"step_id","targetVariantId":"variant111111111111111"}
 */
export type CreateScanRequestBody = {
  /*
   * Pipeline Execution ID associated with the Scan
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  executionId: string
  /*
   * Harness Organization ID
   *
   * @example your_harness_org
   * @pattern ^[A-Za-z_][A-Za-z0-9_]*$
   * @maxLength 128
   */
  orgId: string
  /*
   * Harness Organization ID
   *
   * @example your_harness_pipeline
   * @pattern ^[A-Za-z_][A-Za-z0-9_]*$
   * @maxLength 128
   */
  pipelineId: string
  /*
   * The Scan Product used for the Scan
   *
   * @example product111111111111111
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  productId: string
  /*
   * Harness Project ID
   *
   * @example your_harness_project
   * @pattern ^[A-Za-z_][A-Za-z0-9_]*$
   * @maxLength 128
   */
  projectId: string
  /*
   * The Issue refinement version used for this Scan
   *
   * @example 1.0.5
   */
  refinementVersion: string
  /*
   * Pipeline Stage ID associated with the Scan
   *
   * @example stage_id
   * @pattern ^[A-Za-z_][A-Za-z0-9_]*$
   * @maxLength 128
   */
  stageId: string
  /*
   * Current status of the Scan
   *
   * @example Succeeded
   */
  status: 'Pending' | 'Running' | 'Succeeded' | 'Failed'
  /*
   * Pipeline Step ID associated with the Scan
   *
   * @example step_id
   * @pattern ^[A-Za-z_][A-Za-z0-9_]*$
   * @maxLength 128
   */
  stepId: string
  /*
   * The Target Variant associated with the Scan
   *
   * @example variant111111111111111
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  targetVariantId: string
}

/**
 * @example {"baselineVariantId":"abcdef1234567890ghijkl","directory":"app/src","name":"NodeGoat","type":"repository","url":"https://github.com/example/repo"}
 */
export type CreateTargetRequestBody = {
  /*
   * ID of baseline Target Variant for Issue comparison
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^([a-zA-Z0-9_-]{22}|)$
   */
  baselineVariantId?: string
  /*
   * Directory within the Scan Target to be scanned
   *
   * @example app/src
   * @maxLength 1024
   */
  directory?: string
  /*
   * Name of the Scan Target
   *
   * @example NodeGoat
   * @maxLength 128
   */
  name: string
  /*
   * Scan Target's type
   *
   * @example repository
   */
  type: 'container' | 'repository' | 'instance' | 'configuration'
  /*
   * URL used to access the Scan Target
   *
   * @example https://github.com/example/repo
   * @maxLength 1024
   */
  url?: string
}

/**
 * @example {"hash":"d1998db4b4651a4b9be9ecf320a2dfb8b4710e35","parameters":"{\"branch\":\"main\"}"}
 */
export type CreateTargetVariantRequestBody = {
  /*
   * Git Commit or Container Image hash
   *
   * @example d1998db4b4651a4b9be9ecf320a2dfb8b4710e35
   * @maxLength 64
   */
  hash?: string
  /*
   * Parameters for this Variant, as a JSON-encoded string
   *
   * @example {"branch":"main"}
   */
  parameters: string
}

/**
 * Information about an Exemption
 *
 * @example {"approverId":"user111111111111111111","created":1651578240,"expiration":1651578240,"id":"abcdef1234567890ghijkl","issueId":"abcdef1234567890ghijkl","lastModified":1651578240,"link":"https://example.com/ABC-1234","orgId":"your_project","pipelineId":"your_pipeline","projectId":"your_project","reason":"Waiting on upstream bug fix","requesterId":"user111111111111111111","status":"Rejected","targetId":"abcdef1234567890ghijkl","type":"Ignored"}
 */
export type Exemption = {
  /*
   * User ID the user who approved or rejected this exemptions
   *
   * @example user111111111111111111
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  approverId?: string
  /*
   * Unix timestamp at which the resource was created
   *
   * @example 1651578240
   * @format int64
   */
  created: number
  /*
   * Unix timestamp at which this Exemption will expire
   *
   * @example 1651578240
   * @format int64
   */
  expiration?: number
  /*
   * Resource identifier
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  id: string
  /*
   * Issue ID associated with the Exemption
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  issueId: string
  /*
   * Unix timestamp at which the resource was most recently modified
   *
   * @example 1651578240
   * @format int64
   */
  lastModified: number
  /*
   * Link to a related ticket
   *
   * @example https://example.com/ABC-1234
   * @maxLength 1024
   */
  link?: string
  /*
   * ID of the Harness Organization to which the exemption applies. Cannot be specified alongside "targetId".
   *
   * @example your_project
   * @pattern ^[A-Za-z_][A-Za-z0-9_]*$
   * @maxLength 128
   */
  orgId?: string
  /*
   * ID of the Harness Pipeline to which the exemption applies. You must also specify "projectId" and "orgId". Cannot be specified alongside "targetId".
   *
   * @example your_pipeline
   * @pattern ^[A-Za-z_][A-Za-z0-9_]*$
   * @maxLength 128
   */
  pipelineId?: string
  /*
   * ID of the Harness Project to which the exemption applies. You must also specify "orgId". Cannot be specified alongside "targetId".
   *
   * @example your_project
   * @pattern ^[A-Za-z_][A-Za-z0-9_]*$
   * @maxLength 128
   */
  projectId?: string
  /*
   * Text describing why this Exemption is necessary
   *
   * @example Waiting on upstream bug fix
   * @maxLength 1024
   */
  reason: string
  /*
   * User ID of user who requested this exemptions
   *
   * @example user111111111111111111
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  requesterId: string
  /*
   * Approval status of Exemption
   *
   * @default Pending
   * @example Expired
   */
  status: 'Pending' | 'Approved' | 'Rejected' | 'Expired'
  /*
   * ID of the Target to which the exemption applies. Cannot be specified alongside "projectId" or "pipelineId".
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  targetId?: string
  /*
   * Type of Exemption (Ignored / False Positive)
   *
   * @example Ignored
   */
  type: 'Ignored' | 'False Positive'
}

export type ExemptionsCreateExemptionResponseBody = IDResult

/**
 * @example {"pagination":{"link":"","page":4,"pageSize":20,"totalItems":230,"totalPages":12},"results":[{"approverId":"user111111111111111111","created":1651578240,"expiration":1651578240,"id":"abcdef1234567890ghijkl","issueId":"abcdef1234567890ghijkl","lastModified":1651578240,"link":"https://example.com/ABC-1234","orgId":"your_project","pipelineId":"your_pipeline","projectId":"your_project","reason":"Waiting on upstream bug fix","requesterId":"user111111111111111111","status":"Approved","targetId":"abcdef1234567890ghijkl","type":"Ignored"},{"approverId":"user111111111111111111","created":1651578240,"expiration":1651578240,"id":"abcdef1234567890ghijkl","issueId":"abcdef1234567890ghijkl","lastModified":1651578240,"link":"https://example.com/ABC-1234","orgId":"your_project","pipelineId":"your_pipeline","projectId":"your_project","reason":"Waiting on upstream bug fix","requesterId":"user111111111111111111","status":"Approved","targetId":"abcdef1234567890ghijkl","type":"Ignored"},{"approverId":"user111111111111111111","created":1651578240,"expiration":1651578240,"id":"abcdef1234567890ghijkl","issueId":"abcdef1234567890ghijkl","lastModified":1651578240,"link":"https://example.com/ABC-1234","orgId":"your_project","pipelineId":"your_pipeline","projectId":"your_project","reason":"Waiting on upstream bug fix","requesterId":"user111111111111111111","status":"Approved","targetId":"abcdef1234567890ghijkl","type":"Ignored"}]}
 */
export type ExemptionsListExemptionsResponseBody = {
  pagination: Pagination
  /*
   * @example {"approverId":"user111111111111111111","created":1651578240,"expiration":1651578240,"id":"abcdef1234567890ghijkl","issueId":"abcdef1234567890ghijkl","lastModified":1651578240,"link":"https://example.com/ABC-1234","orgId":"your_project","pipelineId":"your_pipeline","projectId":"your_project","reason":"Waiting on upstream bug fix","requesterId":"user111111111111111111","status":"Approved","targetId":"abcdef1234567890ghijkl","type":"Ignored"}
   * @example {"approverId":"user111111111111111111","created":1651578240,"expiration":1651578240,"id":"abcdef1234567890ghijkl","issueId":"abcdef1234567890ghijkl","lastModified":1651578240,"link":"https://example.com/ABC-1234","orgId":"your_project","pipelineId":"your_pipeline","projectId":"your_project","reason":"Waiting on upstream bug fix","requesterId":"user111111111111111111","status":"Approved","targetId":"abcdef1234567890ghijkl","type":"Ignored"}
   * @example {"approverId":"user111111111111111111","created":1651578240,"expiration":1651578240,"id":"abcdef1234567890ghijkl","issueId":"abcdef1234567890ghijkl","lastModified":1651578240,"link":"https://example.com/ABC-1234","orgId":"your_project","pipelineId":"your_pipeline","projectId":"your_project","reason":"Waiting on upstream bug fix","requesterId":"user111111111111111111","status":"Approved","targetId":"abcdef1234567890ghijkl","type":"Ignored"}
   */
  results: Exemption[]
}

/**
 * Individual FrontendExemption
 *
 * @example {"approverId":"user111111111111111111","created":1651578240,"expiration":1651578240,"id":"abcdef1234567890ghijkl","issueId":"2222222222222222222222","issueName":"foo library has a vulnerability","lastModified":1651578240,"orgId":"STO","pipelineId":"pipeline_1","projectId":"STO","reason":"Upstream bug","requesterId":"user111111111111111111","status":"Approved","targetId":"target2222222222222222","type":"Ignored"}
 */
export type FrontendExemption = {
  /*
   * User ID of the user who approved this exemption
   *
   * @example user111111111111111111
   */
  approverId?: string
  /*
   * Unix timestamp at which the resource was created
   *
   * @example 1651578240
   * @format int64
   */
  created: number
  /*
   * Unix timestamp at which this Exemption will expire
   *
   * @example 1651578240
   * @format int64
   */
  expiration?: number
  /*
   * Resource identifier
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  id: string
  /*
   * ID of exempted issue
   *
   * @example 2222222222222222222222
   */
  issueId: string
  /*
   * Name of issue
   *
   * @example foo library has a vulnerability
   */
  issueName: string
  /*
   * Unix timestamp at which the resource was most recently modified
   *
   * @example 1651578240
   * @format int64
   */
  lastModified: number
  /*
   * Harness ID of project to which this exemption applies
   *
   * @example STO
   */
  orgId?: string
  /*
   * Harness ID of pipeline to which this exemption applies
   *
   * @example pipeline_1
   */
  pipelineId?: string
  /*
   * Harness ID of project to which this exemption applies
   *
   * @example STO
   */
  projectId?: string
  /*
   * Reason for exemption
   *
   * @example Upstream bug
   */
  reason: string
  /*
   * User ID of the user who requested this exemption
   *
   * @example user111111111111111111
   */
  requesterId: string
  /*
   * Status of exemption
   *
   * @example Approved
   */
  status: string
  /*
   * ID of Target to which this exemption applies
   *
   * @example target2222222222222222
   */
  targetId?: string
  /*
   * Type of exemption
   *
   * @example Ignored
   */
  type: string
}

export type FrontendOverviewResponseBody = OverviewResult

export type FrontendPipelineSecurityResponseBody = PipelineSecurityResult

export type FrontendSecurityReviewResponseBody = SecurityReviewResult

export type FrontendTestTargetsResponseBody = TestTargetResult

/**
 * @example {"active":true,"counts":{"critical":1,"high":3,"ignored":1,"info":11,"low":39,"medium":17,"newCritical":1,"newHigh":3,"newInfo":11,"newLow":39,"newMedium":17,"newUnassigned":0,"unassigned":0},"date":1651578240}
 */
export type HistoricalIssueCounts = {
  /*
   * True if at least one baseline was scanned on this date
   *
   * @example true
   */
  active: boolean
  counts: IssueCounts
  /*
   * @example 1651578240
   * @format int64
   */
  date: number
}

/**
 * @example {"id":"abcdef1234567890ghijkl"}
 */
export type IDResult = {
  /*
   * Resource identifier
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  id: string
}

/**
 * Information about a Security Issue
 *
 * @example {"created":1651578240,"details":"{\"package\": \"json-schema\", \"version\": \"v0.2.3\"}","exemptionId":"abcdef1234567890ghijkl","id":"abcdef1234567890ghijkl","isNew":true,"key":"json-schema@0.2.3","occurrences":"[{\"line\": \"42\"}, {\"line\": \"666\"}]","productId":"product1234567890abcde","severity":8.5,"severityCode":"High","status":"Remediated","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"}
 */
export type Issue = {
  /*
   * Unix timestamp at which the resource was created
   *
   * @example 1651578240
   * @format int64
   */
  created: number
  /*
   * Issue details common to all occurrences
   *
   * @example {"package": "json-schema", "version": "v0.2.3"}
   */
  details: string
  /*
   * ID of the associated Exemption
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  exemptionId?: string
  /*
   * Resource identifier
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  id: string
  /*
   * Indicates if the Security Issue was found to be new, relative to the baseline
   *
   * @example true
   */
  isNew?: boolean
  /*
   * Compression/deduplication key
   *
   * @example json-schema@0.2.3
   * @maxLength 512
   */
  key: string
  /*
   * Array of details unique to each occurrence
   *
   * @example [{"line": "42"}, {"line": "666"}]
   */
  occurrences?: string
  /*
   * The scan tool that identified this Security Issue
   *
   * @example product1234567890abcde
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  productId: string
  /*
   * Numeric severity, from 0 (lowest) to 10 (highest)
   *
   * @example 8.5
   * @format float
   */
  severity: number
  /*
   * Severity code
   *
   * @example High
   */
  severityCode: 'Critical' | 'High' | 'Medium' | 'Low' | 'Info' | 'Unassigned'
  /*
   * Indicates if the Security Issue was found to be remediated, ignored, etc.
   *
   * @example Remediated
   */
  status?: 'Remediated' | 'Ignored' | 'False Positive'
  /*
   * Title of the Security Issue
   *
   * @example json-schema@0.2.3 is vulnerable to Prototype Pollution
   * @maxLength 128
   */
  title: string
}

/**
 * The count of Security Issues, by severity code, for a given Harness Pipeline Execution
 *
 * @example {"critical":1,"high":3,"ignored":1,"info":11,"low":39,"medium":17,"newCritical":1,"newHigh":3,"newInfo":11,"newLow":39,"newMedium":17,"newUnassigned":0,"unassigned":0}
 */
export type IssueCounts = {
  /*
   * The number of Critical-severity Issues
   *
   * @example 1
   * @format int32
   */
  critical: number
  /*
   * The number of High-severity Issues
   *
   * @example 3
   * @format int32
   */
  high: number
  /*
   * The number of Issues ignored due to Exemptions, and therefore not included in other counts
   *
   * @example 1
   * @format int32
   */
  ignored: number
  /*
   * The number of Informational Issues
   *
   * @example 11
   * @format int32
   */
  info: number
  /*
   * The number of Low-severity Issues
   *
   * @example 39
   * @format int32
   */
  low: number
  /*
   * The number of Medium-severity Issues
   *
   * @example 17
   * @format int32
   */
  medium: number
  /*
   * The number of new Critical-severity Issues
   *
   * @example 1
   * @format int32
   */
  newCritical: number
  /*
   * The number of new High-severity Issues
   *
   * @example 3
   * @format int32
   */
  newHigh: number
  /*
   * The number of new Informational Issues
   *
   * @example 11
   * @format int32
   */
  newInfo: number
  /*
   * The number of new Low-severity Issues
   *
   * @example 39
   * @format int32
   */
  newLow: number
  /*
   * The number of new Medium-severity Issues
   *
   * @example 17
   * @format int32
   */
  newMedium: number
  /*
   * The number of new Issues with no associated severity code
   *
   * @example 0
   * @format int32
   */
  newUnassigned: number
  /*
   * The number of Issues with no associated severity code
   *
   * @example 0
   * @format int32
   */
  unassigned: number
}

/**
 * Short summary of an Issue
 *
 * @example {"exemptionId":"abcdef1234567890ghijkl","id":"abcdef1234567890ghijkl","isNew":true,"key":"json-schema@0.2.3","severity":8.5,"severityCode":"High","status":"Remediated","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"}
 */
export type IssueSummary = {
  /*
   * ID of the associated Exemption
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  exemptionId?: string
  /*
   * Resource identifier
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  id: string
  /*
   * Indicates if the Security Issue was found to be new, relative to the baseline
   *
   * @example true
   */
  isNew?: boolean
  /*
   * Compression/deduplication key
   *
   * @example json-schema@0.2.3
   * @maxLength 512
   */
  key: string
  /*
   * Numeric severity, from 0 (lowest) to 10 (highest)
   *
   * @example 8.5
   * @format float
   */
  severity: number
  /*
   * Severity code
   *
   * @example High
   */
  severityCode: 'Critical' | 'High' | 'Medium' | 'Low' | 'Info' | 'Unassigned'
  /*
   * Indicates if the Security Issue was found to be remediated, ignored, etc.
   *
   * @example Remediated
   */
  status?: 'Remediated' | 'Ignored' | 'False Positive'
  /*
   * Title of the Security Issue
   *
   * @example json-schema@0.2.3 is vulnerable to Prototype Pollution
   * @maxLength 128
   */
  title: string
}

/**
 * @example {"pagination":{"link":"","page":4,"pageSize":20,"totalItems":230,"totalPages":12},"results":[{"created":1651578240,"details":"{\"package\": \"json-schema\", \"version\": \"v0.2.3\"}","exemptionId":"abcdef1234567890ghijkl","id":"abcdef1234567890ghijkl","isNew":true,"key":"json-schema@0.2.3","occurrences":"[{\"line\": \"42\"}, {\"line\": \"666\"}]","productId":"product1234567890abcde","severity":8.5,"severityCode":"High","status":"Remediated","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"},{"created":1651578240,"details":"{\"package\": \"json-schema\", \"version\": \"v0.2.3\"}","exemptionId":"abcdef1234567890ghijkl","id":"abcdef1234567890ghijkl","isNew":true,"key":"json-schema@0.2.3","occurrences":"[{\"line\": \"42\"}, {\"line\": \"666\"}]","productId":"product1234567890abcde","severity":8.5,"severityCode":"High","status":"Remediated","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"},{"created":1651578240,"details":"{\"package\": \"json-schema\", \"version\": \"v0.2.3\"}","exemptionId":"abcdef1234567890ghijkl","id":"abcdef1234567890ghijkl","isNew":true,"key":"json-schema@0.2.3","occurrences":"[{\"line\": \"42\"}, {\"line\": \"666\"}]","productId":"product1234567890abcde","severity":8.5,"severityCode":"High","status":"Remediated","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"},{"created":1651578240,"details":"{\"package\": \"json-schema\", \"version\": \"v0.2.3\"}","exemptionId":"abcdef1234567890ghijkl","id":"abcdef1234567890ghijkl","isNew":true,"key":"json-schema@0.2.3","occurrences":"[{\"line\": \"42\"}, {\"line\": \"666\"}]","productId":"product1234567890abcde","severity":8.5,"severityCode":"High","status":"Remediated","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"}]}
 */
export type IssuesListIssuesResponseBody = {
  pagination: Pagination
  /*
   * @example {"created":1651578240,"details":"{\"package\": \"json-schema\", \"version\": \"v0.2.3\"}","exemptionId":"abcdef1234567890ghijkl","id":"abcdef1234567890ghijkl","isNew":true,"key":"json-schema@0.2.3","occurrences":"[{\"line\": \"42\"}, {\"line\": \"666\"}]","productId":"product1234567890abcde","severity":8.5,"severityCode":"High","status":"Remediated","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"}
   * @example {"created":1651578240,"details":"{\"package\": \"json-schema\", \"version\": \"v0.2.3\"}","exemptionId":"abcdef1234567890ghijkl","id":"abcdef1234567890ghijkl","isNew":true,"key":"json-schema@0.2.3","occurrences":"[{\"line\": \"42\"}, {\"line\": \"666\"}]","productId":"product1234567890abcde","severity":8.5,"severityCode":"High","status":"Remediated","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"}
   * @example {"created":1651578240,"details":"{\"package\": \"json-schema\", \"version\": \"v0.2.3\"}","exemptionId":"abcdef1234567890ghijkl","id":"abcdef1234567890ghijkl","isNew":true,"key":"json-schema@0.2.3","occurrences":"[{\"line\": \"42\"}, {\"line\": \"666\"}]","productId":"product1234567890abcde","severity":8.5,"severityCode":"High","status":"Remediated","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"}
   * @example {"created":1651578240,"details":"{\"package\": \"json-schema\", \"version\": \"v0.2.3\"}","exemptionId":"abcdef1234567890ghijkl","id":"abcdef1234567890ghijkl","isNew":true,"key":"json-schema@0.2.3","occurrences":"[{\"line\": \"42\"}, {\"line\": \"666\"}]","productId":"product1234567890abcde","severity":8.5,"severityCode":"High","status":"Remediated","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"}
   */
  results: Issue[]
}

/**
 * @example {"message":"Not Found","status":404}
 */
export type NotFound = {
  /*
   * @example Not Found
   */
  message: string
  /*
   * @default 404
   * @example 404
   * @format int64
   */
  status?: number
}

/**
 * Overview information
 *
 * @example {"baselineExecutions":["A eaque.","Blanditiis quia amet aut."],"historicalCounts":[{"active":true,"counts":{"critical":1,"high":3,"ignored":1,"info":11,"low":39,"medium":17,"newCritical":1,"newHigh":3,"newInfo":11,"newLow":39,"newMedium":17,"newUnassigned":0,"unassigned":0},"date":1651578240},{"active":true,"counts":{"critical":1,"high":3,"ignored":1,"info":11,"low":39,"medium":17,"newCritical":1,"newHigh":3,"newInfo":11,"newLow":39,"newMedium":17,"newUnassigned":0,"unassigned":0},"date":1651578240}]}
 */
export type OverviewResult = {
  /*
   * Harness Execution IDs of the most recent baseline scans
   *
   * @example Iure ut sunt voluptates sequi saepe tempora.
   * @example Consequatur eum rerum reiciendis qui ipsam.
   * @example Repellat quod perferendis voluptas nisi eveniet.
   */
  baselineExecutions?: string[]
  /*
   * Counts of active issues on baselines for each of the past several days
   *
   * @example {"active":true,"counts":{"critical":1,"high":3,"ignored":1,"info":11,"low":39,"medium":17,"newCritical":1,"newHigh":3,"newInfo":11,"newLow":39,"newMedium":17,"newUnassigned":0,"unassigned":0},"date":1651578240}
   * @example {"active":true,"counts":{"critical":1,"high":3,"ignored":1,"info":11,"low":39,"medium":17,"newCritical":1,"newHigh":3,"newInfo":11,"newLow":39,"newMedium":17,"newUnassigned":0,"unassigned":0},"date":1651578240}
   */
  historicalCounts: HistoricalIssueCounts[]
}

/**
 * @example {"link":"","page":4,"pageSize":20,"totalItems":230,"totalPages":12}
 */
export type Pagination = {
  /*
   * Link-based paging
   *
   * @example
   */
  link?: string
  /*
   * Page number (starting from 0)
   *
   * @example 4
   * @format int64
   */
  page: number
  /*
   * Requested page size
   *
   * @example 20
   * @format int64
   */
  pageSize: number
  /*
   * Total results available
   *
   * @example 230
   * @format int64
   */
  totalItems: number
  /*
   * Total pages available
   *
   * @example 12
   * @format int64
   */
  totalPages: number
}

/**
 * @example {"baselineVariantId":"abcdef1234567890ghijkl","directory":"app/src","name":"NodeGoat","type":"repository","url":"https://github.com/example/repo"}
 */
export type PatchTargetRequestBody = {
  /*
   * ID of baseline Target Variant for Issue comparison
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^([a-zA-Z0-9_-]{22}|)$
   */
  baselineVariantId?: string
  /*
   * Directory within the Scan Target to be scanned
   *
   * @example app/src
   * @maxLength 1024
   */
  directory?: string
  /*
   * Name of the Scan Target
   *
   * @example NodeGoat
   * @maxLength 128
   */
  name?: string
  /*
   * Scan Target's type
   *
   * @example repository
   */
  type?: 'container' | 'repository' | 'instance' | 'configuration'
  /*
   * URL used to access the Scan Target
   *
   * @example https://github.com/example/repo
   * @maxLength 1024
   */
  url?: string
}

/**
 * Data needed by the PipelineSecurityView
 *
 * @example {"steps":{"stage_id.step_id":{"baseline":"branch: main","issues":[{"exemptionId":"abcdef1234567890ghijkl","id":"abcdef1234567890ghijkl","isNew":true,"key":"json-schema@0.2.3","severity":8.5,"severityCode":"High","status":"Remediated","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"},{"exemptionId":"abcdef1234567890ghijkl","id":"abcdef1234567890ghijkl","isNew":true,"key":"json-schema@0.2.3","severity":8.5,"severityCode":"High","status":"Remediated","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"}],"scanId":"scan111111111111111111","scanTool":"owasp","target":"branch: feature"}}}
 */
export type PipelineSecurityResult = {
  /*
   * Issues diffed against baseline targets, grouped by Stage and Step ID
   *
   * @example {"stage_id.step_id":{"baseline":"branch: main","issues":[{"exemptionId":"abcdef1234567890ghijkl","id":"abcdef1234567890ghijkl","isNew":true,"key":"json-schema@0.2.3","severity":8.5,"severityCode":"High","status":"Remediated","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"},{"exemptionId":"abcdef1234567890ghijkl","id":"abcdef1234567890ghijkl","isNew":true,"key":"json-schema@0.2.3","severity":8.5,"severityCode":"High","status":"Remediated","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"}],"scanId":"scan111111111111111111","scanTool":"owasp","target":"branch: feature"}}
   */
  steps: {
    [key: string]: StepInfo
  }
}

/**
 * Information about a Scan Tool
 *
 * @example {"created":1651578240,"description":"OWASP 5.x SCA scanner","id":"abcdef1234567890ghijkl","isEnabled":true,"lastModified":1651578240,"name":"owasp"}
 */
export type Product = {
  /*
   * Unix timestamp at which the resource was created
   *
   * @example 1651578240
   * @format int64
   */
  created: number
  /*
   * Scan Tool's description
   *
   * @example OWASP 5.x SCA scanner
   */
  description: string
  /*
   * Resource identifier
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  id: string
  /*
   * 'true' if this Scan Tool is enabled for use
   *
   * @example true
   */
  isEnabled: boolean
  /*
   * Unix timestamp at which the resource was most recently modified
   *
   * @example 1651578240
   * @format int64
   */
  lastModified: number
  /*
   * Name of the Scan Tool
   *
   * @example owasp
   */
  name: string
}

/**
 * @example {"pagination":{"link":"","page":4,"pageSize":20,"totalItems":230,"totalPages":12},"results":[{"created":1651578240,"description":"OWASP 5.x SCA scanner","id":"abcdef1234567890ghijkl","isEnabled":true,"lastModified":1651578240,"name":"owasp"},{"created":1651578240,"description":"OWASP 5.x SCA scanner","id":"abcdef1234567890ghijkl","isEnabled":true,"lastModified":1651578240,"name":"owasp"}]}
 */
export type ProductsListProductsResponseBody = {
  pagination: Pagination
  /*
   * @example {"created":1651578240,"description":"OWASP 5.x SCA scanner","id":"abcdef1234567890ghijkl","isEnabled":true,"lastModified":1651578240,"name":"owasp"}
   * @example {"created":1651578240,"description":"OWASP 5.x SCA scanner","id":"abcdef1234567890ghijkl","isEnabled":true,"lastModified":1651578240,"name":"owasp"}
   */
  results: Product[]
}

/**
 * Information about a Security Test Scan
 *
 * @example {"created":1651578240,"executionId":"abcdef1234567890ghijkl","id":"abcdef1234567890ghijkl","lastModified":1651578240,"orgId":"your_harness_org","pipelineId":"your_harness_pipeline","productId":"product111111111111111","projectId":"your_harness_project","refinementVersion":"1.0.5","stageId":"stage_id","status":"Succeeded","stepId":"step_id","targetVariantId":"variant111111111111111"}
 */
export type Scan = {
  /*
   * Unix timestamp at which the resource was created
   *
   * @example 1651578240
   * @format int64
   */
  created: number
  /*
   * Pipeline Execution ID associated with the Scan
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  executionId: string
  /*
   * Resource identifier
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  id: string
  /*
   * Unix timestamp at which the resource was most recently modified
   *
   * @example 1651578240
   * @format int64
   */
  lastModified: number
  /*
   * Harness Organization ID
   *
   * @example your_harness_org
   * @pattern ^[A-Za-z_][A-Za-z0-9_]*$
   * @maxLength 128
   */
  orgId: string
  /*
   * Harness Organization ID
   *
   * @example your_harness_pipeline
   * @pattern ^[A-Za-z_][A-Za-z0-9_]*$
   * @maxLength 128
   */
  pipelineId: string
  /*
   * The Scan Product used for the Scan
   *
   * @example product111111111111111
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  productId: string
  /*
   * Harness Project ID
   *
   * @example your_harness_project
   * @pattern ^[A-Za-z_][A-Za-z0-9_]*$
   * @maxLength 128
   */
  projectId: string
  /*
   * The Issue refinement version used for this Scan
   *
   * @example 1.0.5
   */
  refinementVersion: string
  /*
   * Pipeline Stage ID associated with the Scan
   *
   * @example stage_id
   * @pattern ^[A-Za-z_][A-Za-z0-9_]*$
   * @maxLength 128
   */
  stageId: string
  /*
   * Current status of the Scan
   *
   * @example Succeeded
   */
  status: 'Pending' | 'Running' | 'Succeeded' | 'Failed'
  /*
   * Pipeline Step ID associated with the Scan
   *
   * @example step_id
   * @pattern ^[A-Za-z_][A-Za-z0-9_]*$
   * @maxLength 128
   */
  stepId: string
  /*
   * The Target Variant associated with the Scan
   *
   * @example variant111111111111111
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  targetVariantId: string
}

/**
 * @example {"pagination":{"link":"","page":4,"pageSize":20,"totalItems":230,"totalPages":12},"results":[{"created":1651578240,"executionId":"abcdef1234567890ghijkl","id":"abcdef1234567890ghijkl","lastModified":1651578240,"orgId":"your_harness_org","pipelineId":"your_harness_pipeline","productId":"product111111111111111","projectId":"your_harness_project","refinementVersion":"1.0.5","stageId":"stage_id","status":"Succeeded","stepId":"step_id","targetVariantId":"variant111111111111111"},{"created":1651578240,"executionId":"abcdef1234567890ghijkl","id":"abcdef1234567890ghijkl","lastModified":1651578240,"orgId":"your_harness_org","pipelineId":"your_harness_pipeline","productId":"product111111111111111","projectId":"your_harness_project","refinementVersion":"1.0.5","stageId":"stage_id","status":"Succeeded","stepId":"step_id","targetVariantId":"variant111111111111111"},{"created":1651578240,"executionId":"abcdef1234567890ghijkl","id":"abcdef1234567890ghijkl","lastModified":1651578240,"orgId":"your_harness_org","pipelineId":"your_harness_pipeline","productId":"product111111111111111","projectId":"your_harness_project","refinementVersion":"1.0.5","stageId":"stage_id","status":"Succeeded","stepId":"step_id","targetVariantId":"variant111111111111111"}]}
 */
export type ScansListScansResponseBody = {
  pagination: Pagination
  /*
   * @example {"created":1651578240,"executionId":"abcdef1234567890ghijkl","id":"abcdef1234567890ghijkl","lastModified":1651578240,"orgId":"your_harness_org","pipelineId":"your_harness_pipeline","productId":"product111111111111111","projectId":"your_harness_project","refinementVersion":"1.0.5","stageId":"stage_id","status":"Succeeded","stepId":"step_id","targetVariantId":"variant111111111111111"}
   * @example {"created":1651578240,"executionId":"abcdef1234567890ghijkl","id":"abcdef1234567890ghijkl","lastModified":1651578240,"orgId":"your_harness_org","pipelineId":"your_harness_pipeline","productId":"product111111111111111","projectId":"your_harness_project","refinementVersion":"1.0.5","stageId":"stage_id","status":"Succeeded","stepId":"step_id","targetVariantId":"variant111111111111111"}
   * @example {"created":1651578240,"executionId":"abcdef1234567890ghijkl","id":"abcdef1234567890ghijkl","lastModified":1651578240,"orgId":"your_harness_org","pipelineId":"your_harness_pipeline","productId":"product111111111111111","projectId":"your_harness_project","refinementVersion":"1.0.5","stageId":"stage_id","status":"Succeeded","stepId":"step_id","targetVariantId":"variant111111111111111"}
   */
  results: Scan[]
}

/**
 * Data needed by the Security Review page
 *
 * @example {"exemptions":[{"approverId":"user111111111111111111","created":1651578240,"expiration":1651578240,"id":"abcdef1234567890ghijkl","issueId":"2222222222222222222222","issueName":"foo library has a vulnerability","lastModified":1651578240,"orgId":"STO","pipelineId":"pipeline_1","projectId":"STO","reason":"Upstream bug","requesterId":"user111111111111111111","status":"Approved","targetId":"target2222222222222222","type":"Ignored"},{"approverId":"user111111111111111111","created":1651578240,"expiration":1651578240,"id":"abcdef1234567890ghijkl","issueId":"2222222222222222222222","issueName":"foo library has a vulnerability","lastModified":1651578240,"orgId":"STO","pipelineId":"pipeline_1","projectId":"STO","reason":"Upstream bug","requesterId":"user111111111111111111","status":"Approved","targetId":"target2222222222222222","type":"Ignored"},{"approverId":"user111111111111111111","created":1651578240,"expiration":1651578240,"id":"abcdef1234567890ghijkl","issueId":"2222222222222222222222","issueName":"foo library has a vulnerability","lastModified":1651578240,"orgId":"STO","pipelineId":"pipeline_1","projectId":"STO","reason":"Upstream bug","requesterId":"user111111111111111111","status":"Approved","targetId":"target2222222222222222","type":"Ignored"},{"approverId":"user111111111111111111","created":1651578240,"expiration":1651578240,"id":"abcdef1234567890ghijkl","issueId":"2222222222222222222222","issueName":"foo library has a vulnerability","lastModified":1651578240,"orgId":"STO","pipelineId":"pipeline_1","projectId":"STO","reason":"Upstream bug","requesterId":"user111111111111111111","status":"Approved","targetId":"target2222222222222222","type":"Ignored"}]}
 */
export type SecurityReviewResult = {
  /*
   * Security Review data
   *
   * @example {"approverId":"user111111111111111111","created":1651578240,"expiration":1651578240,"id":"abcdef1234567890ghijkl","issueId":"2222222222222222222222","issueName":"foo library has a vulnerability","lastModified":1651578240,"orgId":"STO","pipelineId":"pipeline_1","projectId":"STO","reason":"Upstream bug","requesterId":"user111111111111111111","status":"Approved","targetId":"target2222222222222222","type":"Ignored"}
   * @example {"approverId":"user111111111111111111","created":1651578240,"expiration":1651578240,"id":"abcdef1234567890ghijkl","issueId":"2222222222222222222222","issueName":"foo library has a vulnerability","lastModified":1651578240,"orgId":"STO","pipelineId":"pipeline_1","projectId":"STO","reason":"Upstream bug","requesterId":"user111111111111111111","status":"Approved","targetId":"target2222222222222222","type":"Ignored"}
   */
  exemptions: FrontendExemption[]
}

/**
 * @example {"commit":"96381692bf3a2bd7904769c6886e832435768b57","version":"v0.123.0"}
 */
export type ServiceVersion = {
  /*
   * Build identifier
   *
   * @example 96381692bf3a2bd7904769c6886e832435768b57
   */
  commit: string
  /*
   * Version number
   *
   * @example v0.123.0
   */
  version: string
}

/**
 * Information about a Scan Step
 *
 * @example {"baseline":"branch: main","issues":[{"exemptionId":"abcdef1234567890ghijkl","id":"abcdef1234567890ghijkl","isNew":true,"key":"json-schema@0.2.3","severity":8.5,"severityCode":"High","status":"Remediated","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"},{"exemptionId":"abcdef1234567890ghijkl","id":"abcdef1234567890ghijkl","isNew":true,"key":"json-schema@0.2.3","severity":8.5,"severityCode":"High","status":"Remediated","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"},{"exemptionId":"abcdef1234567890ghijkl","id":"abcdef1234567890ghijkl","isNew":true,"key":"json-schema@0.2.3","severity":8.5,"severityCode":"High","status":"Remediated","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"},{"exemptionId":"abcdef1234567890ghijkl","id":"abcdef1234567890ghijkl","isNew":true,"key":"json-schema@0.2.3","severity":8.5,"severityCode":"High","status":"Remediated","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"}],"scanId":"scan111111111111111111","scanTool":"owasp","target":"branch: feature"}
 */
export type StepInfo = {
  /*
   * A short description of the baseline target for the scan diff
   *
   * @example branch: main
   */
  baseline?: string
  /*
   * Diff-ed Issues related to this scan step, resulting from a diff between the target and baseline
   *
   * @example {"exemptionId":"abcdef1234567890ghijkl","id":"abcdef1234567890ghijkl","isNew":true,"key":"json-schema@0.2.3","severity":8.5,"severityCode":"High","status":"Remediated","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"}
   * @example {"exemptionId":"abcdef1234567890ghijkl","id":"abcdef1234567890ghijkl","isNew":true,"key":"json-schema@0.2.3","severity":8.5,"severityCode":"High","status":"Remediated","title":"json-schema@0.2.3 is vulnerable to Prototype Pollution"}
   */
  issues: IssueSummary[]
  /*
   * Scan id
   *
   * @example scan111111111111111111
   */
  scanId: string
  /*
   * Product name of the scan tool used in this step
   *
   * @example owasp
   */
  scanTool: string
  /*
   * A short description of the target of the scan
   *
   * @example branch: feature
   */
  target?: string
}

/**
 * @example {"baselineVariantId":"abcdef1234567890ghijkl","created":1651578240,"directory":"app/src","id":"abcdef1234567890ghijkl","lastModified":1651578240,"name":"NodeGoat","orgId":"example_org","projectId":"example_project","type":"repository","url":"https://github.com/example/repo"}
 */
export type Target = {
  /*
   * ID of baseline Target Variant for Issue comparison
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^([a-zA-Z0-9_-]{22}|)$
   */
  baselineVariantId?: string
  /*
   * Unix timestamp at which the resource was created
   *
   * @example 1651578240
   * @format int64
   */
  created: number
  /*
   * Directory within the Scan Target to be scanned
   *
   * @example app/src
   * @maxLength 1024
   */
  directory?: string
  /*
   * Resource identifier
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  id: string
  /*
   * Unix timestamp at which the resource was most recently modified
   *
   * @example 1651578240
   * @format int64
   */
  lastModified: number
  /*
   * Name of the Scan Target
   *
   * @example NodeGoat
   * @maxLength 128
   */
  name: string
  /*
   * Harness Organization ID
   *
   * @example example_org
   * @pattern ^[A-Za-z_][A-Za-z0-9_]*$
   * @maxLength 128
   */
  orgId: string
  /*
   * Harness Project ID
   *
   * @example example_project
   * @pattern ^[A-Za-z_][A-Za-z0-9_]*$
   * @maxLength 128
   */
  projectId: string
  /*
   * Scan Target's type
   *
   * @example repository
   */
  type: 'container' | 'repository' | 'instance' | 'configuration'
  /*
   * URL used to access the Scan Target
   *
   * @example https://github.com/example/repo
   * @maxLength 1024
   */
  url?: string
}

/**
 * Information about a Scan Target Variant
 *
 * @example {"created":1651578240,"hash":"d1998db4b4651a4b9be9ecf320a2dfb8b4710e35","id":"abcdef1234567890ghijkl","lastModified":1651578240,"parameters":"{\"branch\":\"main\"}","targetId":"abcdef1234567890ghijkl"}
 */
export type TargetVariant = {
  /*
   * Unix timestamp at which the resource was created
   *
   * @example 1651578240
   * @format int64
   */
  created: number
  /*
   * Git Commit or Container Image hash
   *
   * @example d1998db4b4651a4b9be9ecf320a2dfb8b4710e35
   * @maxLength 64
   */
  hash?: string
  /*
   * Resource identifier
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  id: string
  /*
   * Unix timestamp at which the resource was most recently modified
   *
   * @example 1651578240
   * @format int64
   */
  lastModified: number
  /*
   * Parameters for this Variant, as a JSON-encoded string
   *
   * @example {"branch":"main"}
   */
  parameters: string
  /*
   * Associated Target ID
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  targetId: string
}

/**
 * @example {"pagination":{"link":"","page":4,"pageSize":20,"totalItems":230,"totalPages":12},"results":[{"created":1651578240,"hash":"d1998db4b4651a4b9be9ecf320a2dfb8b4710e35","id":"abcdef1234567890ghijkl","lastModified":1651578240,"parameters":"{\"branch\":\"main\"}","targetId":"abcdef1234567890ghijkl"},{"created":1651578240,"hash":"d1998db4b4651a4b9be9ecf320a2dfb8b4710e35","id":"abcdef1234567890ghijkl","lastModified":1651578240,"parameters":"{\"branch\":\"main\"}","targetId":"abcdef1234567890ghijkl"}]}
 */
export type TargetVariantsListTargetVariantsResponseBody = {
  pagination: Pagination
  /*
   * @example {"created":1651578240,"hash":"d1998db4b4651a4b9be9ecf320a2dfb8b4710e35","id":"abcdef1234567890ghijkl","lastModified":1651578240,"parameters":"{\"branch\":\"main\"}","targetId":"abcdef1234567890ghijkl"}
   * @example {"created":1651578240,"hash":"d1998db4b4651a4b9be9ecf320a2dfb8b4710e35","id":"abcdef1234567890ghijkl","lastModified":1651578240,"parameters":"{\"branch\":\"main\"}","targetId":"abcdef1234567890ghijkl"}
   */
  results: TargetVariant[]
}

/**
 * @example {"pagination":{"link":"","page":4,"pageSize":20,"totalItems":230,"totalPages":12},"results":[{"baselineVariantId":"abcdef1234567890ghijkl","created":1651578240,"directory":"app/src","id":"abcdef1234567890ghijkl","lastModified":1651578240,"name":"NodeGoat","orgId":"example_org","projectId":"example_project","type":"repository","url":"https://github.com/example/repo"},{"baselineVariantId":"abcdef1234567890ghijkl","created":1651578240,"directory":"app/src","id":"abcdef1234567890ghijkl","lastModified":1651578240,"name":"NodeGoat","orgId":"example_org","projectId":"example_project","type":"repository","url":"https://github.com/example/repo"},{"baselineVariantId":"abcdef1234567890ghijkl","created":1651578240,"directory":"app/src","id":"abcdef1234567890ghijkl","lastModified":1651578240,"name":"NodeGoat","orgId":"example_org","projectId":"example_project","type":"repository","url":"https://github.com/example/repo"},{"baselineVariantId":"abcdef1234567890ghijkl","created":1651578240,"directory":"app/src","id":"abcdef1234567890ghijkl","lastModified":1651578240,"name":"NodeGoat","orgId":"example_org","projectId":"example_project","type":"repository","url":"https://github.com/example/repo"}]}
 */
export type TargetsListTargetsResponseBody = {
  pagination: Pagination
  /*
   * @example {"baselineVariantId":"abcdef1234567890ghijkl","created":1651578240,"directory":"app/src","id":"abcdef1234567890ghijkl","lastModified":1651578240,"name":"NodeGoat","orgId":"example_org","projectId":"example_project","type":"repository","url":"https://github.com/example/repo"}
   * @example {"baselineVariantId":"abcdef1234567890ghijkl","created":1651578240,"directory":"app/src","id":"abcdef1234567890ghijkl","lastModified":1651578240,"name":"NodeGoat","orgId":"example_org","projectId":"example_project","type":"repository","url":"https://github.com/example/repo"}
   */
  results: Target[]
}

/**
 * Individual TestTarget
 *
 * @example {"baseline":{"id":"variant111111111111111","name":"Branch: feature-1"},"directory":"/","id":"target1111111111111111","lastScanned":16348365298,"name":"target 1","type":"repository","url":"github.com/harness/sto-core","variants":[{"id":"variant111111111111111","name":"Branch: feature-1"},{"id":"variant111111111111111","name":"Branch: feature-1"},{"id":"variant111111111111111","name":"Branch: feature-1"}]}
 */
export type TestTarget = {
  baseline?: TestTargetVariant
  /*
   * Directory of target
   *
   * @example /
   */
  directory?: string
  /*
   * ID of target
   *
   * @example target1111111111111111
   */
  id: string
  /*
   * Type of target
   *
   * @example 16348365298
   * @format int64
   */
  lastScanned: number
  /*
   * Name of Target
   *
   * @example target 1
   */
  name: string
  /*
   * Type of target
   *
   * @example repository
   */
  type: 'container' | 'repository' | 'instance' | 'configuration'
  /*
   * Url of target
   *
   * @example github.com/harness/sto-core
   */
  url?: string
  /*
   * @example {"id":"variant111111111111111","name":"Branch: feature-1"}
   * @example {"id":"variant111111111111111","name":"Branch: feature-1"}
   */
  variants: TestTargetVariant[]
}

/**
 * Data needed by the Test Targets page
 *
 * @example {"targets":[{"baseline":{"id":"variant111111111111111","name":"Branch: feature-1"},"directory":"/","id":"target1111111111111111","lastScanned":16348365298,"name":"target 1","type":"repository","url":"github.com/harness/sto-core","variants":[{"id":"variant111111111111111","name":"Branch: feature-1"},{"id":"variant111111111111111","name":"Branch: feature-1"},{"id":"variant111111111111111","name":"Branch: feature-1"}]},{"baseline":{"id":"variant111111111111111","name":"Branch: feature-1"},"directory":"/","id":"target1111111111111111","lastScanned":16348365298,"name":"target 1","type":"repository","url":"github.com/harness/sto-core","variants":[{"id":"variant111111111111111","name":"Branch: feature-1"},{"id":"variant111111111111111","name":"Branch: feature-1"},{"id":"variant111111111111111","name":"Branch: feature-1"}]},{"baseline":{"id":"variant111111111111111","name":"Branch: feature-1"},"directory":"/","id":"target1111111111111111","lastScanned":16348365298,"name":"target 1","type":"repository","url":"github.com/harness/sto-core","variants":[{"id":"variant111111111111111","name":"Branch: feature-1"},{"id":"variant111111111111111","name":"Branch: feature-1"},{"id":"variant111111111111111","name":"Branch: feature-1"}]},{"baseline":{"id":"variant111111111111111","name":"Branch: feature-1"},"directory":"/","id":"target1111111111111111","lastScanned":16348365298,"name":"target 1","type":"repository","url":"github.com/harness/sto-core","variants":[{"id":"variant111111111111111","name":"Branch: feature-1"},{"id":"variant111111111111111","name":"Branch: feature-1"},{"id":"variant111111111111111","name":"Branch: feature-1"}]}]}
 */
export type TestTargetResult = {
  /*
   * Test Targets data
   *
   * @example {"baseline":{"id":"variant111111111111111","name":"Branch: feature-1"},"directory":"/","id":"target1111111111111111","lastScanned":16348365298,"name":"target 1","type":"repository","url":"github.com/harness/sto-core","variants":[{"id":"variant111111111111111","name":"Branch: feature-1"},{"id":"variant111111111111111","name":"Branch: feature-1"},{"id":"variant111111111111111","name":"Branch: feature-1"}]}
   * @example {"baseline":{"id":"variant111111111111111","name":"Branch: feature-1"},"directory":"/","id":"target1111111111111111","lastScanned":16348365298,"name":"target 1","type":"repository","url":"github.com/harness/sto-core","variants":[{"id":"variant111111111111111","name":"Branch: feature-1"},{"id":"variant111111111111111","name":"Branch: feature-1"},{"id":"variant111111111111111","name":"Branch: feature-1"}]}
   */
  targets: TestTarget[]
}

/**
 * Individual Test Target Variant
 *
 * @example {"id":"variant111111111111111","name":"Branch: feature-1"}
 */
export type TestTargetVariant = {
  /*
   * Target Variant ID
   *
   * @example variant111111111111111
   */
  id: string
  /*
   * Name of Target Variant
   *
   * @example Branch: feature-1
   */
  name: string
}

/**
 * @example {"token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"}
 */
export type TokenResponse = {
  /*
   * Issued cross-service JWT
   *
   * @example eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
   */
  token: string
}

/**
 * @example {"expiration":1651578240,"link":"https://example.com/ABC-1234","pipelineId":"your_pipeline","reason":"Waiting on upstream bug fix","requesterId":"user111111111111111111","targetId":"abcdef1234567890ghijkl"}
 */
export type UpdateExemptionRequestBody = {
  /*
   * Unix timestamp at which this Exemption will expire
   *
   * @example 1651578240
   * @format int64
   */
  expiration?: number
  /*
   * Link to a related ticket
   *
   * @example https://example.com/ABC-1234
   * @maxLength 1024
   */
  link?: string
  /*
   * ID of the Harness Pipeline to which the exemption applies. You must also specify "projectId" and "orgId". Cannot be specified alongside "targetId".
   *
   * @example your_pipeline
   * @pattern ^[A-Za-z_][A-Za-z0-9_]*$
   * @maxLength 128
   */
  pipelineId?: string
  /*
   * Text describing why this Exemption is necessary
   *
   * @example Waiting on upstream bug fix
   * @maxLength 1024
   */
  reason: string
  /*
   * User ID of user who requested this exemptions
   *
   * @example user111111111111111111
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  requesterId: string
  /*
   * ID of the Target to which the exemption applies. Cannot be specified alongside "projectId" or "pipelineId".
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  targetId?: string
}

/**
 * @example {"executionId":"abcdef1234567890ghijkl","orgId":"your_harness_org","pipelineId":"your_harness_pipeline","productId":"product111111111111111","projectId":"your_harness_project","refinementVersion":"1.0.5","stageId":"stage_id","status":"Succeeded","stepId":"step_id","targetVariantId":"variant111111111111111"}
 */
export type UpdateScanRequestBody = {
  /*
   * Pipeline Execution ID associated with the Scan
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  executionId: string
  /*
   * Harness Organization ID
   *
   * @example your_harness_org
   * @pattern ^[A-Za-z_][A-Za-z0-9_]*$
   * @maxLength 128
   */
  orgId: string
  /*
   * Harness Organization ID
   *
   * @example your_harness_pipeline
   * @pattern ^[A-Za-z_][A-Za-z0-9_]*$
   * @maxLength 128
   */
  pipelineId: string
  /*
   * The Scan Product used for the Scan
   *
   * @example product111111111111111
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  productId: string
  /*
   * Harness Project ID
   *
   * @example your_harness_project
   * @pattern ^[A-Za-z_][A-Za-z0-9_]*$
   * @maxLength 128
   */
  projectId: string
  /*
   * The Issue refinement version used for this Scan
   *
   * @example 1.0.5
   */
  refinementVersion: string
  /*
   * Pipeline Stage ID associated with the Scan
   *
   * @example stage_id
   * @pattern ^[A-Za-z_][A-Za-z0-9_]*$
   * @maxLength 128
   */
  stageId: string
  /*
   * Current status of the Scan
   *
   * @example Succeeded
   */
  status: 'Pending' | 'Running' | 'Succeeded' | 'Failed'
  /*
   * Pipeline Step ID associated with the Scan
   *
   * @example step_id
   * @pattern ^[A-Za-z_][A-Za-z0-9_]*$
   * @maxLength 128
   */
  stepId: string
  /*
   * The Target Variant associated with the Scan
   *
   * @example variant111111111111111
   * @pattern ^[a-zA-Z0-9_-]{22}$
   */
  targetVariantId: string
}

/**
 * @example {"baselineVariantId":"abcdef1234567890ghijkl","directory":"app/src","name":"NodeGoat","type":"repository","url":"https://github.com/example/repo"}
 */
export type UpdateTargetRequestBody = {
  /*
   * ID of baseline Target Variant for Issue comparison
   *
   * @example abcdef1234567890ghijkl
   * @pattern ^([a-zA-Z0-9_-]{22}|)$
   */
  baselineVariantId?: string
  /*
   * Directory within the Scan Target to be scanned
   *
   * @example app/src
   * @maxLength 1024
   */
  directory?: string
  /*
   * Name of the Scan Target
   *
   * @example NodeGoat
   * @maxLength 128
   */
  name: string
  /*
   * Scan Target's type
   *
   * @example repository
   */
  type: 'container' | 'repository' | 'instance' | 'configuration'
  /*
   * URL used to access the Scan Target
   *
   * @example https://github.com/example/repo
   * @maxLength 1024
   */
  url?: string
}

/**
 * @example {"hash":"d1998db4b4651a4b9be9ecf320a2dfb8b4710e35","parameters":"{\"branch\":\"main\"}"}
 */
export type UpdateTargetVariantRequestBody = {
  /*
   * Git Commit or Container Image hash
   *
   * @example d1998db4b4651a4b9be9ecf320a2dfb8b4710e35
   * @maxLength 64
   */
  hash?: string
  /*
   * Parameters for this Variant, as a JSON-encoded string
   *
   * @example {"branch":"main"}
   */
  parameters: string
}

/**
 * Usage
 *
 * @example {"count":0,"displayName":"Last 30 Days","references":["Libero unde fuga in sunt aut aut.","Unde repellat dicta eaque repellendus ut."]}
 */
export type Usage = {
  /*
   * Unit count
   *
   * @example 0
   * @format int64
   */
  count: number
  /*
   * Display name
   *
   * @example Last 30 Days
   */
  displayName: string
  /*
   * References
   *
   * @example Molestiae distinctio odit debitis id odio.
   * @example At est iusto quam.
   * @example Nostrum qui.
   * @example Odio sunt.
   */
  references: string[]
}

export type UsageReportUsageResponseBody = UsageResult

/**
 * Usage Result
 *
 * @example {"accountIdentifier":"BdsgiWzwT7CQFeJl9XkQ3A","activeDevelopers":{"count":0,"displayName":"Last 30 Days","references":["Aliquam quod beatae.","Dolor quibusdam accusantium voluptates eligendi debitis sit.","Impedit ex.","Vero nihil amet aspernatur voluptas impedit exercitationem."]},"activeScans":{"count":0,"displayName":"Last 30 Days","references":["Aliquam quod beatae.","Dolor quibusdam accusantium voluptates eligendi debitis sit.","Impedit ex.","Vero nihil amet aspernatur voluptas impedit exercitationem."]},"module":"STO","timestamp":1670427991307}
 */
export type UsageResult = {
  /*
   * Account identifier
   *
   * @example BdsgiWzwT7CQFeJl9XkQ3A
   */
  accountIdentifier: string
  activeDevelopers: Usage
  activeScans: Usage
  /*
   * Harness module
   *
   * @example STO
   */
  module: string
  /*
   * Timestamp
   *
   * @example 1670427991307
   * @format int64
   */
  timestamp: number
}
