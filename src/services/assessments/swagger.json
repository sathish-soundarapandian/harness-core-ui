{
  "swagger": "2.0",
  "info": {
    "version": "2.0",
    "title": "Assessment Service API Reference"
  },
  "host": "{{localhost}}",
  "basePath": "/assessments/api",
  "tags": [
    {
      "name": "acl"
    },
    {
      "name": "health"
    },
    {
      "name": "permissions"
    },
    {
      "name": "roleassignments"
    },
    {
      "name": "roles"
    },
    {
      "name": "assessment-admin"
    },
    {
      "name": "assessment-evaluation"
    },
    {
      "name": "assessment-result"
    },
    {
      "name": "assessment-upload"
    },
    {
      "name": "benchmark"
    },
    {
      "name": "invitation"
    },
    {
      "name": "settings"
    }
  ],
  "schemes": ["https", "http"],
  "paths": {
    "/acl": {
      "post": {
        "tags": ["acl"],
        "summary": "Check for access to resources",
        "description": "",
        "operationId": "getAccessControlList",
        "consumes": ["application/json", "application/yaml"],
        "produces": ["application/json", "application/yaml"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AccessCheckRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseAccessCheckResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/permissions/resourcetypes": {
      "get": {
        "tags": ["permissions"],
        "summary": "Get All Resource Types for Permissions in a Scope",
        "description": "",
        "operationId": "getPermissionResourceTypesList",
        "consumes": ["application/json", "application/yaml"],
        "produces": ["application/json", "application/yaml"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "scopeFilterDisabled",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseSetString"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/permissions": {
      "get": {
        "tags": ["permissions"],
        "summary": "Get All Permissions in a Scope",
        "description": "",
        "operationId": "getPermissionList",
        "consumes": ["application/json", "application/yaml"],
        "produces": ["application/json", "application/yaml"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "scopeFilterDisabled",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseListPermissionResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/roleassignments/aggregate": {
      "post": {
        "tags": ["roleassignments"],
        "summary": "Get Role Assignments Aggregate",
        "description": "",
        "operationId": "getRoleAssignmentsAggregate",
        "consumes": ["application/json", "application/yaml"],
        "produces": ["application/json", "application/yaml"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/RoleAssignmentFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseRoleAssignmentAggregateResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AccessControlCheckError"
            }
          }
        }
      }
    },
    "/roleassignments/v2/filter": {
      "post": {
        "tags": ["roleassignments"],
        "summary": "Get Filtered Role Assignments By Scopes",
        "description": "",
        "operationId": "getFilteredRoleAssignmentByScopeList",
        "consumes": ["application/json", "application/yaml"],
        "produces": ["application/json", "application/yaml"],
        "parameters": [
          {
            "name": "pageIndex",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 50,
            "maximum": 100,
            "format": "int32"
          },
          {
            "name": "sortOrders",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/RoleAssignmentFilterV2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponsePageRoleAssignmentAggregate"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AccessControlCheckError"
            }
          }
        }
      }
    },
    "/roleassignments/delete/batch": {
      "post": {
        "tags": ["roleassignments"],
        "summary": "Delete Role Assignment",
        "description": "",
        "operationId": "bulkDeleteRoleAssignment",
        "consumes": ["application/json", "application/yaml"],
        "produces": ["application/json", "application/yaml"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseRoleAssignmentDeleteResponseDTO"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AccessControlCheckError"
            }
          }
        }
      }
    },
    "/roleassignments/filter/internal": {
      "post": {
        "tags": ["roleassignments"],
        "summary": "Get Filtered Role Assignments",
        "description": "",
        "operationId": "getFilteredRoleAssignmentsWithInternalRoles",
        "consumes": ["application/json", "application/yaml"],
        "produces": ["application/json", "application/yaml"],
        "parameters": [
          {
            "name": "pageIndex",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 50,
            "maximum": 100,
            "format": "int32"
          },
          {
            "name": "sortOrders",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/RoleAssignmentFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponsePageRoleAssignmentResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AccessControlCheckError"
            }
          }
        }
      }
    },
    "/roleassignments/{identifier}": {
      "get": {
        "tags": ["roleassignments"],
        "summary": "Get Role Assignment",
        "description": "",
        "operationId": "getRoleAssignment",
        "consumes": ["application/json", "application/yaml"],
        "produces": ["application/json", "application/yaml"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseRoleAssignmentResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AccessControlCheckError"
            }
          }
        }
      },
      "put": {
        "tags": ["roleassignments"],
        "summary": "Update Role Assignment",
        "description": "",
        "operationId": "putRoleAssignment",
        "consumes": ["application/json", "application/yaml"],
        "produces": ["application/json", "application/yaml"],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/RoleAssignment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseRoleAssignmentResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AccessControlCheckError"
            }
          }
        }
      },
      "delete": {
        "tags": ["roleassignments"],
        "summary": "Delete Role Assignment",
        "description": "",
        "operationId": "deleteRoleAssignment",
        "consumes": ["application/json", "application/yaml"],
        "produces": ["application/json", "application/yaml"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseRoleAssignmentResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AccessControlCheckError"
            }
          }
        }
      }
    },
    "/roleassignments": {
      "get": {
        "tags": ["roleassignments"],
        "summary": "Get Role Assignments",
        "description": "",
        "operationId": "getRoleAssignmentList",
        "consumes": ["application/json", "application/yaml"],
        "produces": ["application/json", "application/yaml"],
        "parameters": [
          {
            "name": "pageIndex",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 50,
            "maximum": 100,
            "format": "int32"
          },
          {
            "name": "sortOrders",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponsePageRoleAssignmentResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AccessControlCheckError"
            }
          }
        }
      },
      "post": {
        "tags": ["roleassignments"],
        "summary": "Create Role Assignment",
        "description": "",
        "operationId": "postRoleAssignment",
        "consumes": ["application/json", "application/yaml"],
        "produces": ["application/json", "application/yaml"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/RoleAssignment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseRoleAssignmentResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AccessControlCheckError"
            }
          }
        }
      }
    },
    "/roleassignments/filter": {
      "post": {
        "tags": ["roleassignments"],
        "summary": "Get Filtered Role Assignments",
        "description": "",
        "operationId": "getFilteredRoleAssignmentList",
        "consumes": ["application/json", "application/yaml"],
        "produces": ["application/json", "application/yaml"],
        "parameters": [
          {
            "name": "pageIndex",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 50,
            "maximum": 100,
            "format": "int32"
          },
          {
            "name": "sortOrders",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/RoleAssignmentFilter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponsePageRoleAssignmentResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AccessControlCheckError"
            }
          }
        }
      }
    },
    "/roleassignments/validate": {
      "post": {
        "tags": ["roleassignments"],
        "summary": "Validate Role Assignment",
        "description": "",
        "operationId": "validateRoleAssignment",
        "consumes": ["application/json", "application/yaml"],
        "produces": ["application/json", "application/yaml"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/RoleAssignmentValidationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseRoleAssignmentValidationResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AccessControlCheckError"
            }
          }
        }
      }
    },
    "/roleassignments/multi": {
      "post": {
        "tags": ["roleassignments"],
        "summary": "Create Multiple Role Assignments",
        "description": "",
        "operationId": "postRoleAssignments",
        "consumes": ["application/json", "application/yaml"],
        "produces": ["application/json", "application/yaml"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/RoleAssignmentCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseListRoleAssignmentResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AccessControlCheckError"
            }
          }
        }
      }
    },
    "/roles": {
      "get": {
        "tags": ["roles"],
        "summary": "Get Roles",
        "description": "",
        "operationId": "getRoleList",
        "consumes": ["application/json", "application/yaml"],
        "produces": ["application/json", "application/yaml"],
        "parameters": [
          {
            "name": "pageIndex",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 50,
            "maximum": 100,
            "format": "int32"
          },
          {
            "name": "sortOrders",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchTerm",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponsePageRoleResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AccessControlCheckError"
            }
          }
        }
      },
      "post": {
        "tags": ["roles"],
        "summary": "Create Role",
        "description": "",
        "operationId": "postRole",
        "consumes": ["application/json", "application/yaml"],
        "produces": ["application/json", "application/yaml"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseRoleResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AccessControlCheckError"
            }
          }
        }
      }
    },
    "/roles/{identifier}": {
      "get": {
        "tags": ["roles"],
        "summary": "Get Role",
        "description": "",
        "operationId": "getRole",
        "consumes": ["application/json", "application/yaml"],
        "produces": ["application/json", "application/yaml"],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseRoleResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AccessControlCheckError"
            }
          }
        }
      },
      "put": {
        "tags": ["roles"],
        "summary": "Update Role",
        "description": "",
        "operationId": "putRole",
        "consumes": ["application/json", "application/yaml"],
        "produces": ["application/json", "application/yaml"],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseRoleResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AccessControlCheckError"
            }
          }
        }
      },
      "delete": {
        "tags": ["roles"],
        "summary": "Delete Role",
        "description": "",
        "operationId": "deleteRole",
        "consumes": ["application/json", "application/yaml"],
        "produces": ["application/json", "application/yaml"],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseRoleResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/AccessControlCheckError"
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": ["health"],
        "summary": "get health for Assessment service",
        "description": "",
        "operationId": "getAssessmentHealthStatus",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/v1/assessment/summary": {
      "get": {
        "tags": ["assessment-admin"],
        "summary": "Get assessment summary",
        "description": "",
        "operationId": "getAssessmentSummary",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AssessmentSummaryResponse"
              }
            }
          }
        }
      }
    },
    "/v1/assessment/{assessmentId}/template": {
      "get": {
        "tags": ["assessment-admin"],
        "summary": "Get an assessment in the system.",
        "description": "",
        "operationId": "getAssessment",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "assessmentId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AssessmentUploadResponse"
            }
          }
        }
      }
    },
    "/v1/assessment/{assessmentId}/template/yaml": {
      "get": {
        "tags": ["assessment-admin"],
        "summary": "Get an assessment in the system.",
        "description": "",
        "operationId": "getAssessmentYAML",
        "produces": ["application/octet-stream"],
        "parameters": [
          {
            "name": "assessmentId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AssessmentUploadRequest"
            }
          }
        }
      }
    },
    "/v1/attempt/{assessmentId}": {
      "post": {
        "tags": ["assessment-evaluation"],
        "summary": "Submit response for an assessment, and view the results",
        "description": "",
        "operationId": "getAssessmentForUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "assessmentId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UserResponsesRequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AssessmentResultsResponse"
            }
          }
        }
      }
    },
    "/v1/attempt/save": {
      "post": {
        "tags": ["assessment-evaluation"],
        "summary": "Save response for an assessment, and continue it for later.",
        "description": "",
        "operationId": "saveAssessmentResponse",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UserResponsesRequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserAssessmentDTO"
            }
          }
        }
      }
    },
    "/v1/attempt/{assessmentInviteId}": {
      "get": {
        "tags": ["assessment-evaluation"],
        "summary": "View assessment for a particular invite code",
        "description": "",
        "operationId": "getAssessmentForUser",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "assessmentInviteId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserAssessmentDTO"
            }
          }
        }
      }
    },
    "/v1/results/{resultCode}": {
      "get": {
        "tags": ["assessment-result"],
        "summary": "View results of an assessment previously attempted.",
        "description": "",
        "operationId": "getAssessmentResults",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "resultCode",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "benchmarkId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AssessmentResultsResponse"
            }
          }
        }
      }
    },
    "/v1/assessment": {
      "post": {
        "tags": ["assessment-upload"],
        "summary": "Upload an assessment to the system.",
        "description": "",
        "operationId": "uploadAssessment",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AssessmentUploadRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AssessmentUploadResponse"
            }
          }
        }
      }
    },
    "/v1/assessment/{assessmentId}/publish": {
      "patch": {
        "tags": ["assessment-upload"],
        "summary": "Publish an assessment.",
        "description": "",
        "operationId": "publishAssessment",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "assessmentId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AssessmentUploadResponse"
            }
          }
        }
      }
    },
    "/v1/assessment/yaml": {
      "post": {
        "tags": ["assessment-upload"],
        "summary": "Upload an assessment to the system.",
        "description": "",
        "operationId": "uploadAssessmentYAML",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AssessmentUploadResponse"
            }
          }
        }
      }
    },
    "/v1/benchmark/{assessmentId}/{majorVersion}": {
      "get": {
        "tags": ["benchmark"],
        "summary": "Get list of benchmarks against an assessment in the system.",
        "description": "",
        "operationId": "getBenchmarks",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "assessmentId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "majorVersion",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BenchmarkDTO"
              }
            }
          }
        }
      }
    },
    "/v1/benchmark": {
      "post": {
        "tags": ["benchmark"],
        "summary": "Upload an benchmark against a assessment to the system.",
        "description": "",
        "operationId": "uploadBenchmark",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BenchmarksUploadRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BenchmarkUploadResponse"
            }
          }
        }
      }
    },
    "/v1/benchmark/{assessmentId}/{majorVersion}/yaml": {
      "get": {
        "tags": ["benchmark"],
        "summary": "Get list of benchmarks against an assessment in the system YAML.",
        "description": "",
        "operationId": "getBenchmarksYAML",
        "produces": ["application/octet-stream"],
        "parameters": [
          {
            "name": "assessmentId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "majorVersion",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BenchmarksUploadRequest"
              }
            }
          }
        }
      }
    },
    "/v1/benchmark/yaml": {
      "post": {
        "tags": ["benchmark"],
        "summary": "Upload an benchmark to the system YAML.",
        "description": "",
        "operationId": "uploadBenchmarkYAML",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BenchmarkUploadResponse"
            }
          }
        }
      }
    },
    "/v1/assessment/invite": {
      "post": {
        "tags": ["invitation"],
        "summary": "Creates invites in the system with unique sign-up code, which is sent to the respective emails",
        "description": "",
        "operationId": "sendAssessmentInvite",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AssessmentInviteDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AssessmentInviteDTO"
            }
          }
        }
      }
    },
    "/settings/{identifier}": {
      "get": {
        "tags": ["settings"],
        "summary": "Resolves and gets a setting value by Identifier",
        "description": "",
        "operationId": "getSettingValue",
        "consumes": ["application/json", "application/yaml"],
        "produces": ["application/json", "application/yaml"],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseSettingValueResponseDTO"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/settings": {
      "get": {
        "tags": ["settings"],
        "summary": "Get list of settings",
        "description": "",
        "operationId": "getSettingsList",
        "consumes": ["application/json", "application/yaml"],
        "produces": ["application/json", "application/yaml"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "category",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "CD",
              "CI",
              "CE",
              "CV",
              "CF",
              "STO",
              "CORE",
              "PMS",
              "TEMPLATESERVICE",
              "GOVERNANCE",
              "CHAOS",
              "SCIM",
              "GIT_EXPERIENCE",
              "CONNECTORS"
            ]
          },
          {
            "name": "group",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseListSettingResponseDTO"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "tags": ["settings"],
        "summary": "Updates the settings",
        "description": "",
        "operationId": "updateSettingValue",
        "consumes": ["application/json", "application/yaml"],
        "produces": ["application/json", "application/yaml"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SettingRequestDTO"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseListSettingUpdateResponseDTO"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AccessCheckResponse": {
      "type": "object",
      "properties": {
        "principal": {
          "$ref": "#/definitions/Principal"
        },
        "accessControlList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessControl"
          }
        }
      }
    },
    "AccessControl": {
      "type": "object",
      "properties": {
        "permission": {
          "type": "string"
        },
        "resourceScope": {
          "$ref": "#/definitions/ResourceScope"
        },
        "resourceType": {
          "type": "string"
        },
        "resourceAttributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "resourceIdentifier": {
          "type": "string"
        },
        "permitted": {
          "type": "boolean"
        }
      }
    },
    "Principal": {
      "type": "object",
      "required": ["identifier", "type"],
      "properties": {
        "scopeLevel": {
          "type": "string"
        },
        "identifier": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": ["USER", "USER_GROUP", "SERVICE", "API_KEY", "SERVICE_ACCOUNT"]
        }
      }
    },
    "ResourceScope": {
      "type": "object",
      "properties": {
        "accountIdentifier": {
          "type": "string"
        },
        "orgIdentifier": {
          "type": "string"
        },
        "projectIdentifier": {
          "type": "string"
        }
      }
    },
    "Response": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "type": "object"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "ResponseAccessCheckResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/AccessCheckResponse"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "Failure": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "code": {
          "type": "string",
          "enum": [
            "DEFAULT_ERROR_CODE",
            "INVALID_ARGUMENT",
            "INVALID_EMAIL",
            "DOMAIN_NOT_ALLOWED_TO_REGISTER",
            "COMMNITY_EDITION_NOT_FOUND",
            "DEPLOY_MODE_IS_NOT_ON_PREM",
            "USER_ALREADY_REGISTERED",
            "USER_INVITATION_DOES_NOT_EXIST",
            "USER_DOES_NOT_EXIST",
            "USER_INVITE_OPERATION_FAILED",
            "USER_DISABLED",
            "ACCOUNT_DOES_NOT_EXIST",
            "INACTIVE_ACCOUNT",
            "ACCOUNT_MIGRATED",
            "USER_DOMAIN_NOT_ALLOWED",
            "MAX_FAILED_ATTEMPT_COUNT_EXCEEDED",
            "RESOURCE_NOT_FOUND",
            "INVALID_FORMAT",
            "ROLE_DOES_NOT_EXIST",
            "EMAIL_NOT_VERIFIED",
            "EMAIL_VERIFICATION_TOKEN_NOT_FOUND",
            "INVALID_TOKEN",
            "REVOKED_TOKEN",
            "INVALID_CAPTCHA_TOKEN",
            "NOT_ACCOUNT_MGR_NOR_HAS_ALL_APP_ACCESS",
            "EXPIRED_TOKEN",
            "INVALID_AGENT_MTLS_AUTHORITY",
            "TOKEN_ALREADY_REFRESHED_ONCE",
            "ACCESS_DENIED",
            "NG_ACCESS_DENIED",
            "INVALID_CREDENTIAL",
            "INVALID_CREDENTIALS_THIRD_PARTY",
            "INVALID_KEY",
            "INVALID_CONNECTOR_TYPE",
            "INVALID_KEYPATH",
            "INVALID_VARIABLE",
            "UNKNOWN_HOST",
            "UNREACHABLE_HOST",
            "INVALID_PORT",
            "SSH_SESSION_TIMEOUT",
            "SOCKET_CONNECTION_ERROR",
            "CONNECTION_ERROR",
            "SOCKET_CONNECTION_TIMEOUT",
            "WINRM_COMMAND_EXECUTION_TIMEOUT",
            "CONNECTION_TIMEOUT",
            "SSH_CONNECTION_ERROR",
            "USER_GROUP_ERROR",
            "INVALID_EXECUTION_ID",
            "ERROR_IN_GETTING_CHANNEL_STREAMS",
            "UNEXPECTED",
            "UNKNOWN_ERROR",
            "UNKNOWN_EXECUTOR_TYPE_ERROR",
            "DUPLICATE_STATE_NAMES",
            "TRANSITION_NOT_LINKED",
            "TRANSITION_TO_INCORRECT_STATE",
            "TRANSITION_TYPE_NULL",
            "STATES_WITH_DUP_TRANSITIONS",
            "BARRIERS_NOT_RUNNING_CONCURRENTLY",
            "NON_FORK_STATES",
            "NON_REPEAT_STATES",
            "INITIAL_STATE_NOT_DEFINED",
            "FILE_INTEGRITY_CHECK_FAILED",
            "INVALID_URL",
            "FILE_DOWNLOAD_FAILED",
            "PLATFORM_SOFTWARE_DELETE_ERROR",
            "INVALID_CSV_FILE",
            "INVALID_REQUEST",
            "SCHEMA_VALIDATION_FAILED",
            "FILTER_CREATION_ERROR",
            "INVALID_YAML_ERROR",
            "PLAN_CREATION_ERROR",
            "INVALID_INFRA_STATE",
            "PIPELINE_ALREADY_TRIGGERED",
            "NON_EXISTING_PIPELINE",
            "DUPLICATE_COMMAND_NAMES",
            "INVALID_PIPELINE",
            "COMMAND_DOES_NOT_EXIST",
            "DUPLICATE_ARTIFACTSTREAM_NAMES",
            "DUPLICATE_HOST_NAMES",
            "STATE_NOT_FOR_TYPE",
            "STATE_MACHINE_ISSUE",
            "STATE_DISCONTINUE_FAILED",
            "STATE_PAUSE_FAILED",
            "PAUSE_ALL_ALREADY",
            "RESUME_ALL_ALREADY",
            "ROLLBACK_ALREADY",
            "ABORT_ALL_ALREADY",
            "EXPIRE_ALL_ALREADY",
            "RETRY_FAILED",
            "UNKNOWN_ARTIFACT_TYPE",
            "UNKNOWN_STAGE_ELEMENT_WRAPPER_TYPE",
            "INIT_TIMEOUT",
            "LICENSE_EXPIRED",
            "NOT_LICENSED",
            "REQUEST_TIMEOUT",
            "WORKFLOW_ALREADY_TRIGGERED",
            "JENKINS_ERROR",
            "INVALID_ARTIFACT_SOURCE",
            "INVALID_ARTIFACT_SERVER",
            "INVALID_CLOUD_PROVIDER",
            "UPDATE_NOT_ALLOWED",
            "DELETE_NOT_ALLOWED",
            "APPDYNAMICS_CONFIGURATION_ERROR",
            "APM_CONFIGURATION_ERROR",
            "SPLUNK_CONFIGURATION_ERROR",
            "ELK_CONFIGURATION_ERROR",
            "LOGZ_CONFIGURATION_ERROR",
            "SUMO_CONFIGURATION_ERROR",
            "INSTANA_CONFIGURATION_ERROR",
            "APPDYNAMICS_ERROR",
            "STACKDRIVER_ERROR",
            "STACKDRIVER_CONFIGURATION_ERROR",
            "NEWRELIC_CONFIGURATION_ERROR",
            "NEWRELIC_ERROR",
            "DYNA_TRACE_CONFIGURATION_ERROR",
            "DYNA_TRACE_ERROR",
            "CLOUDWATCH_ERROR",
            "CLOUDWATCH_CONFIGURATION_ERROR",
            "PROMETHEUS_CONFIGURATION_ERROR",
            "DATA_DOG_CONFIGURATION_ERROR",
            "SERVICE_GUARD_CONFIGURATION_ERROR",
            "ENCRYPTION_NOT_CONFIGURED",
            "UNAVAILABLE_DELEGATES",
            "WORKFLOW_EXECUTION_IN_PROGRESS",
            "PIPELINE_EXECUTION_IN_PROGRESS",
            "AWS_ACCESS_DENIED",
            "AWS_CLUSTER_NOT_FOUND",
            "AWS_SERVICE_NOT_FOUND",
            "IMAGE_NOT_FOUND",
            "ILLEGAL_ARGUMENT",
            "IMAGE_TAG_NOT_FOUND",
            "DELEGATE_NOT_AVAILABLE",
            "INVALID_YAML_PAYLOAD",
            "AUTHENTICATION_ERROR",
            "AUTHORIZATION_ERROR",
            "UNRECOGNIZED_YAML_FIELDS",
            "COULD_NOT_MAP_BEFORE_YAML",
            "MISSING_BEFORE_YAML",
            "MISSING_YAML",
            "NON_EMPTY_DELETIONS",
            "GENERAL_YAML_ERROR",
            "GENERAL_YAML_INFO",
            "YAML_GIT_SYNC_ERROR",
            "GIT_CONNECTION_ERROR",
            "GIT_ERROR",
            "ARTIFACT_SERVER_ERROR",
            "ENCRYPT_DECRYPT_ERROR",
            "SECRET_MANAGEMENT_ERROR",
            "SECRET_NOT_FOUND",
            "KMS_OPERATION_ERROR",
            "GCP_KMS_OPERATION_ERROR",
            "VAULT_OPERATION_ERROR",
            "AWS_SECRETS_MANAGER_OPERATION_ERROR",
            "AZURE_KEY_VAULT_OPERATION_ERROR",
            "UNSUPPORTED_OPERATION_EXCEPTION",
            "FEATURE_UNAVAILABLE",
            "GENERAL_ERROR",
            "BASELINE_CONFIGURATION_ERROR",
            "SAML_IDP_CONFIGURATION_NOT_AVAILABLE",
            "INVALID_AUTHENTICATION_MECHANISM",
            "INVALID_SAML_CONFIGURATION",
            "INVALID_OAUTH_CONFIGURATION",
            "INVALID_LDAP_CONFIGURATION",
            "USER_GROUP_SYNC_FAILURE",
            "USER_GROUP_ALREADY_EXIST",
            "INVALID_TWO_FACTOR_AUTHENTICATION_CONFIGURATION",
            "EXPLANATION",
            "HINT",
            "NOT_WHITELISTED_IP",
            "INVALID_TOTP_TOKEN",
            "EMAIL_FAILED",
            "SSL_HANDSHAKE_FAILED",
            "NO_APPS_ASSIGNED",
            "INVALID_INFRA_CONFIGURATION",
            "TEMPLATES_LINKED",
            "USER_HAS_NO_PERMISSIONS",
            "USER_NOT_AUTHORIZED",
            "USER_ALREADY_PRESENT",
            "EMAIL_ERROR",
            "INVALID_USAGE_RESTRICTION",
            "USAGE_RESTRICTION_ERROR",
            "STATE_EXECUTION_INSTANCE_NOT_FOUND",
            "DELEGATE_TASK_RETRY",
            "KUBERNETES_API_TASK_EXCEPTION",
            "KUBERNETES_TASK_EXCEPTION",
            "KUBERNETES_YAML_ERROR",
            "SAVE_FILE_INTO_GCP_STORAGE_FAILED",
            "READ_FILE_FROM_GCP_STORAGE_FAILED",
            "FILE_NOT_FOUND_ERROR",
            "USAGE_LIMITS_EXCEEDED",
            "EVENT_PUBLISH_FAILED",
            "CUSTOM_APPROVAL_ERROR",
            "JIRA_ERROR",
            "EXPRESSION_EVALUATION_FAILED",
            "KUBERNETES_VALUES_ERROR",
            "KUBERNETES_CLUSTER_ERROR",
            "INCORRECT_SIGN_IN_MECHANISM",
            "OAUTH_LOGIN_FAILED",
            "INVALID_TERRAFORM_TARGETS_REQUEST",
            "TERRAFORM_EXECUTION_ERROR",
            "FILE_READ_FAILED",
            "FILE_SIZE_EXCEEDS_LIMIT",
            "CLUSTER_NOT_FOUND",
            "MARKETPLACE_TOKEN_NOT_FOUND",
            "INVALID_MARKETPLACE_TOKEN",
            "INVALID_TICKETING_SERVER",
            "SERVICENOW_ERROR",
            "PASSWORD_EXPIRED",
            "USER_LOCKED",
            "PASSWORD_STRENGTH_CHECK_FAILED",
            "ACCOUNT_DISABLED",
            "INVALID_ACCOUNT_PERMISSION",
            "PAGERDUTY_ERROR",
            "HEALTH_ERROR",
            "SAML_TEST_SUCCESS_MECHANISM_NOT_ENABLED",
            "DOMAIN_WHITELIST_FILTER_CHECK_FAILED",
            "INVALID_DASHBOARD_UPDATE_REQUEST",
            "DUPLICATE_FIELD",
            "INVALID_AZURE_VAULT_CONFIGURATION",
            "USER_NOT_AUTHORIZED_DUE_TO_USAGE_RESTRICTIONS",
            "INVALID_ROLLBACK",
            "DATA_COLLECTION_ERROR",
            "SUMO_DATA_COLLECTION_ERROR",
            "DEPLOYMENT_GOVERNANCE_ERROR",
            "BATCH_PROCESSING_ERROR",
            "GRAPHQL_ERROR",
            "FILE_CREATE_ERROR",
            "ILLEGAL_STATE",
            "GIT_DIFF_COMMIT_NOT_IN_ORDER",
            "FAILED_TO_ACQUIRE_PERSISTENT_LOCK",
            "FAILED_TO_ACQUIRE_NON_PERSISTENT_LOCK",
            "POD_NOT_FOUND_ERROR",
            "COMMAND_EXECUTION_ERROR",
            "REGISTRY_EXCEPTION",
            "ENGINE_INTERRUPT_PROCESSING_EXCEPTION",
            "ENGINE_IO_EXCEPTION",
            "ENGINE_OUTCOME_EXCEPTION",
            "ENGINE_SWEEPING_OUTPUT_EXCEPTION",
            "CACHE_NOT_FOUND_EXCEPTION",
            "ENGINE_ENTITY_UPDATE_EXCEPTION",
            "SHELL_EXECUTION_EXCEPTION",
            "TEMPLATE_NOT_FOUND",
            "AZURE_SERVICE_EXCEPTION",
            "AZURE_CLIENT_EXCEPTION",
            "GIT_UNSEEN_REMOTE_HEAD_COMMIT",
            "TIMEOUT_ENGINE_EXCEPTION",
            "NO_AVAILABLE_DELEGATES",
            "NO_GLOBAL_DELEGATE_ACCOUNT",
            "NO_INSTALLED_DELEGATES",
            "DUPLICATE_DELEGATE_EXCEPTION",
            "GCP_MARKETPLACE_EXCEPTION",
            "MISSING_DEFAULT_GOOGLE_CREDENTIALS",
            "INCORRECT_DEFAULT_GOOGLE_CREDENTIALS",
            "OPTIMISTIC_LOCKING_EXCEPTION",
            "NG_PIPELINE_EXECUTION_EXCEPTION",
            "NG_PIPELINE_CREATE_EXCEPTION",
            "RESOURCE_NOT_FOUND_EXCEPTION",
            "PMS_INITIALIZE_SDK_EXCEPTION",
            "UNEXPECTED_SNIPPET_EXCEPTION",
            "UNEXPECTED_SCHEMA_EXCEPTION",
            "CONNECTOR_VALIDATION_EXCEPTION",
            "TIMESCALE_NOT_AVAILABLE",
            "MIGRATION_EXCEPTION",
            "REQUEST_PROCESSING_INTERRUPTED",
            "SECRET_MANAGER_ID_NOT_FOUND",
            "GCP_SECRET_MANAGER_OPERATION_ERROR",
            "GCP_SECRET_OPERATION_ERROR",
            "GIT_OPERATION_ERROR",
            "TASK_FAILURE_ERROR",
            "INSTANCE_STATS_PROCESS_ERROR",
            "INSTANCE_STATS_MIGRATION_ERROR",
            "DEPLOYMENT_MIGRATION_ERROR",
            "CG_LICENSE_USAGE_ERROR",
            "INSTANCE_STATS_AGGREGATION_ERROR",
            "UNRESOLVED_EXPRESSIONS_ERROR",
            "KRYO_HANDLER_NOT_FOUND_ERROR",
            "DELEGATE_ERROR_HANDLER_EXCEPTION",
            "DELEGATE_INSTALLATION_COMMAND_NOT_SUPPORTED_EXCEPTION",
            "UNEXPECTED_TYPE_ERROR",
            "EXCEPTION_HANDLER_NOT_FOUND",
            "CONNECTOR_NOT_FOUND_EXCEPTION",
            "GCP_SERVER_ERROR",
            "HTTP_RESPONSE_EXCEPTION",
            "SCM_NOT_FOUND_ERROR",
            "SCM_CONFLICT_ERROR",
            "SCM_CONFLICT_ERROR_V2",
            "SCM_UNPROCESSABLE_ENTITY",
            "PROCESS_EXECUTION_EXCEPTION",
            "SCM_UNAUTHORIZED",
            "SCM_BAD_REQUEST",
            "SCM_INTERNAL_SERVER_ERROR",
            "DATA",
            "CONTEXT",
            "PR_CREATION_ERROR",
            "URL_NOT_REACHABLE",
            "URL_NOT_PROVIDED",
            "ENGINE_EXPRESSION_EVALUATION_ERROR",
            "ENGINE_FUNCTOR_ERROR",
            "JIRA_CLIENT_ERROR",
            "SCM_NOT_MODIFIED",
            "APPROVAL_STEP_NG_ERROR",
            "BUCKET_SERVER_ERROR",
            "GIT_SYNC_ERROR",
            "TEMPLATE_EXCEPTION",
            "TEMPLATE_ALREADY_EXISTS_EXCEPTION",
            "ENTITY_REFERENCE_EXCEPTION",
            "ACTIVE_SERVICE_INSTANCES_PRESENT_EXCEPTION",
            "INVALID_INPUT_SET",
            "INVALID_OVERLAY_INPUT_SET",
            "RESOURCE_ALREADY_EXISTS",
            "INVALID_JSON_PAYLOAD",
            "POLICY_EVALUATION_FAILURE",
            "POLICY_SET_ERROR",
            "INVALID_ARTIFACTORY_REGISTRY_REQUEST",
            "INVALID_NEXUS_REGISTRY_REQUEST",
            "ENTITY_NOT_FOUND",
            "INVALID_AZURE_CONTAINER_REGISTRY_REQUEST",
            "AZURE_AUTHENTICATION_ERROR",
            "AZURE_CONFIG_ERROR",
            "DATA_PROCESSING_ERROR",
            "INVALID_AZURE_AKS_REQUEST",
            "AWS_IAM_ERROR",
            "AWS_CF_ERROR",
            "AWS_INSTANCE_ERROR",
            "AWS_VPC_ERROR",
            "AWS_TAG_ERROR",
            "AWS_ASG_ERROR",
            "AWS_LOAD_BALANCER_ERROR",
            "SCM_INTERNAL_SERVER_ERROR_V2",
            "SCM_UNAUTHORIZED_ERROR_V2",
            "TOO_MANY_REQUESTS",
            "INVALID_IDENTIFIER_REF",
            "SPOTINST_NULL_ERROR",
            "SCM_UNEXPECTED_ERROR",
            "DUPLICATE_FILE_IMPORT",
            "AZURE_APP_SERVICES_TASK_EXCEPTION",
            "AZURE_ARM_TASK_EXCEPTION",
            "AZURE_BP_TASK_EXCEPTION",
            "MEDIA_NOT_SUPPORTED",
            "AWS_ECS_ERROR",
            "AWS_APPLICATION_AUTO_SCALING",
            "AWS_ECS_SERVICE_NOT_ACTIVE",
            "AWS_ECS_CLIENT_ERROR",
            "AWS_STS_ERROR",
            "FREEZE_EXCEPTION",
            "DELEGATE_TASK_EXPIRED",
            "DELEGATE_TASK_VALIDATION_FAILED",
            "MONGO_EXECUTION_TIMEOUT_EXCEPTION",
            "DELEGATE_NOT_REGISTERED",
            "TERRAFORM_VAULT_SECRET_CLEANUP_FAILURE",
            "APPROVAL_REJECTION",
            "TERRAGRUNT_EXECUTION_ERROR",
            "ADFS_ERROR",
            "TERRAFORM_CLOUD_ERROR",
            "CLUSTER_CREDENTIALS_NOT_FOUND",
            "SCM_API_ERROR",
            "INTERNAL_SERVER_ERROR",
            "SCM_FORBIDDEN",
            "AWS_EKS_ERROR",
            "OPA_POLICY_EVALUATION_ERROR",
            "USER_MARKED_FAILURE",
            "SSH_RETRY"
          ]
        },
        "message": {
          "type": "string"
        },
        "correlationId": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationError"
          }
        }
      }
    },
    "ValidationError": {
      "type": "object",
      "properties": {
        "fieldId": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "CacheResponseMetadata": {
      "type": "object",
      "required": ["cacheState", "lastUpdatedAt", "ttlLeft"],
      "properties": {
        "cacheState": {
          "type": "string",
          "enum": ["VALID_CACHE", "STALE_CACHE", "UNKNOWN"]
        },
        "ttlLeft": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "EntityGitDetails": {
      "type": "object",
      "properties": {
        "objectId": {
          "type": "string"
        },
        "branch": {
          "type": "string"
        },
        "repoIdentifier": {
          "type": "string"
        },
        "rootFolder": {
          "type": "string"
        },
        "filePath": {
          "type": "string"
        },
        "repoName": {
          "type": "string"
        },
        "commitId": {
          "type": "string"
        },
        "fileUrl": {
          "type": "string"
        },
        "repoUrl": {
          "type": "string"
        },
        "parentEntityConnectorRef": {
          "type": "string"
        },
        "parentEntityRepoName": {
          "type": "string"
        }
      }
    },
    "EntityValidityDetails": {
      "type": "object",
      "properties": {
        "valid": {
          "type": "boolean"
        },
        "invalidYaml": {
          "type": "string"
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "code": {
          "type": "string",
          "enum": [
            "DEFAULT_ERROR_CODE",
            "INVALID_ARGUMENT",
            "INVALID_EMAIL",
            "DOMAIN_NOT_ALLOWED_TO_REGISTER",
            "COMMNITY_EDITION_NOT_FOUND",
            "DEPLOY_MODE_IS_NOT_ON_PREM",
            "USER_ALREADY_REGISTERED",
            "USER_INVITATION_DOES_NOT_EXIST",
            "USER_DOES_NOT_EXIST",
            "USER_INVITE_OPERATION_FAILED",
            "USER_DISABLED",
            "ACCOUNT_DOES_NOT_EXIST",
            "INACTIVE_ACCOUNT",
            "ACCOUNT_MIGRATED",
            "USER_DOMAIN_NOT_ALLOWED",
            "MAX_FAILED_ATTEMPT_COUNT_EXCEEDED",
            "RESOURCE_NOT_FOUND",
            "INVALID_FORMAT",
            "ROLE_DOES_NOT_EXIST",
            "EMAIL_NOT_VERIFIED",
            "EMAIL_VERIFICATION_TOKEN_NOT_FOUND",
            "INVALID_TOKEN",
            "REVOKED_TOKEN",
            "INVALID_CAPTCHA_TOKEN",
            "NOT_ACCOUNT_MGR_NOR_HAS_ALL_APP_ACCESS",
            "EXPIRED_TOKEN",
            "INVALID_AGENT_MTLS_AUTHORITY",
            "TOKEN_ALREADY_REFRESHED_ONCE",
            "ACCESS_DENIED",
            "NG_ACCESS_DENIED",
            "INVALID_CREDENTIAL",
            "INVALID_CREDENTIALS_THIRD_PARTY",
            "INVALID_KEY",
            "INVALID_CONNECTOR_TYPE",
            "INVALID_KEYPATH",
            "INVALID_VARIABLE",
            "UNKNOWN_HOST",
            "UNREACHABLE_HOST",
            "INVALID_PORT",
            "SSH_SESSION_TIMEOUT",
            "SOCKET_CONNECTION_ERROR",
            "CONNECTION_ERROR",
            "SOCKET_CONNECTION_TIMEOUT",
            "WINRM_COMMAND_EXECUTION_TIMEOUT",
            "CONNECTION_TIMEOUT",
            "SSH_CONNECTION_ERROR",
            "USER_GROUP_ERROR",
            "INVALID_EXECUTION_ID",
            "ERROR_IN_GETTING_CHANNEL_STREAMS",
            "UNEXPECTED",
            "UNKNOWN_ERROR",
            "UNKNOWN_EXECUTOR_TYPE_ERROR",
            "DUPLICATE_STATE_NAMES",
            "TRANSITION_NOT_LINKED",
            "TRANSITION_TO_INCORRECT_STATE",
            "TRANSITION_TYPE_NULL",
            "STATES_WITH_DUP_TRANSITIONS",
            "BARRIERS_NOT_RUNNING_CONCURRENTLY",
            "NON_FORK_STATES",
            "NON_REPEAT_STATES",
            "INITIAL_STATE_NOT_DEFINED",
            "FILE_INTEGRITY_CHECK_FAILED",
            "INVALID_URL",
            "FILE_DOWNLOAD_FAILED",
            "PLATFORM_SOFTWARE_DELETE_ERROR",
            "INVALID_CSV_FILE",
            "INVALID_REQUEST",
            "SCHEMA_VALIDATION_FAILED",
            "FILTER_CREATION_ERROR",
            "INVALID_YAML_ERROR",
            "PLAN_CREATION_ERROR",
            "INVALID_INFRA_STATE",
            "PIPELINE_ALREADY_TRIGGERED",
            "NON_EXISTING_PIPELINE",
            "DUPLICATE_COMMAND_NAMES",
            "INVALID_PIPELINE",
            "COMMAND_DOES_NOT_EXIST",
            "DUPLICATE_ARTIFACTSTREAM_NAMES",
            "DUPLICATE_HOST_NAMES",
            "STATE_NOT_FOR_TYPE",
            "STATE_MACHINE_ISSUE",
            "STATE_DISCONTINUE_FAILED",
            "STATE_PAUSE_FAILED",
            "PAUSE_ALL_ALREADY",
            "RESUME_ALL_ALREADY",
            "ROLLBACK_ALREADY",
            "ABORT_ALL_ALREADY",
            "EXPIRE_ALL_ALREADY",
            "RETRY_FAILED",
            "UNKNOWN_ARTIFACT_TYPE",
            "UNKNOWN_STAGE_ELEMENT_WRAPPER_TYPE",
            "INIT_TIMEOUT",
            "LICENSE_EXPIRED",
            "NOT_LICENSED",
            "REQUEST_TIMEOUT",
            "WORKFLOW_ALREADY_TRIGGERED",
            "JENKINS_ERROR",
            "INVALID_ARTIFACT_SOURCE",
            "INVALID_ARTIFACT_SERVER",
            "INVALID_CLOUD_PROVIDER",
            "UPDATE_NOT_ALLOWED",
            "DELETE_NOT_ALLOWED",
            "APPDYNAMICS_CONFIGURATION_ERROR",
            "APM_CONFIGURATION_ERROR",
            "SPLUNK_CONFIGURATION_ERROR",
            "ELK_CONFIGURATION_ERROR",
            "LOGZ_CONFIGURATION_ERROR",
            "SUMO_CONFIGURATION_ERROR",
            "INSTANA_CONFIGURATION_ERROR",
            "APPDYNAMICS_ERROR",
            "STACKDRIVER_ERROR",
            "STACKDRIVER_CONFIGURATION_ERROR",
            "NEWRELIC_CONFIGURATION_ERROR",
            "NEWRELIC_ERROR",
            "DYNA_TRACE_CONFIGURATION_ERROR",
            "DYNA_TRACE_ERROR",
            "CLOUDWATCH_ERROR",
            "CLOUDWATCH_CONFIGURATION_ERROR",
            "PROMETHEUS_CONFIGURATION_ERROR",
            "DATA_DOG_CONFIGURATION_ERROR",
            "SERVICE_GUARD_CONFIGURATION_ERROR",
            "ENCRYPTION_NOT_CONFIGURED",
            "UNAVAILABLE_DELEGATES",
            "WORKFLOW_EXECUTION_IN_PROGRESS",
            "PIPELINE_EXECUTION_IN_PROGRESS",
            "AWS_ACCESS_DENIED",
            "AWS_CLUSTER_NOT_FOUND",
            "AWS_SERVICE_NOT_FOUND",
            "IMAGE_NOT_FOUND",
            "ILLEGAL_ARGUMENT",
            "IMAGE_TAG_NOT_FOUND",
            "DELEGATE_NOT_AVAILABLE",
            "INVALID_YAML_PAYLOAD",
            "AUTHENTICATION_ERROR",
            "AUTHORIZATION_ERROR",
            "UNRECOGNIZED_YAML_FIELDS",
            "COULD_NOT_MAP_BEFORE_YAML",
            "MISSING_BEFORE_YAML",
            "MISSING_YAML",
            "NON_EMPTY_DELETIONS",
            "GENERAL_YAML_ERROR",
            "GENERAL_YAML_INFO",
            "YAML_GIT_SYNC_ERROR",
            "GIT_CONNECTION_ERROR",
            "GIT_ERROR",
            "ARTIFACT_SERVER_ERROR",
            "ENCRYPT_DECRYPT_ERROR",
            "SECRET_MANAGEMENT_ERROR",
            "SECRET_NOT_FOUND",
            "KMS_OPERATION_ERROR",
            "GCP_KMS_OPERATION_ERROR",
            "VAULT_OPERATION_ERROR",
            "AWS_SECRETS_MANAGER_OPERATION_ERROR",
            "AZURE_KEY_VAULT_OPERATION_ERROR",
            "UNSUPPORTED_OPERATION_EXCEPTION",
            "FEATURE_UNAVAILABLE",
            "GENERAL_ERROR",
            "BASELINE_CONFIGURATION_ERROR",
            "SAML_IDP_CONFIGURATION_NOT_AVAILABLE",
            "INVALID_AUTHENTICATION_MECHANISM",
            "INVALID_SAML_CONFIGURATION",
            "INVALID_OAUTH_CONFIGURATION",
            "INVALID_LDAP_CONFIGURATION",
            "USER_GROUP_SYNC_FAILURE",
            "USER_GROUP_ALREADY_EXIST",
            "INVALID_TWO_FACTOR_AUTHENTICATION_CONFIGURATION",
            "EXPLANATION",
            "HINT",
            "NOT_WHITELISTED_IP",
            "INVALID_TOTP_TOKEN",
            "EMAIL_FAILED",
            "SSL_HANDSHAKE_FAILED",
            "NO_APPS_ASSIGNED",
            "INVALID_INFRA_CONFIGURATION",
            "TEMPLATES_LINKED",
            "USER_HAS_NO_PERMISSIONS",
            "USER_NOT_AUTHORIZED",
            "USER_ALREADY_PRESENT",
            "EMAIL_ERROR",
            "INVALID_USAGE_RESTRICTION",
            "USAGE_RESTRICTION_ERROR",
            "STATE_EXECUTION_INSTANCE_NOT_FOUND",
            "DELEGATE_TASK_RETRY",
            "KUBERNETES_API_TASK_EXCEPTION",
            "KUBERNETES_TASK_EXCEPTION",
            "KUBERNETES_YAML_ERROR",
            "SAVE_FILE_INTO_GCP_STORAGE_FAILED",
            "READ_FILE_FROM_GCP_STORAGE_FAILED",
            "FILE_NOT_FOUND_ERROR",
            "USAGE_LIMITS_EXCEEDED",
            "EVENT_PUBLISH_FAILED",
            "CUSTOM_APPROVAL_ERROR",
            "JIRA_ERROR",
            "EXPRESSION_EVALUATION_FAILED",
            "KUBERNETES_VALUES_ERROR",
            "KUBERNETES_CLUSTER_ERROR",
            "INCORRECT_SIGN_IN_MECHANISM",
            "OAUTH_LOGIN_FAILED",
            "INVALID_TERRAFORM_TARGETS_REQUEST",
            "TERRAFORM_EXECUTION_ERROR",
            "FILE_READ_FAILED",
            "FILE_SIZE_EXCEEDS_LIMIT",
            "CLUSTER_NOT_FOUND",
            "MARKETPLACE_TOKEN_NOT_FOUND",
            "INVALID_MARKETPLACE_TOKEN",
            "INVALID_TICKETING_SERVER",
            "SERVICENOW_ERROR",
            "PASSWORD_EXPIRED",
            "USER_LOCKED",
            "PASSWORD_STRENGTH_CHECK_FAILED",
            "ACCOUNT_DISABLED",
            "INVALID_ACCOUNT_PERMISSION",
            "PAGERDUTY_ERROR",
            "HEALTH_ERROR",
            "SAML_TEST_SUCCESS_MECHANISM_NOT_ENABLED",
            "DOMAIN_WHITELIST_FILTER_CHECK_FAILED",
            "INVALID_DASHBOARD_UPDATE_REQUEST",
            "DUPLICATE_FIELD",
            "INVALID_AZURE_VAULT_CONFIGURATION",
            "USER_NOT_AUTHORIZED_DUE_TO_USAGE_RESTRICTIONS",
            "INVALID_ROLLBACK",
            "DATA_COLLECTION_ERROR",
            "SUMO_DATA_COLLECTION_ERROR",
            "DEPLOYMENT_GOVERNANCE_ERROR",
            "BATCH_PROCESSING_ERROR",
            "GRAPHQL_ERROR",
            "FILE_CREATE_ERROR",
            "ILLEGAL_STATE",
            "GIT_DIFF_COMMIT_NOT_IN_ORDER",
            "FAILED_TO_ACQUIRE_PERSISTENT_LOCK",
            "FAILED_TO_ACQUIRE_NON_PERSISTENT_LOCK",
            "POD_NOT_FOUND_ERROR",
            "COMMAND_EXECUTION_ERROR",
            "REGISTRY_EXCEPTION",
            "ENGINE_INTERRUPT_PROCESSING_EXCEPTION",
            "ENGINE_IO_EXCEPTION",
            "ENGINE_OUTCOME_EXCEPTION",
            "ENGINE_SWEEPING_OUTPUT_EXCEPTION",
            "CACHE_NOT_FOUND_EXCEPTION",
            "ENGINE_ENTITY_UPDATE_EXCEPTION",
            "SHELL_EXECUTION_EXCEPTION",
            "TEMPLATE_NOT_FOUND",
            "AZURE_SERVICE_EXCEPTION",
            "AZURE_CLIENT_EXCEPTION",
            "GIT_UNSEEN_REMOTE_HEAD_COMMIT",
            "TIMEOUT_ENGINE_EXCEPTION",
            "NO_AVAILABLE_DELEGATES",
            "NO_GLOBAL_DELEGATE_ACCOUNT",
            "NO_INSTALLED_DELEGATES",
            "DUPLICATE_DELEGATE_EXCEPTION",
            "GCP_MARKETPLACE_EXCEPTION",
            "MISSING_DEFAULT_GOOGLE_CREDENTIALS",
            "INCORRECT_DEFAULT_GOOGLE_CREDENTIALS",
            "OPTIMISTIC_LOCKING_EXCEPTION",
            "NG_PIPELINE_EXECUTION_EXCEPTION",
            "NG_PIPELINE_CREATE_EXCEPTION",
            "RESOURCE_NOT_FOUND_EXCEPTION",
            "PMS_INITIALIZE_SDK_EXCEPTION",
            "UNEXPECTED_SNIPPET_EXCEPTION",
            "UNEXPECTED_SCHEMA_EXCEPTION",
            "CONNECTOR_VALIDATION_EXCEPTION",
            "TIMESCALE_NOT_AVAILABLE",
            "MIGRATION_EXCEPTION",
            "REQUEST_PROCESSING_INTERRUPTED",
            "SECRET_MANAGER_ID_NOT_FOUND",
            "GCP_SECRET_MANAGER_OPERATION_ERROR",
            "GCP_SECRET_OPERATION_ERROR",
            "GIT_OPERATION_ERROR",
            "TASK_FAILURE_ERROR",
            "INSTANCE_STATS_PROCESS_ERROR",
            "INSTANCE_STATS_MIGRATION_ERROR",
            "DEPLOYMENT_MIGRATION_ERROR",
            "CG_LICENSE_USAGE_ERROR",
            "INSTANCE_STATS_AGGREGATION_ERROR",
            "UNRESOLVED_EXPRESSIONS_ERROR",
            "KRYO_HANDLER_NOT_FOUND_ERROR",
            "DELEGATE_ERROR_HANDLER_EXCEPTION",
            "DELEGATE_INSTALLATION_COMMAND_NOT_SUPPORTED_EXCEPTION",
            "UNEXPECTED_TYPE_ERROR",
            "EXCEPTION_HANDLER_NOT_FOUND",
            "CONNECTOR_NOT_FOUND_EXCEPTION",
            "GCP_SERVER_ERROR",
            "HTTP_RESPONSE_EXCEPTION",
            "SCM_NOT_FOUND_ERROR",
            "SCM_CONFLICT_ERROR",
            "SCM_CONFLICT_ERROR_V2",
            "SCM_UNPROCESSABLE_ENTITY",
            "PROCESS_EXECUTION_EXCEPTION",
            "SCM_UNAUTHORIZED",
            "SCM_BAD_REQUEST",
            "SCM_INTERNAL_SERVER_ERROR",
            "DATA",
            "CONTEXT",
            "PR_CREATION_ERROR",
            "URL_NOT_REACHABLE",
            "URL_NOT_PROVIDED",
            "ENGINE_EXPRESSION_EVALUATION_ERROR",
            "ENGINE_FUNCTOR_ERROR",
            "JIRA_CLIENT_ERROR",
            "SCM_NOT_MODIFIED",
            "APPROVAL_STEP_NG_ERROR",
            "BUCKET_SERVER_ERROR",
            "GIT_SYNC_ERROR",
            "TEMPLATE_EXCEPTION",
            "TEMPLATE_ALREADY_EXISTS_EXCEPTION",
            "ENTITY_REFERENCE_EXCEPTION",
            "ACTIVE_SERVICE_INSTANCES_PRESENT_EXCEPTION",
            "INVALID_INPUT_SET",
            "INVALID_OVERLAY_INPUT_SET",
            "RESOURCE_ALREADY_EXISTS",
            "INVALID_JSON_PAYLOAD",
            "POLICY_EVALUATION_FAILURE",
            "POLICY_SET_ERROR",
            "INVALID_ARTIFACTORY_REGISTRY_REQUEST",
            "INVALID_NEXUS_REGISTRY_REQUEST",
            "ENTITY_NOT_FOUND",
            "INVALID_AZURE_CONTAINER_REGISTRY_REQUEST",
            "AZURE_AUTHENTICATION_ERROR",
            "AZURE_CONFIG_ERROR",
            "DATA_PROCESSING_ERROR",
            "INVALID_AZURE_AKS_REQUEST",
            "AWS_IAM_ERROR",
            "AWS_CF_ERROR",
            "AWS_INSTANCE_ERROR",
            "AWS_VPC_ERROR",
            "AWS_TAG_ERROR",
            "AWS_ASG_ERROR",
            "AWS_LOAD_BALANCER_ERROR",
            "SCM_INTERNAL_SERVER_ERROR_V2",
            "SCM_UNAUTHORIZED_ERROR_V2",
            "TOO_MANY_REQUESTS",
            "INVALID_IDENTIFIER_REF",
            "SPOTINST_NULL_ERROR",
            "SCM_UNEXPECTED_ERROR",
            "DUPLICATE_FILE_IMPORT",
            "AZURE_APP_SERVICES_TASK_EXCEPTION",
            "AZURE_ARM_TASK_EXCEPTION",
            "AZURE_BP_TASK_EXCEPTION",
            "MEDIA_NOT_SUPPORTED",
            "AWS_ECS_ERROR",
            "AWS_APPLICATION_AUTO_SCALING",
            "AWS_ECS_SERVICE_NOT_ACTIVE",
            "AWS_ECS_CLIENT_ERROR",
            "AWS_STS_ERROR",
            "FREEZE_EXCEPTION",
            "DELEGATE_TASK_EXPIRED",
            "DELEGATE_TASK_VALIDATION_FAILED",
            "MONGO_EXECUTION_TIMEOUT_EXCEPTION",
            "DELEGATE_NOT_REGISTERED",
            "TERRAFORM_VAULT_SECRET_CLEANUP_FAILURE",
            "APPROVAL_REJECTION",
            "TERRAGRUNT_EXECUTION_ERROR",
            "ADFS_ERROR",
            "TERRAFORM_CLOUD_ERROR",
            "CLUSTER_CREDENTIALS_NOT_FOUND",
            "SCM_API_ERROR",
            "INTERNAL_SERVER_ERROR",
            "SCM_FORBIDDEN",
            "AWS_EKS_ERROR",
            "OPA_POLICY_EVALUATION_ERROR",
            "USER_MARKED_FAILURE",
            "SSH_RETRY"
          ]
        },
        "message": {
          "type": "string"
        },
        "correlationId": {
          "type": "string"
        },
        "detailedMessage": {
          "type": "string"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        },
        "metadata": {
          "$ref": "#/definitions/ErrorMetadataDTO"
        }
      }
    },
    "ErrorMetadata": {
      "type": "object",
      "properties": {
        "errorCode": {
          "type": "string",
          "enum": [
            "DEFAULT_ERROR_CODE",
            "INVALID_ARGUMENT",
            "INVALID_EMAIL",
            "DOMAIN_NOT_ALLOWED_TO_REGISTER",
            "COMMNITY_EDITION_NOT_FOUND",
            "DEPLOY_MODE_IS_NOT_ON_PREM",
            "USER_ALREADY_REGISTERED",
            "USER_INVITATION_DOES_NOT_EXIST",
            "USER_DOES_NOT_EXIST",
            "USER_INVITE_OPERATION_FAILED",
            "USER_DISABLED",
            "ACCOUNT_DOES_NOT_EXIST",
            "INACTIVE_ACCOUNT",
            "ACCOUNT_MIGRATED",
            "USER_DOMAIN_NOT_ALLOWED",
            "MAX_FAILED_ATTEMPT_COUNT_EXCEEDED",
            "RESOURCE_NOT_FOUND",
            "INVALID_FORMAT",
            "ROLE_DOES_NOT_EXIST",
            "EMAIL_NOT_VERIFIED",
            "EMAIL_VERIFICATION_TOKEN_NOT_FOUND",
            "INVALID_TOKEN",
            "REVOKED_TOKEN",
            "INVALID_CAPTCHA_TOKEN",
            "NOT_ACCOUNT_MGR_NOR_HAS_ALL_APP_ACCESS",
            "EXPIRED_TOKEN",
            "INVALID_AGENT_MTLS_AUTHORITY",
            "TOKEN_ALREADY_REFRESHED_ONCE",
            "ACCESS_DENIED",
            "NG_ACCESS_DENIED",
            "INVALID_CREDENTIAL",
            "INVALID_CREDENTIALS_THIRD_PARTY",
            "INVALID_KEY",
            "INVALID_CONNECTOR_TYPE",
            "INVALID_KEYPATH",
            "INVALID_VARIABLE",
            "UNKNOWN_HOST",
            "UNREACHABLE_HOST",
            "INVALID_PORT",
            "SSH_SESSION_TIMEOUT",
            "SOCKET_CONNECTION_ERROR",
            "CONNECTION_ERROR",
            "SOCKET_CONNECTION_TIMEOUT",
            "WINRM_COMMAND_EXECUTION_TIMEOUT",
            "CONNECTION_TIMEOUT",
            "SSH_CONNECTION_ERROR",
            "USER_GROUP_ERROR",
            "INVALID_EXECUTION_ID",
            "ERROR_IN_GETTING_CHANNEL_STREAMS",
            "UNEXPECTED",
            "UNKNOWN_ERROR",
            "UNKNOWN_EXECUTOR_TYPE_ERROR",
            "DUPLICATE_STATE_NAMES",
            "TRANSITION_NOT_LINKED",
            "TRANSITION_TO_INCORRECT_STATE",
            "TRANSITION_TYPE_NULL",
            "STATES_WITH_DUP_TRANSITIONS",
            "BARRIERS_NOT_RUNNING_CONCURRENTLY",
            "NON_FORK_STATES",
            "NON_REPEAT_STATES",
            "INITIAL_STATE_NOT_DEFINED",
            "FILE_INTEGRITY_CHECK_FAILED",
            "INVALID_URL",
            "FILE_DOWNLOAD_FAILED",
            "PLATFORM_SOFTWARE_DELETE_ERROR",
            "INVALID_CSV_FILE",
            "INVALID_REQUEST",
            "SCHEMA_VALIDATION_FAILED",
            "FILTER_CREATION_ERROR",
            "INVALID_YAML_ERROR",
            "PLAN_CREATION_ERROR",
            "INVALID_INFRA_STATE",
            "PIPELINE_ALREADY_TRIGGERED",
            "NON_EXISTING_PIPELINE",
            "DUPLICATE_COMMAND_NAMES",
            "INVALID_PIPELINE",
            "COMMAND_DOES_NOT_EXIST",
            "DUPLICATE_ARTIFACTSTREAM_NAMES",
            "DUPLICATE_HOST_NAMES",
            "STATE_NOT_FOR_TYPE",
            "STATE_MACHINE_ISSUE",
            "STATE_DISCONTINUE_FAILED",
            "STATE_PAUSE_FAILED",
            "PAUSE_ALL_ALREADY",
            "RESUME_ALL_ALREADY",
            "ROLLBACK_ALREADY",
            "ABORT_ALL_ALREADY",
            "EXPIRE_ALL_ALREADY",
            "RETRY_FAILED",
            "UNKNOWN_ARTIFACT_TYPE",
            "UNKNOWN_STAGE_ELEMENT_WRAPPER_TYPE",
            "INIT_TIMEOUT",
            "LICENSE_EXPIRED",
            "NOT_LICENSED",
            "REQUEST_TIMEOUT",
            "WORKFLOW_ALREADY_TRIGGERED",
            "JENKINS_ERROR",
            "INVALID_ARTIFACT_SOURCE",
            "INVALID_ARTIFACT_SERVER",
            "INVALID_CLOUD_PROVIDER",
            "UPDATE_NOT_ALLOWED",
            "DELETE_NOT_ALLOWED",
            "APPDYNAMICS_CONFIGURATION_ERROR",
            "APM_CONFIGURATION_ERROR",
            "SPLUNK_CONFIGURATION_ERROR",
            "ELK_CONFIGURATION_ERROR",
            "LOGZ_CONFIGURATION_ERROR",
            "SUMO_CONFIGURATION_ERROR",
            "INSTANA_CONFIGURATION_ERROR",
            "APPDYNAMICS_ERROR",
            "STACKDRIVER_ERROR",
            "STACKDRIVER_CONFIGURATION_ERROR",
            "NEWRELIC_CONFIGURATION_ERROR",
            "NEWRELIC_ERROR",
            "DYNA_TRACE_CONFIGURATION_ERROR",
            "DYNA_TRACE_ERROR",
            "CLOUDWATCH_ERROR",
            "CLOUDWATCH_CONFIGURATION_ERROR",
            "PROMETHEUS_CONFIGURATION_ERROR",
            "DATA_DOG_CONFIGURATION_ERROR",
            "SERVICE_GUARD_CONFIGURATION_ERROR",
            "ENCRYPTION_NOT_CONFIGURED",
            "UNAVAILABLE_DELEGATES",
            "WORKFLOW_EXECUTION_IN_PROGRESS",
            "PIPELINE_EXECUTION_IN_PROGRESS",
            "AWS_ACCESS_DENIED",
            "AWS_CLUSTER_NOT_FOUND",
            "AWS_SERVICE_NOT_FOUND",
            "IMAGE_NOT_FOUND",
            "ILLEGAL_ARGUMENT",
            "IMAGE_TAG_NOT_FOUND",
            "DELEGATE_NOT_AVAILABLE",
            "INVALID_YAML_PAYLOAD",
            "AUTHENTICATION_ERROR",
            "AUTHORIZATION_ERROR",
            "UNRECOGNIZED_YAML_FIELDS",
            "COULD_NOT_MAP_BEFORE_YAML",
            "MISSING_BEFORE_YAML",
            "MISSING_YAML",
            "NON_EMPTY_DELETIONS",
            "GENERAL_YAML_ERROR",
            "GENERAL_YAML_INFO",
            "YAML_GIT_SYNC_ERROR",
            "GIT_CONNECTION_ERROR",
            "GIT_ERROR",
            "ARTIFACT_SERVER_ERROR",
            "ENCRYPT_DECRYPT_ERROR",
            "SECRET_MANAGEMENT_ERROR",
            "SECRET_NOT_FOUND",
            "KMS_OPERATION_ERROR",
            "GCP_KMS_OPERATION_ERROR",
            "VAULT_OPERATION_ERROR",
            "AWS_SECRETS_MANAGER_OPERATION_ERROR",
            "AZURE_KEY_VAULT_OPERATION_ERROR",
            "UNSUPPORTED_OPERATION_EXCEPTION",
            "FEATURE_UNAVAILABLE",
            "GENERAL_ERROR",
            "BASELINE_CONFIGURATION_ERROR",
            "SAML_IDP_CONFIGURATION_NOT_AVAILABLE",
            "INVALID_AUTHENTICATION_MECHANISM",
            "INVALID_SAML_CONFIGURATION",
            "INVALID_OAUTH_CONFIGURATION",
            "INVALID_LDAP_CONFIGURATION",
            "USER_GROUP_SYNC_FAILURE",
            "USER_GROUP_ALREADY_EXIST",
            "INVALID_TWO_FACTOR_AUTHENTICATION_CONFIGURATION",
            "EXPLANATION",
            "HINT",
            "NOT_WHITELISTED_IP",
            "INVALID_TOTP_TOKEN",
            "EMAIL_FAILED",
            "SSL_HANDSHAKE_FAILED",
            "NO_APPS_ASSIGNED",
            "INVALID_INFRA_CONFIGURATION",
            "TEMPLATES_LINKED",
            "USER_HAS_NO_PERMISSIONS",
            "USER_NOT_AUTHORIZED",
            "USER_ALREADY_PRESENT",
            "EMAIL_ERROR",
            "INVALID_USAGE_RESTRICTION",
            "USAGE_RESTRICTION_ERROR",
            "STATE_EXECUTION_INSTANCE_NOT_FOUND",
            "DELEGATE_TASK_RETRY",
            "KUBERNETES_API_TASK_EXCEPTION",
            "KUBERNETES_TASK_EXCEPTION",
            "KUBERNETES_YAML_ERROR",
            "SAVE_FILE_INTO_GCP_STORAGE_FAILED",
            "READ_FILE_FROM_GCP_STORAGE_FAILED",
            "FILE_NOT_FOUND_ERROR",
            "USAGE_LIMITS_EXCEEDED",
            "EVENT_PUBLISH_FAILED",
            "CUSTOM_APPROVAL_ERROR",
            "JIRA_ERROR",
            "EXPRESSION_EVALUATION_FAILED",
            "KUBERNETES_VALUES_ERROR",
            "KUBERNETES_CLUSTER_ERROR",
            "INCORRECT_SIGN_IN_MECHANISM",
            "OAUTH_LOGIN_FAILED",
            "INVALID_TERRAFORM_TARGETS_REQUEST",
            "TERRAFORM_EXECUTION_ERROR",
            "FILE_READ_FAILED",
            "FILE_SIZE_EXCEEDS_LIMIT",
            "CLUSTER_NOT_FOUND",
            "MARKETPLACE_TOKEN_NOT_FOUND",
            "INVALID_MARKETPLACE_TOKEN",
            "INVALID_TICKETING_SERVER",
            "SERVICENOW_ERROR",
            "PASSWORD_EXPIRED",
            "USER_LOCKED",
            "PASSWORD_STRENGTH_CHECK_FAILED",
            "ACCOUNT_DISABLED",
            "INVALID_ACCOUNT_PERMISSION",
            "PAGERDUTY_ERROR",
            "HEALTH_ERROR",
            "SAML_TEST_SUCCESS_MECHANISM_NOT_ENABLED",
            "DOMAIN_WHITELIST_FILTER_CHECK_FAILED",
            "INVALID_DASHBOARD_UPDATE_REQUEST",
            "DUPLICATE_FIELD",
            "INVALID_AZURE_VAULT_CONFIGURATION",
            "USER_NOT_AUTHORIZED_DUE_TO_USAGE_RESTRICTIONS",
            "INVALID_ROLLBACK",
            "DATA_COLLECTION_ERROR",
            "SUMO_DATA_COLLECTION_ERROR",
            "DEPLOYMENT_GOVERNANCE_ERROR",
            "BATCH_PROCESSING_ERROR",
            "GRAPHQL_ERROR",
            "FILE_CREATE_ERROR",
            "ILLEGAL_STATE",
            "GIT_DIFF_COMMIT_NOT_IN_ORDER",
            "FAILED_TO_ACQUIRE_PERSISTENT_LOCK",
            "FAILED_TO_ACQUIRE_NON_PERSISTENT_LOCK",
            "POD_NOT_FOUND_ERROR",
            "COMMAND_EXECUTION_ERROR",
            "REGISTRY_EXCEPTION",
            "ENGINE_INTERRUPT_PROCESSING_EXCEPTION",
            "ENGINE_IO_EXCEPTION",
            "ENGINE_OUTCOME_EXCEPTION",
            "ENGINE_SWEEPING_OUTPUT_EXCEPTION",
            "CACHE_NOT_FOUND_EXCEPTION",
            "ENGINE_ENTITY_UPDATE_EXCEPTION",
            "SHELL_EXECUTION_EXCEPTION",
            "TEMPLATE_NOT_FOUND",
            "AZURE_SERVICE_EXCEPTION",
            "AZURE_CLIENT_EXCEPTION",
            "GIT_UNSEEN_REMOTE_HEAD_COMMIT",
            "TIMEOUT_ENGINE_EXCEPTION",
            "NO_AVAILABLE_DELEGATES",
            "NO_GLOBAL_DELEGATE_ACCOUNT",
            "NO_INSTALLED_DELEGATES",
            "DUPLICATE_DELEGATE_EXCEPTION",
            "GCP_MARKETPLACE_EXCEPTION",
            "MISSING_DEFAULT_GOOGLE_CREDENTIALS",
            "INCORRECT_DEFAULT_GOOGLE_CREDENTIALS",
            "OPTIMISTIC_LOCKING_EXCEPTION",
            "NG_PIPELINE_EXECUTION_EXCEPTION",
            "NG_PIPELINE_CREATE_EXCEPTION",
            "RESOURCE_NOT_FOUND_EXCEPTION",
            "PMS_INITIALIZE_SDK_EXCEPTION",
            "UNEXPECTED_SNIPPET_EXCEPTION",
            "UNEXPECTED_SCHEMA_EXCEPTION",
            "CONNECTOR_VALIDATION_EXCEPTION",
            "TIMESCALE_NOT_AVAILABLE",
            "MIGRATION_EXCEPTION",
            "REQUEST_PROCESSING_INTERRUPTED",
            "SECRET_MANAGER_ID_NOT_FOUND",
            "GCP_SECRET_MANAGER_OPERATION_ERROR",
            "GCP_SECRET_OPERATION_ERROR",
            "GIT_OPERATION_ERROR",
            "TASK_FAILURE_ERROR",
            "INSTANCE_STATS_PROCESS_ERROR",
            "INSTANCE_STATS_MIGRATION_ERROR",
            "DEPLOYMENT_MIGRATION_ERROR",
            "CG_LICENSE_USAGE_ERROR",
            "INSTANCE_STATS_AGGREGATION_ERROR",
            "UNRESOLVED_EXPRESSIONS_ERROR",
            "KRYO_HANDLER_NOT_FOUND_ERROR",
            "DELEGATE_ERROR_HANDLER_EXCEPTION",
            "DELEGATE_INSTALLATION_COMMAND_NOT_SUPPORTED_EXCEPTION",
            "UNEXPECTED_TYPE_ERROR",
            "EXCEPTION_HANDLER_NOT_FOUND",
            "CONNECTOR_NOT_FOUND_EXCEPTION",
            "GCP_SERVER_ERROR",
            "HTTP_RESPONSE_EXCEPTION",
            "SCM_NOT_FOUND_ERROR",
            "SCM_CONFLICT_ERROR",
            "SCM_CONFLICT_ERROR_V2",
            "SCM_UNPROCESSABLE_ENTITY",
            "PROCESS_EXECUTION_EXCEPTION",
            "SCM_UNAUTHORIZED",
            "SCM_BAD_REQUEST",
            "SCM_INTERNAL_SERVER_ERROR",
            "DATA",
            "CONTEXT",
            "PR_CREATION_ERROR",
            "URL_NOT_REACHABLE",
            "URL_NOT_PROVIDED",
            "ENGINE_EXPRESSION_EVALUATION_ERROR",
            "ENGINE_FUNCTOR_ERROR",
            "JIRA_CLIENT_ERROR",
            "SCM_NOT_MODIFIED",
            "APPROVAL_STEP_NG_ERROR",
            "BUCKET_SERVER_ERROR",
            "GIT_SYNC_ERROR",
            "TEMPLATE_EXCEPTION",
            "TEMPLATE_ALREADY_EXISTS_EXCEPTION",
            "ENTITY_REFERENCE_EXCEPTION",
            "ACTIVE_SERVICE_INSTANCES_PRESENT_EXCEPTION",
            "INVALID_INPUT_SET",
            "INVALID_OVERLAY_INPUT_SET",
            "RESOURCE_ALREADY_EXISTS",
            "INVALID_JSON_PAYLOAD",
            "POLICY_EVALUATION_FAILURE",
            "POLICY_SET_ERROR",
            "INVALID_ARTIFACTORY_REGISTRY_REQUEST",
            "INVALID_NEXUS_REGISTRY_REQUEST",
            "ENTITY_NOT_FOUND",
            "INVALID_AZURE_CONTAINER_REGISTRY_REQUEST",
            "AZURE_AUTHENTICATION_ERROR",
            "AZURE_CONFIG_ERROR",
            "DATA_PROCESSING_ERROR",
            "INVALID_AZURE_AKS_REQUEST",
            "AWS_IAM_ERROR",
            "AWS_CF_ERROR",
            "AWS_INSTANCE_ERROR",
            "AWS_VPC_ERROR",
            "AWS_TAG_ERROR",
            "AWS_ASG_ERROR",
            "AWS_LOAD_BALANCER_ERROR",
            "SCM_INTERNAL_SERVER_ERROR_V2",
            "SCM_UNAUTHORIZED_ERROR_V2",
            "TOO_MANY_REQUESTS",
            "INVALID_IDENTIFIER_REF",
            "SPOTINST_NULL_ERROR",
            "SCM_UNEXPECTED_ERROR",
            "DUPLICATE_FILE_IMPORT",
            "AZURE_APP_SERVICES_TASK_EXCEPTION",
            "AZURE_ARM_TASK_EXCEPTION",
            "AZURE_BP_TASK_EXCEPTION",
            "MEDIA_NOT_SUPPORTED",
            "AWS_ECS_ERROR",
            "AWS_APPLICATION_AUTO_SCALING",
            "AWS_ECS_SERVICE_NOT_ACTIVE",
            "AWS_ECS_CLIENT_ERROR",
            "AWS_STS_ERROR",
            "FREEZE_EXCEPTION",
            "DELEGATE_TASK_EXPIRED",
            "DELEGATE_TASK_VALIDATION_FAILED",
            "MONGO_EXECUTION_TIMEOUT_EXCEPTION",
            "DELEGATE_NOT_REGISTERED",
            "TERRAFORM_VAULT_SECRET_CLEANUP_FAILURE",
            "APPROVAL_REJECTION",
            "TERRAGRUNT_EXECUTION_ERROR",
            "ADFS_ERROR",
            "TERRAFORM_CLOUD_ERROR",
            "CLUSTER_CREDENTIALS_NOT_FOUND",
            "SCM_API_ERROR",
            "INTERNAL_SERVER_ERROR",
            "SCM_FORBIDDEN",
            "AWS_EKS_ERROR",
            "OPA_POLICY_EVALUATION_ERROR",
            "USER_MARKED_FAILURE",
            "SSH_RETRY"
          ]
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "ErrorMetadataDTO": {
      "type": "object",
      "discriminator": "type",
      "properties": {
        "type": {
          "type": "string"
        }
      }
    },
    "ErrorNodeSummary": {
      "type": "object",
      "properties": {
        "nodeInfo": {
          "$ref": "#/definitions/NodeInfo"
        },
        "templateInfo": {
          "$ref": "#/definitions/TemplateInfo"
        },
        "templateResponse": {
          "$ref": "#/definitions/TemplateResponse"
        },
        "childrenErrorNodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorNodeSummary"
          }
        }
      }
    },
    "FilterCreatorErrorResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/ErrorMetadataDTO"
        },
        {
          "type": "object",
          "properties": {
            "errorMetadataList": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ErrorMetadata"
              }
            }
          }
        }
      ]
    },
    "InvalidFieldsDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ErrorMetadataDTO"
        },
        {
          "type": "object",
          "properties": {}
        }
      ]
    },
    "NodeErrorInfo": {
      "type": "object",
      "properties": {
        "identifier": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "fqn": {
          "type": "string"
        }
      }
    },
    "NodeInfo": {
      "type": "object",
      "properties": {
        "identifier": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "localFqn": {
          "type": "string"
        }
      }
    },
    "ResponseMessage": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "DEFAULT_ERROR_CODE",
            "INVALID_ARGUMENT",
            "INVALID_EMAIL",
            "DOMAIN_NOT_ALLOWED_TO_REGISTER",
            "COMMNITY_EDITION_NOT_FOUND",
            "DEPLOY_MODE_IS_NOT_ON_PREM",
            "USER_ALREADY_REGISTERED",
            "USER_INVITATION_DOES_NOT_EXIST",
            "USER_DOES_NOT_EXIST",
            "USER_INVITE_OPERATION_FAILED",
            "USER_DISABLED",
            "ACCOUNT_DOES_NOT_EXIST",
            "INACTIVE_ACCOUNT",
            "ACCOUNT_MIGRATED",
            "USER_DOMAIN_NOT_ALLOWED",
            "MAX_FAILED_ATTEMPT_COUNT_EXCEEDED",
            "RESOURCE_NOT_FOUND",
            "INVALID_FORMAT",
            "ROLE_DOES_NOT_EXIST",
            "EMAIL_NOT_VERIFIED",
            "EMAIL_VERIFICATION_TOKEN_NOT_FOUND",
            "INVALID_TOKEN",
            "REVOKED_TOKEN",
            "INVALID_CAPTCHA_TOKEN",
            "NOT_ACCOUNT_MGR_NOR_HAS_ALL_APP_ACCESS",
            "EXPIRED_TOKEN",
            "INVALID_AGENT_MTLS_AUTHORITY",
            "TOKEN_ALREADY_REFRESHED_ONCE",
            "ACCESS_DENIED",
            "NG_ACCESS_DENIED",
            "INVALID_CREDENTIAL",
            "INVALID_CREDENTIALS_THIRD_PARTY",
            "INVALID_KEY",
            "INVALID_CONNECTOR_TYPE",
            "INVALID_KEYPATH",
            "INVALID_VARIABLE",
            "UNKNOWN_HOST",
            "UNREACHABLE_HOST",
            "INVALID_PORT",
            "SSH_SESSION_TIMEOUT",
            "SOCKET_CONNECTION_ERROR",
            "CONNECTION_ERROR",
            "SOCKET_CONNECTION_TIMEOUT",
            "WINRM_COMMAND_EXECUTION_TIMEOUT",
            "CONNECTION_TIMEOUT",
            "SSH_CONNECTION_ERROR",
            "USER_GROUP_ERROR",
            "INVALID_EXECUTION_ID",
            "ERROR_IN_GETTING_CHANNEL_STREAMS",
            "UNEXPECTED",
            "UNKNOWN_ERROR",
            "UNKNOWN_EXECUTOR_TYPE_ERROR",
            "DUPLICATE_STATE_NAMES",
            "TRANSITION_NOT_LINKED",
            "TRANSITION_TO_INCORRECT_STATE",
            "TRANSITION_TYPE_NULL",
            "STATES_WITH_DUP_TRANSITIONS",
            "BARRIERS_NOT_RUNNING_CONCURRENTLY",
            "NON_FORK_STATES",
            "NON_REPEAT_STATES",
            "INITIAL_STATE_NOT_DEFINED",
            "FILE_INTEGRITY_CHECK_FAILED",
            "INVALID_URL",
            "FILE_DOWNLOAD_FAILED",
            "PLATFORM_SOFTWARE_DELETE_ERROR",
            "INVALID_CSV_FILE",
            "INVALID_REQUEST",
            "SCHEMA_VALIDATION_FAILED",
            "FILTER_CREATION_ERROR",
            "INVALID_YAML_ERROR",
            "PLAN_CREATION_ERROR",
            "INVALID_INFRA_STATE",
            "PIPELINE_ALREADY_TRIGGERED",
            "NON_EXISTING_PIPELINE",
            "DUPLICATE_COMMAND_NAMES",
            "INVALID_PIPELINE",
            "COMMAND_DOES_NOT_EXIST",
            "DUPLICATE_ARTIFACTSTREAM_NAMES",
            "DUPLICATE_HOST_NAMES",
            "STATE_NOT_FOR_TYPE",
            "STATE_MACHINE_ISSUE",
            "STATE_DISCONTINUE_FAILED",
            "STATE_PAUSE_FAILED",
            "PAUSE_ALL_ALREADY",
            "RESUME_ALL_ALREADY",
            "ROLLBACK_ALREADY",
            "ABORT_ALL_ALREADY",
            "EXPIRE_ALL_ALREADY",
            "RETRY_FAILED",
            "UNKNOWN_ARTIFACT_TYPE",
            "UNKNOWN_STAGE_ELEMENT_WRAPPER_TYPE",
            "INIT_TIMEOUT",
            "LICENSE_EXPIRED",
            "NOT_LICENSED",
            "REQUEST_TIMEOUT",
            "WORKFLOW_ALREADY_TRIGGERED",
            "JENKINS_ERROR",
            "INVALID_ARTIFACT_SOURCE",
            "INVALID_ARTIFACT_SERVER",
            "INVALID_CLOUD_PROVIDER",
            "UPDATE_NOT_ALLOWED",
            "DELETE_NOT_ALLOWED",
            "APPDYNAMICS_CONFIGURATION_ERROR",
            "APM_CONFIGURATION_ERROR",
            "SPLUNK_CONFIGURATION_ERROR",
            "ELK_CONFIGURATION_ERROR",
            "LOGZ_CONFIGURATION_ERROR",
            "SUMO_CONFIGURATION_ERROR",
            "INSTANA_CONFIGURATION_ERROR",
            "APPDYNAMICS_ERROR",
            "STACKDRIVER_ERROR",
            "STACKDRIVER_CONFIGURATION_ERROR",
            "NEWRELIC_CONFIGURATION_ERROR",
            "NEWRELIC_ERROR",
            "DYNA_TRACE_CONFIGURATION_ERROR",
            "DYNA_TRACE_ERROR",
            "CLOUDWATCH_ERROR",
            "CLOUDWATCH_CONFIGURATION_ERROR",
            "PROMETHEUS_CONFIGURATION_ERROR",
            "DATA_DOG_CONFIGURATION_ERROR",
            "SERVICE_GUARD_CONFIGURATION_ERROR",
            "ENCRYPTION_NOT_CONFIGURED",
            "UNAVAILABLE_DELEGATES",
            "WORKFLOW_EXECUTION_IN_PROGRESS",
            "PIPELINE_EXECUTION_IN_PROGRESS",
            "AWS_ACCESS_DENIED",
            "AWS_CLUSTER_NOT_FOUND",
            "AWS_SERVICE_NOT_FOUND",
            "IMAGE_NOT_FOUND",
            "ILLEGAL_ARGUMENT",
            "IMAGE_TAG_NOT_FOUND",
            "DELEGATE_NOT_AVAILABLE",
            "INVALID_YAML_PAYLOAD",
            "AUTHENTICATION_ERROR",
            "AUTHORIZATION_ERROR",
            "UNRECOGNIZED_YAML_FIELDS",
            "COULD_NOT_MAP_BEFORE_YAML",
            "MISSING_BEFORE_YAML",
            "MISSING_YAML",
            "NON_EMPTY_DELETIONS",
            "GENERAL_YAML_ERROR",
            "GENERAL_YAML_INFO",
            "YAML_GIT_SYNC_ERROR",
            "GIT_CONNECTION_ERROR",
            "GIT_ERROR",
            "ARTIFACT_SERVER_ERROR",
            "ENCRYPT_DECRYPT_ERROR",
            "SECRET_MANAGEMENT_ERROR",
            "SECRET_NOT_FOUND",
            "KMS_OPERATION_ERROR",
            "GCP_KMS_OPERATION_ERROR",
            "VAULT_OPERATION_ERROR",
            "AWS_SECRETS_MANAGER_OPERATION_ERROR",
            "AZURE_KEY_VAULT_OPERATION_ERROR",
            "UNSUPPORTED_OPERATION_EXCEPTION",
            "FEATURE_UNAVAILABLE",
            "GENERAL_ERROR",
            "BASELINE_CONFIGURATION_ERROR",
            "SAML_IDP_CONFIGURATION_NOT_AVAILABLE",
            "INVALID_AUTHENTICATION_MECHANISM",
            "INVALID_SAML_CONFIGURATION",
            "INVALID_OAUTH_CONFIGURATION",
            "INVALID_LDAP_CONFIGURATION",
            "USER_GROUP_SYNC_FAILURE",
            "USER_GROUP_ALREADY_EXIST",
            "INVALID_TWO_FACTOR_AUTHENTICATION_CONFIGURATION",
            "EXPLANATION",
            "HINT",
            "NOT_WHITELISTED_IP",
            "INVALID_TOTP_TOKEN",
            "EMAIL_FAILED",
            "SSL_HANDSHAKE_FAILED",
            "NO_APPS_ASSIGNED",
            "INVALID_INFRA_CONFIGURATION",
            "TEMPLATES_LINKED",
            "USER_HAS_NO_PERMISSIONS",
            "USER_NOT_AUTHORIZED",
            "USER_ALREADY_PRESENT",
            "EMAIL_ERROR",
            "INVALID_USAGE_RESTRICTION",
            "USAGE_RESTRICTION_ERROR",
            "STATE_EXECUTION_INSTANCE_NOT_FOUND",
            "DELEGATE_TASK_RETRY",
            "KUBERNETES_API_TASK_EXCEPTION",
            "KUBERNETES_TASK_EXCEPTION",
            "KUBERNETES_YAML_ERROR",
            "SAVE_FILE_INTO_GCP_STORAGE_FAILED",
            "READ_FILE_FROM_GCP_STORAGE_FAILED",
            "FILE_NOT_FOUND_ERROR",
            "USAGE_LIMITS_EXCEEDED",
            "EVENT_PUBLISH_FAILED",
            "CUSTOM_APPROVAL_ERROR",
            "JIRA_ERROR",
            "EXPRESSION_EVALUATION_FAILED",
            "KUBERNETES_VALUES_ERROR",
            "KUBERNETES_CLUSTER_ERROR",
            "INCORRECT_SIGN_IN_MECHANISM",
            "OAUTH_LOGIN_FAILED",
            "INVALID_TERRAFORM_TARGETS_REQUEST",
            "TERRAFORM_EXECUTION_ERROR",
            "FILE_READ_FAILED",
            "FILE_SIZE_EXCEEDS_LIMIT",
            "CLUSTER_NOT_FOUND",
            "MARKETPLACE_TOKEN_NOT_FOUND",
            "INVALID_MARKETPLACE_TOKEN",
            "INVALID_TICKETING_SERVER",
            "SERVICENOW_ERROR",
            "PASSWORD_EXPIRED",
            "USER_LOCKED",
            "PASSWORD_STRENGTH_CHECK_FAILED",
            "ACCOUNT_DISABLED",
            "INVALID_ACCOUNT_PERMISSION",
            "PAGERDUTY_ERROR",
            "HEALTH_ERROR",
            "SAML_TEST_SUCCESS_MECHANISM_NOT_ENABLED",
            "DOMAIN_WHITELIST_FILTER_CHECK_FAILED",
            "INVALID_DASHBOARD_UPDATE_REQUEST",
            "DUPLICATE_FIELD",
            "INVALID_AZURE_VAULT_CONFIGURATION",
            "USER_NOT_AUTHORIZED_DUE_TO_USAGE_RESTRICTIONS",
            "INVALID_ROLLBACK",
            "DATA_COLLECTION_ERROR",
            "SUMO_DATA_COLLECTION_ERROR",
            "DEPLOYMENT_GOVERNANCE_ERROR",
            "BATCH_PROCESSING_ERROR",
            "GRAPHQL_ERROR",
            "FILE_CREATE_ERROR",
            "ILLEGAL_STATE",
            "GIT_DIFF_COMMIT_NOT_IN_ORDER",
            "FAILED_TO_ACQUIRE_PERSISTENT_LOCK",
            "FAILED_TO_ACQUIRE_NON_PERSISTENT_LOCK",
            "POD_NOT_FOUND_ERROR",
            "COMMAND_EXECUTION_ERROR",
            "REGISTRY_EXCEPTION",
            "ENGINE_INTERRUPT_PROCESSING_EXCEPTION",
            "ENGINE_IO_EXCEPTION",
            "ENGINE_OUTCOME_EXCEPTION",
            "ENGINE_SWEEPING_OUTPUT_EXCEPTION",
            "CACHE_NOT_FOUND_EXCEPTION",
            "ENGINE_ENTITY_UPDATE_EXCEPTION",
            "SHELL_EXECUTION_EXCEPTION",
            "TEMPLATE_NOT_FOUND",
            "AZURE_SERVICE_EXCEPTION",
            "AZURE_CLIENT_EXCEPTION",
            "GIT_UNSEEN_REMOTE_HEAD_COMMIT",
            "TIMEOUT_ENGINE_EXCEPTION",
            "NO_AVAILABLE_DELEGATES",
            "NO_GLOBAL_DELEGATE_ACCOUNT",
            "NO_INSTALLED_DELEGATES",
            "DUPLICATE_DELEGATE_EXCEPTION",
            "GCP_MARKETPLACE_EXCEPTION",
            "MISSING_DEFAULT_GOOGLE_CREDENTIALS",
            "INCORRECT_DEFAULT_GOOGLE_CREDENTIALS",
            "OPTIMISTIC_LOCKING_EXCEPTION",
            "NG_PIPELINE_EXECUTION_EXCEPTION",
            "NG_PIPELINE_CREATE_EXCEPTION",
            "RESOURCE_NOT_FOUND_EXCEPTION",
            "PMS_INITIALIZE_SDK_EXCEPTION",
            "UNEXPECTED_SNIPPET_EXCEPTION",
            "UNEXPECTED_SCHEMA_EXCEPTION",
            "CONNECTOR_VALIDATION_EXCEPTION",
            "TIMESCALE_NOT_AVAILABLE",
            "MIGRATION_EXCEPTION",
            "REQUEST_PROCESSING_INTERRUPTED",
            "SECRET_MANAGER_ID_NOT_FOUND",
            "GCP_SECRET_MANAGER_OPERATION_ERROR",
            "GCP_SECRET_OPERATION_ERROR",
            "GIT_OPERATION_ERROR",
            "TASK_FAILURE_ERROR",
            "INSTANCE_STATS_PROCESS_ERROR",
            "INSTANCE_STATS_MIGRATION_ERROR",
            "DEPLOYMENT_MIGRATION_ERROR",
            "CG_LICENSE_USAGE_ERROR",
            "INSTANCE_STATS_AGGREGATION_ERROR",
            "UNRESOLVED_EXPRESSIONS_ERROR",
            "KRYO_HANDLER_NOT_FOUND_ERROR",
            "DELEGATE_ERROR_HANDLER_EXCEPTION",
            "DELEGATE_INSTALLATION_COMMAND_NOT_SUPPORTED_EXCEPTION",
            "UNEXPECTED_TYPE_ERROR",
            "EXCEPTION_HANDLER_NOT_FOUND",
            "CONNECTOR_NOT_FOUND_EXCEPTION",
            "GCP_SERVER_ERROR",
            "HTTP_RESPONSE_EXCEPTION",
            "SCM_NOT_FOUND_ERROR",
            "SCM_CONFLICT_ERROR",
            "SCM_CONFLICT_ERROR_V2",
            "SCM_UNPROCESSABLE_ENTITY",
            "PROCESS_EXECUTION_EXCEPTION",
            "SCM_UNAUTHORIZED",
            "SCM_BAD_REQUEST",
            "SCM_INTERNAL_SERVER_ERROR",
            "DATA",
            "CONTEXT",
            "PR_CREATION_ERROR",
            "URL_NOT_REACHABLE",
            "URL_NOT_PROVIDED",
            "ENGINE_EXPRESSION_EVALUATION_ERROR",
            "ENGINE_FUNCTOR_ERROR",
            "JIRA_CLIENT_ERROR",
            "SCM_NOT_MODIFIED",
            "APPROVAL_STEP_NG_ERROR",
            "BUCKET_SERVER_ERROR",
            "GIT_SYNC_ERROR",
            "TEMPLATE_EXCEPTION",
            "TEMPLATE_ALREADY_EXISTS_EXCEPTION",
            "ENTITY_REFERENCE_EXCEPTION",
            "ACTIVE_SERVICE_INSTANCES_PRESENT_EXCEPTION",
            "INVALID_INPUT_SET",
            "INVALID_OVERLAY_INPUT_SET",
            "RESOURCE_ALREADY_EXISTS",
            "INVALID_JSON_PAYLOAD",
            "POLICY_EVALUATION_FAILURE",
            "POLICY_SET_ERROR",
            "INVALID_ARTIFACTORY_REGISTRY_REQUEST",
            "INVALID_NEXUS_REGISTRY_REQUEST",
            "ENTITY_NOT_FOUND",
            "INVALID_AZURE_CONTAINER_REGISTRY_REQUEST",
            "AZURE_AUTHENTICATION_ERROR",
            "AZURE_CONFIG_ERROR",
            "DATA_PROCESSING_ERROR",
            "INVALID_AZURE_AKS_REQUEST",
            "AWS_IAM_ERROR",
            "AWS_CF_ERROR",
            "AWS_INSTANCE_ERROR",
            "AWS_VPC_ERROR",
            "AWS_TAG_ERROR",
            "AWS_ASG_ERROR",
            "AWS_LOAD_BALANCER_ERROR",
            "SCM_INTERNAL_SERVER_ERROR_V2",
            "SCM_UNAUTHORIZED_ERROR_V2",
            "TOO_MANY_REQUESTS",
            "INVALID_IDENTIFIER_REF",
            "SPOTINST_NULL_ERROR",
            "SCM_UNEXPECTED_ERROR",
            "DUPLICATE_FILE_IMPORT",
            "AZURE_APP_SERVICES_TASK_EXCEPTION",
            "AZURE_ARM_TASK_EXCEPTION",
            "AZURE_BP_TASK_EXCEPTION",
            "MEDIA_NOT_SUPPORTED",
            "AWS_ECS_ERROR",
            "AWS_APPLICATION_AUTO_SCALING",
            "AWS_ECS_SERVICE_NOT_ACTIVE",
            "AWS_ECS_CLIENT_ERROR",
            "AWS_STS_ERROR",
            "FREEZE_EXCEPTION",
            "DELEGATE_TASK_EXPIRED",
            "DELEGATE_TASK_VALIDATION_FAILED",
            "MONGO_EXECUTION_TIMEOUT_EXCEPTION",
            "DELEGATE_NOT_REGISTERED",
            "TERRAFORM_VAULT_SECRET_CLEANUP_FAILURE",
            "APPROVAL_REJECTION",
            "TERRAGRUNT_EXECUTION_ERROR",
            "ADFS_ERROR",
            "TERRAFORM_CLOUD_ERROR",
            "CLUSTER_CREDENTIALS_NOT_FOUND",
            "SCM_API_ERROR",
            "INTERNAL_SERVER_ERROR",
            "SCM_FORBIDDEN",
            "AWS_EKS_ERROR",
            "OPA_POLICY_EVALUATION_ERROR",
            "USER_MARKED_FAILURE",
            "SSH_RETRY"
          ]
        },
        "level": {
          "type": "string",
          "enum": ["INFO", "ERROR"]
        },
        "message": {
          "type": "string"
        },
        "exception": {
          "$ref": "#/definitions/Throwable"
        },
        "failureTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "EXPIRED",
              "DELEGATE_PROVISIONING",
              "CONNECTIVITY",
              "AUTHENTICATION",
              "VERIFICATION_FAILURE",
              "APPLICATION_ERROR",
              "AUTHORIZATION_ERROR",
              "TIMEOUT_ERROR",
              "POLICY_EVALUATION_FAILURE",
              "INPUT_TIMEOUT_FAILURE",
              "APPROVAL_REJECTION",
              "DELEGATE_RESTART",
              "USER_MARKED_FAILURE"
            ]
          }
        }
      }
    },
    "SampleErrorMetadataDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ErrorMetadataDTO"
        },
        {
          "type": "object",
          "properties": {
            "sampleMap": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "ScmErrorMetadataDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ErrorMetadataDTO"
        },
        {
          "type": "object",
          "properties": {
            "conflictCommitId": {
              "type": "string"
            }
          }
        }
      ]
    },
    "StackTraceElement": {
      "type": "object",
      "properties": {
        "classLoaderName": {
          "type": "string"
        },
        "moduleName": {
          "type": "string"
        },
        "moduleVersion": {
          "type": "string"
        },
        "methodName": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "lineNumber": {
          "type": "integer",
          "format": "int32"
        },
        "className": {
          "type": "string"
        },
        "nativeMethod": {
          "type": "boolean"
        }
      }
    },
    "TemplateInfo": {
      "type": "object",
      "properties": {
        "templateIdentifier": {
          "type": "string"
        },
        "versionLabel": {
          "type": "string"
        },
        "templateEntityType": {
          "type": "string",
          "enum": [
            "Step",
            "Stage",
            "Pipeline",
            "CustomDeployment",
            "MonitoredService",
            "SecretManager",
            "ArtifactSource",
            "StepGroup"
          ]
        }
      }
    },
    "TemplateInputsErrorDTO": {
      "type": "object",
      "properties": {
        "fieldName": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "identifierOfErrorSource": {
          "type": "string"
        }
      }
    },
    "TemplateInputsErrorMetadataDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ErrorMetadataDTO"
        },
        {
          "type": "object",
          "properties": {
            "errorYaml": {
              "type": "string"
            },
            "errorMap": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/TemplateInputsErrorDTO"
              }
            }
          }
        }
      ]
    },
    "TemplateResponse": {
      "type": "object",
      "required": ["accountId", "identifier", "name"],
      "properties": {
        "accountId": {
          "type": "string"
        },
        "orgIdentifier": {
          "type": "string"
        },
        "projectIdentifier": {
          "type": "string"
        },
        "identifier": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1024
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "yaml": {
          "type": "string"
        },
        "versionLabel": {
          "type": "string"
        },
        "templateEntityType": {
          "type": "string",
          "enum": [
            "Step",
            "Stage",
            "Pipeline",
            "CustomDeployment",
            "MonitoredService",
            "SecretManager",
            "ArtifactSource",
            "StepGroup"
          ]
        },
        "childType": {
          "type": "string"
        },
        "templateScope": {
          "type": "string",
          "enum": ["account", "org", "project", "unknown"]
        },
        "version": {
          "type": "integer",
          "format": "int64"
        },
        "gitDetails": {
          "$ref": "#/definitions/EntityGitDetails"
        },
        "entityValidityDetails": {
          "$ref": "#/definitions/EntityValidityDetails"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "storeType": {
          "type": "string",
          "enum": ["INLINE", "REMOTE"]
        },
        "connectorRef": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        },
        "cacheResponseMetadata": {
          "$ref": "#/definitions/CacheResponseMetadata"
        },
        "stableTemplate": {
          "type": "boolean"
        }
      }
    },
    "Throwable": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "message": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        },
        "localizedMessage": {
          "type": "string"
        }
      }
    },
    "ValidateTemplateInputsResponseDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ErrorMetadataDTO"
        },
        {
          "type": "object",
          "properties": {
            "validYaml": {
              "type": "boolean"
            },
            "errorNodeSummary": {
              "$ref": "#/definitions/ErrorNodeSummary"
            }
          }
        }
      ]
    },
    "YamlSchemaErrorDTO": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "messageWithFQN": {
          "type": "string"
        },
        "stageInfo": {
          "$ref": "#/definitions/NodeErrorInfo"
        },
        "stepInfo": {
          "$ref": "#/definitions/NodeErrorInfo"
        },
        "fqn": {
          "type": "string"
        },
        "hintMessage": {
          "type": "string"
        }
      }
    },
    "YamlSchemaErrorWrapperDTO": {
      "allOf": [
        {
          "$ref": "#/definitions/ErrorMetadataDTO"
        },
        {
          "type": "object",
          "properties": {
            "schemaErrors": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/YamlSchemaErrorDTO"
              }
            }
          }
        }
      ]
    },
    "AccessCheckRequest": {
      "type": "object",
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PermissionCheck"
          },
          "maxItems": 10000,
          "minItems": 0
        },
        "principal": {
          "$ref": "#/definitions/Principal"
        }
      }
    },
    "PermissionCheck": {
      "type": "object",
      "properties": {
        "resourceScope": {
          "$ref": "#/definitions/ResourceScope"
        },
        "resourceType": {
          "type": "string"
        },
        "resourceAttributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "resourceIdentifier": {
          "type": "string"
        },
        "permission": {
          "type": "string"
        }
      }
    },
    "ResponseSetString": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "Permission": {
      "type": "object",
      "required": ["action", "allowedScopeLevels", "identifier", "includeInAllRoles", "name", "resourceType", "status"],
      "properties": {
        "identifier": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": ["STAGING", "EXPERIMENTAL", "ACTIVE", "DEPRECATED", "INACTIVE"]
        },
        "includeInAllRoles": {
          "type": "boolean"
        },
        "allowedScopeLevels": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "resourceType": {
          "type": "string"
        },
        "action": {
          "type": "string"
        }
      }
    },
    "PermissionResponse": {
      "type": "object",
      "required": ["permission"],
      "properties": {
        "permission": {
          "$ref": "#/definitions/Permission"
        }
      }
    },
    "ResponseListPermissionResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PermissionResponse"
          }
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "ResourceGroup": {
      "type": "object",
      "properties": {
        "identifier": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "ResponseRoleAssignmentAggregateResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/RoleAssignmentAggregateResponse"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "Role": {
      "type": "object",
      "required": ["identifier", "name"],
      "properties": {
        "identifier": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "permissions": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "allowedScopeLevels": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "description": {
          "type": "string"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "RoleAssignment": {
      "type": "object",
      "required": ["principal", "resourceGroupIdentifier", "roleIdentifier"],
      "properties": {
        "identifier": {
          "type": "string"
        },
        "resourceGroupIdentifier": {
          "type": "string"
        },
        "roleIdentifier": {
          "type": "string"
        },
        "principal": {
          "$ref": "#/definitions/Principal"
        },
        "disabled": {
          "type": "boolean"
        },
        "managed": {
          "type": "boolean"
        },
        "internal": {
          "type": "boolean"
        }
      }
    },
    "RoleAssignmentAggregateResponse": {
      "type": "object",
      "properties": {
        "roleAssignments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleAssignment"
          }
        },
        "scope": {
          "$ref": "#/definitions/Scope"
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleResponse"
          }
        },
        "resourceGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceGroup"
          }
        }
      }
    },
    "RoleResponse": {
      "type": "object",
      "required": ["role", "scope"],
      "properties": {
        "role": {
          "$ref": "#/definitions/Role"
        },
        "scope": {
          "$ref": "#/definitions/Scope"
        },
        "harnessManaged": {
          "type": "boolean"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastModifiedAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Scope": {
      "type": "object",
      "properties": {
        "accountIdentifier": {
          "type": "string"
        },
        "orgIdentifier": {
          "type": "string"
        },
        "projectIdentifier": {
          "type": "string"
        }
      }
    },
    "AccessControlCheckError": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "code": {
          "type": "string",
          "enum": [
            "DEFAULT_ERROR_CODE",
            "INVALID_ARGUMENT",
            "INVALID_EMAIL",
            "DOMAIN_NOT_ALLOWED_TO_REGISTER",
            "COMMNITY_EDITION_NOT_FOUND",
            "DEPLOY_MODE_IS_NOT_ON_PREM",
            "USER_ALREADY_REGISTERED",
            "USER_INVITATION_DOES_NOT_EXIST",
            "USER_DOES_NOT_EXIST",
            "USER_INVITE_OPERATION_FAILED",
            "USER_DISABLED",
            "ACCOUNT_DOES_NOT_EXIST",
            "INACTIVE_ACCOUNT",
            "ACCOUNT_MIGRATED",
            "USER_DOMAIN_NOT_ALLOWED",
            "MAX_FAILED_ATTEMPT_COUNT_EXCEEDED",
            "RESOURCE_NOT_FOUND",
            "INVALID_FORMAT",
            "ROLE_DOES_NOT_EXIST",
            "EMAIL_NOT_VERIFIED",
            "EMAIL_VERIFICATION_TOKEN_NOT_FOUND",
            "INVALID_TOKEN",
            "REVOKED_TOKEN",
            "INVALID_CAPTCHA_TOKEN",
            "NOT_ACCOUNT_MGR_NOR_HAS_ALL_APP_ACCESS",
            "EXPIRED_TOKEN",
            "INVALID_AGENT_MTLS_AUTHORITY",
            "TOKEN_ALREADY_REFRESHED_ONCE",
            "ACCESS_DENIED",
            "NG_ACCESS_DENIED",
            "INVALID_CREDENTIAL",
            "INVALID_CREDENTIALS_THIRD_PARTY",
            "INVALID_KEY",
            "INVALID_CONNECTOR_TYPE",
            "INVALID_KEYPATH",
            "INVALID_VARIABLE",
            "UNKNOWN_HOST",
            "UNREACHABLE_HOST",
            "INVALID_PORT",
            "SSH_SESSION_TIMEOUT",
            "SOCKET_CONNECTION_ERROR",
            "CONNECTION_ERROR",
            "SOCKET_CONNECTION_TIMEOUT",
            "WINRM_COMMAND_EXECUTION_TIMEOUT",
            "CONNECTION_TIMEOUT",
            "SSH_CONNECTION_ERROR",
            "USER_GROUP_ERROR",
            "INVALID_EXECUTION_ID",
            "ERROR_IN_GETTING_CHANNEL_STREAMS",
            "UNEXPECTED",
            "UNKNOWN_ERROR",
            "UNKNOWN_EXECUTOR_TYPE_ERROR",
            "DUPLICATE_STATE_NAMES",
            "TRANSITION_NOT_LINKED",
            "TRANSITION_TO_INCORRECT_STATE",
            "TRANSITION_TYPE_NULL",
            "STATES_WITH_DUP_TRANSITIONS",
            "BARRIERS_NOT_RUNNING_CONCURRENTLY",
            "NON_FORK_STATES",
            "NON_REPEAT_STATES",
            "INITIAL_STATE_NOT_DEFINED",
            "FILE_INTEGRITY_CHECK_FAILED",
            "INVALID_URL",
            "FILE_DOWNLOAD_FAILED",
            "PLATFORM_SOFTWARE_DELETE_ERROR",
            "INVALID_CSV_FILE",
            "INVALID_REQUEST",
            "SCHEMA_VALIDATION_FAILED",
            "FILTER_CREATION_ERROR",
            "INVALID_YAML_ERROR",
            "PLAN_CREATION_ERROR",
            "INVALID_INFRA_STATE",
            "PIPELINE_ALREADY_TRIGGERED",
            "NON_EXISTING_PIPELINE",
            "DUPLICATE_COMMAND_NAMES",
            "INVALID_PIPELINE",
            "COMMAND_DOES_NOT_EXIST",
            "DUPLICATE_ARTIFACTSTREAM_NAMES",
            "DUPLICATE_HOST_NAMES",
            "STATE_NOT_FOR_TYPE",
            "STATE_MACHINE_ISSUE",
            "STATE_DISCONTINUE_FAILED",
            "STATE_PAUSE_FAILED",
            "PAUSE_ALL_ALREADY",
            "RESUME_ALL_ALREADY",
            "ROLLBACK_ALREADY",
            "ABORT_ALL_ALREADY",
            "EXPIRE_ALL_ALREADY",
            "RETRY_FAILED",
            "UNKNOWN_ARTIFACT_TYPE",
            "UNKNOWN_STAGE_ELEMENT_WRAPPER_TYPE",
            "INIT_TIMEOUT",
            "LICENSE_EXPIRED",
            "NOT_LICENSED",
            "REQUEST_TIMEOUT",
            "WORKFLOW_ALREADY_TRIGGERED",
            "JENKINS_ERROR",
            "INVALID_ARTIFACT_SOURCE",
            "INVALID_ARTIFACT_SERVER",
            "INVALID_CLOUD_PROVIDER",
            "UPDATE_NOT_ALLOWED",
            "DELETE_NOT_ALLOWED",
            "APPDYNAMICS_CONFIGURATION_ERROR",
            "APM_CONFIGURATION_ERROR",
            "SPLUNK_CONFIGURATION_ERROR",
            "ELK_CONFIGURATION_ERROR",
            "LOGZ_CONFIGURATION_ERROR",
            "SUMO_CONFIGURATION_ERROR",
            "INSTANA_CONFIGURATION_ERROR",
            "APPDYNAMICS_ERROR",
            "STACKDRIVER_ERROR",
            "STACKDRIVER_CONFIGURATION_ERROR",
            "NEWRELIC_CONFIGURATION_ERROR",
            "NEWRELIC_ERROR",
            "DYNA_TRACE_CONFIGURATION_ERROR",
            "DYNA_TRACE_ERROR",
            "CLOUDWATCH_ERROR",
            "CLOUDWATCH_CONFIGURATION_ERROR",
            "PROMETHEUS_CONFIGURATION_ERROR",
            "DATA_DOG_CONFIGURATION_ERROR",
            "SERVICE_GUARD_CONFIGURATION_ERROR",
            "ENCRYPTION_NOT_CONFIGURED",
            "UNAVAILABLE_DELEGATES",
            "WORKFLOW_EXECUTION_IN_PROGRESS",
            "PIPELINE_EXECUTION_IN_PROGRESS",
            "AWS_ACCESS_DENIED",
            "AWS_CLUSTER_NOT_FOUND",
            "AWS_SERVICE_NOT_FOUND",
            "IMAGE_NOT_FOUND",
            "ILLEGAL_ARGUMENT",
            "IMAGE_TAG_NOT_FOUND",
            "DELEGATE_NOT_AVAILABLE",
            "INVALID_YAML_PAYLOAD",
            "AUTHENTICATION_ERROR",
            "AUTHORIZATION_ERROR",
            "UNRECOGNIZED_YAML_FIELDS",
            "COULD_NOT_MAP_BEFORE_YAML",
            "MISSING_BEFORE_YAML",
            "MISSING_YAML",
            "NON_EMPTY_DELETIONS",
            "GENERAL_YAML_ERROR",
            "GENERAL_YAML_INFO",
            "YAML_GIT_SYNC_ERROR",
            "GIT_CONNECTION_ERROR",
            "GIT_ERROR",
            "ARTIFACT_SERVER_ERROR",
            "ENCRYPT_DECRYPT_ERROR",
            "SECRET_MANAGEMENT_ERROR",
            "SECRET_NOT_FOUND",
            "KMS_OPERATION_ERROR",
            "GCP_KMS_OPERATION_ERROR",
            "VAULT_OPERATION_ERROR",
            "AWS_SECRETS_MANAGER_OPERATION_ERROR",
            "AZURE_KEY_VAULT_OPERATION_ERROR",
            "UNSUPPORTED_OPERATION_EXCEPTION",
            "FEATURE_UNAVAILABLE",
            "GENERAL_ERROR",
            "BASELINE_CONFIGURATION_ERROR",
            "SAML_IDP_CONFIGURATION_NOT_AVAILABLE",
            "INVALID_AUTHENTICATION_MECHANISM",
            "INVALID_SAML_CONFIGURATION",
            "INVALID_OAUTH_CONFIGURATION",
            "INVALID_LDAP_CONFIGURATION",
            "USER_GROUP_SYNC_FAILURE",
            "USER_GROUP_ALREADY_EXIST",
            "INVALID_TWO_FACTOR_AUTHENTICATION_CONFIGURATION",
            "EXPLANATION",
            "HINT",
            "NOT_WHITELISTED_IP",
            "INVALID_TOTP_TOKEN",
            "EMAIL_FAILED",
            "SSL_HANDSHAKE_FAILED",
            "NO_APPS_ASSIGNED",
            "INVALID_INFRA_CONFIGURATION",
            "TEMPLATES_LINKED",
            "USER_HAS_NO_PERMISSIONS",
            "USER_NOT_AUTHORIZED",
            "USER_ALREADY_PRESENT",
            "EMAIL_ERROR",
            "INVALID_USAGE_RESTRICTION",
            "USAGE_RESTRICTION_ERROR",
            "STATE_EXECUTION_INSTANCE_NOT_FOUND",
            "DELEGATE_TASK_RETRY",
            "KUBERNETES_API_TASK_EXCEPTION",
            "KUBERNETES_TASK_EXCEPTION",
            "KUBERNETES_YAML_ERROR",
            "SAVE_FILE_INTO_GCP_STORAGE_FAILED",
            "READ_FILE_FROM_GCP_STORAGE_FAILED",
            "FILE_NOT_FOUND_ERROR",
            "USAGE_LIMITS_EXCEEDED",
            "EVENT_PUBLISH_FAILED",
            "CUSTOM_APPROVAL_ERROR",
            "JIRA_ERROR",
            "EXPRESSION_EVALUATION_FAILED",
            "KUBERNETES_VALUES_ERROR",
            "KUBERNETES_CLUSTER_ERROR",
            "INCORRECT_SIGN_IN_MECHANISM",
            "OAUTH_LOGIN_FAILED",
            "INVALID_TERRAFORM_TARGETS_REQUEST",
            "TERRAFORM_EXECUTION_ERROR",
            "FILE_READ_FAILED",
            "FILE_SIZE_EXCEEDS_LIMIT",
            "CLUSTER_NOT_FOUND",
            "MARKETPLACE_TOKEN_NOT_FOUND",
            "INVALID_MARKETPLACE_TOKEN",
            "INVALID_TICKETING_SERVER",
            "SERVICENOW_ERROR",
            "PASSWORD_EXPIRED",
            "USER_LOCKED",
            "PASSWORD_STRENGTH_CHECK_FAILED",
            "ACCOUNT_DISABLED",
            "INVALID_ACCOUNT_PERMISSION",
            "PAGERDUTY_ERROR",
            "HEALTH_ERROR",
            "SAML_TEST_SUCCESS_MECHANISM_NOT_ENABLED",
            "DOMAIN_WHITELIST_FILTER_CHECK_FAILED",
            "INVALID_DASHBOARD_UPDATE_REQUEST",
            "DUPLICATE_FIELD",
            "INVALID_AZURE_VAULT_CONFIGURATION",
            "USER_NOT_AUTHORIZED_DUE_TO_USAGE_RESTRICTIONS",
            "INVALID_ROLLBACK",
            "DATA_COLLECTION_ERROR",
            "SUMO_DATA_COLLECTION_ERROR",
            "DEPLOYMENT_GOVERNANCE_ERROR",
            "BATCH_PROCESSING_ERROR",
            "GRAPHQL_ERROR",
            "FILE_CREATE_ERROR",
            "ILLEGAL_STATE",
            "GIT_DIFF_COMMIT_NOT_IN_ORDER",
            "FAILED_TO_ACQUIRE_PERSISTENT_LOCK",
            "FAILED_TO_ACQUIRE_NON_PERSISTENT_LOCK",
            "POD_NOT_FOUND_ERROR",
            "COMMAND_EXECUTION_ERROR",
            "REGISTRY_EXCEPTION",
            "ENGINE_INTERRUPT_PROCESSING_EXCEPTION",
            "ENGINE_IO_EXCEPTION",
            "ENGINE_OUTCOME_EXCEPTION",
            "ENGINE_SWEEPING_OUTPUT_EXCEPTION",
            "CACHE_NOT_FOUND_EXCEPTION",
            "ENGINE_ENTITY_UPDATE_EXCEPTION",
            "SHELL_EXECUTION_EXCEPTION",
            "TEMPLATE_NOT_FOUND",
            "AZURE_SERVICE_EXCEPTION",
            "AZURE_CLIENT_EXCEPTION",
            "GIT_UNSEEN_REMOTE_HEAD_COMMIT",
            "TIMEOUT_ENGINE_EXCEPTION",
            "NO_AVAILABLE_DELEGATES",
            "NO_GLOBAL_DELEGATE_ACCOUNT",
            "NO_INSTALLED_DELEGATES",
            "DUPLICATE_DELEGATE_EXCEPTION",
            "GCP_MARKETPLACE_EXCEPTION",
            "MISSING_DEFAULT_GOOGLE_CREDENTIALS",
            "INCORRECT_DEFAULT_GOOGLE_CREDENTIALS",
            "OPTIMISTIC_LOCKING_EXCEPTION",
            "NG_PIPELINE_EXECUTION_EXCEPTION",
            "NG_PIPELINE_CREATE_EXCEPTION",
            "RESOURCE_NOT_FOUND_EXCEPTION",
            "PMS_INITIALIZE_SDK_EXCEPTION",
            "UNEXPECTED_SNIPPET_EXCEPTION",
            "UNEXPECTED_SCHEMA_EXCEPTION",
            "CONNECTOR_VALIDATION_EXCEPTION",
            "TIMESCALE_NOT_AVAILABLE",
            "MIGRATION_EXCEPTION",
            "REQUEST_PROCESSING_INTERRUPTED",
            "SECRET_MANAGER_ID_NOT_FOUND",
            "GCP_SECRET_MANAGER_OPERATION_ERROR",
            "GCP_SECRET_OPERATION_ERROR",
            "GIT_OPERATION_ERROR",
            "TASK_FAILURE_ERROR",
            "INSTANCE_STATS_PROCESS_ERROR",
            "INSTANCE_STATS_MIGRATION_ERROR",
            "DEPLOYMENT_MIGRATION_ERROR",
            "CG_LICENSE_USAGE_ERROR",
            "INSTANCE_STATS_AGGREGATION_ERROR",
            "UNRESOLVED_EXPRESSIONS_ERROR",
            "KRYO_HANDLER_NOT_FOUND_ERROR",
            "DELEGATE_ERROR_HANDLER_EXCEPTION",
            "DELEGATE_INSTALLATION_COMMAND_NOT_SUPPORTED_EXCEPTION",
            "UNEXPECTED_TYPE_ERROR",
            "EXCEPTION_HANDLER_NOT_FOUND",
            "CONNECTOR_NOT_FOUND_EXCEPTION",
            "GCP_SERVER_ERROR",
            "HTTP_RESPONSE_EXCEPTION",
            "SCM_NOT_FOUND_ERROR",
            "SCM_CONFLICT_ERROR",
            "SCM_CONFLICT_ERROR_V2",
            "SCM_UNPROCESSABLE_ENTITY",
            "PROCESS_EXECUTION_EXCEPTION",
            "SCM_UNAUTHORIZED",
            "SCM_BAD_REQUEST",
            "SCM_INTERNAL_SERVER_ERROR",
            "DATA",
            "CONTEXT",
            "PR_CREATION_ERROR",
            "URL_NOT_REACHABLE",
            "URL_NOT_PROVIDED",
            "ENGINE_EXPRESSION_EVALUATION_ERROR",
            "ENGINE_FUNCTOR_ERROR",
            "JIRA_CLIENT_ERROR",
            "SCM_NOT_MODIFIED",
            "APPROVAL_STEP_NG_ERROR",
            "BUCKET_SERVER_ERROR",
            "GIT_SYNC_ERROR",
            "TEMPLATE_EXCEPTION",
            "TEMPLATE_ALREADY_EXISTS_EXCEPTION",
            "ENTITY_REFERENCE_EXCEPTION",
            "ACTIVE_SERVICE_INSTANCES_PRESENT_EXCEPTION",
            "INVALID_INPUT_SET",
            "INVALID_OVERLAY_INPUT_SET",
            "RESOURCE_ALREADY_EXISTS",
            "INVALID_JSON_PAYLOAD",
            "POLICY_EVALUATION_FAILURE",
            "POLICY_SET_ERROR",
            "INVALID_ARTIFACTORY_REGISTRY_REQUEST",
            "INVALID_NEXUS_REGISTRY_REQUEST",
            "ENTITY_NOT_FOUND",
            "INVALID_AZURE_CONTAINER_REGISTRY_REQUEST",
            "AZURE_AUTHENTICATION_ERROR",
            "AZURE_CONFIG_ERROR",
            "DATA_PROCESSING_ERROR",
            "INVALID_AZURE_AKS_REQUEST",
            "AWS_IAM_ERROR",
            "AWS_CF_ERROR",
            "AWS_INSTANCE_ERROR",
            "AWS_VPC_ERROR",
            "AWS_TAG_ERROR",
            "AWS_ASG_ERROR",
            "AWS_LOAD_BALANCER_ERROR",
            "SCM_INTERNAL_SERVER_ERROR_V2",
            "SCM_UNAUTHORIZED_ERROR_V2",
            "TOO_MANY_REQUESTS",
            "INVALID_IDENTIFIER_REF",
            "SPOTINST_NULL_ERROR",
            "SCM_UNEXPECTED_ERROR",
            "DUPLICATE_FILE_IMPORT",
            "AZURE_APP_SERVICES_TASK_EXCEPTION",
            "AZURE_ARM_TASK_EXCEPTION",
            "AZURE_BP_TASK_EXCEPTION",
            "MEDIA_NOT_SUPPORTED",
            "AWS_ECS_ERROR",
            "AWS_APPLICATION_AUTO_SCALING",
            "AWS_ECS_SERVICE_NOT_ACTIVE",
            "AWS_ECS_CLIENT_ERROR",
            "AWS_STS_ERROR",
            "FREEZE_EXCEPTION",
            "DELEGATE_TASK_EXPIRED",
            "DELEGATE_TASK_VALIDATION_FAILED",
            "MONGO_EXECUTION_TIMEOUT_EXCEPTION",
            "DELEGATE_NOT_REGISTERED",
            "TERRAFORM_VAULT_SECRET_CLEANUP_FAILURE",
            "APPROVAL_REJECTION",
            "TERRAGRUNT_EXECUTION_ERROR",
            "ADFS_ERROR",
            "TERRAFORM_CLOUD_ERROR",
            "CLUSTER_CREDENTIALS_NOT_FOUND",
            "SCM_API_ERROR",
            "INTERNAL_SERVER_ERROR",
            "SCM_FORBIDDEN",
            "AWS_EKS_ERROR",
            "OPA_POLICY_EVALUATION_ERROR",
            "USER_MARKED_FAILURE",
            "SSH_RETRY"
          ]
        },
        "message": {
          "type": "string"
        },
        "correlationId": {
          "type": "string"
        },
        "detailedMessage": {
          "type": "string"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        },
        "metadata": {
          "$ref": "#/definitions/ErrorMetadataDTO"
        },
        "failedPermissionChecks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PermissionCheck"
          }
        }
      }
    },
    "RoleAssignmentFilter": {
      "type": "object",
      "properties": {
        "resourceGroupFilter": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "roleFilter": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "principalTypeFilter": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": ["USER", "USER_GROUP", "SERVICE", "API_KEY", "SERVICE_ACCOUNT"]
          }
        },
        "principalScopeLevelFilter": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "principalFilter": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/Principal"
          }
        },
        "harnessManagedFilter": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "boolean"
          }
        },
        "disabledFilter": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "boolean"
          }
        }
      }
    },
    "AttributeFilter": {
      "type": "object",
      "properties": {
        "attributeName": {
          "type": "string"
        },
        "attributeValues": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Page": {
      "type": "object",
      "properties": {
        "totalPages": {
          "type": "integer",
          "format": "int64"
        },
        "totalItems": {
          "type": "integer",
          "format": "int64"
        },
        "pageItemCount": {
          "type": "integer",
          "format": "int64"
        },
        "pageSize": {
          "type": "integer",
          "format": "int64"
        },
        "content": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "pageIndex": {
          "type": "integer",
          "format": "int64"
        },
        "empty": {
          "type": "boolean"
        },
        "pageToken": {
          "type": "string"
        }
      }
    },
    "PageRoleAssignmentAggregate": {
      "type": "object",
      "properties": {
        "totalPages": {
          "type": "integer",
          "format": "int64"
        },
        "totalItems": {
          "type": "integer",
          "format": "int64"
        },
        "pageItemCount": {
          "type": "integer",
          "format": "int64"
        },
        "pageSize": {
          "type": "integer",
          "format": "int64"
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleAssignmentAggregate"
          }
        },
        "pageIndex": {
          "type": "integer",
          "format": "int64"
        },
        "empty": {
          "type": "boolean"
        },
        "pageToken": {
          "type": "string"
        }
      }
    },
    "PrincipalV2": {
      "type": "object",
      "required": ["identifier", "type"],
      "properties": {
        "scopeLevel": {
          "type": "string"
        },
        "identifier": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": ["USER", "USER_GROUP", "SERVICE", "API_KEY", "SERVICE_ACCOUNT"]
        }
      }
    },
    "ResourceFilter": {
      "type": "object",
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceSelectorV2"
          }
        },
        "includeAllResources": {
          "type": "boolean"
        }
      }
    },
    "ResourceGroupV2": {
      "type": "object",
      "required": ["accountIdentifier", "identifier", "name"],
      "properties": {
        "accountIdentifier": {
          "type": "string"
        },
        "orgIdentifier": {
          "type": "string"
        },
        "projectIdentifier": {
          "type": "string"
        },
        "identifier": {
          "type": "string",
          "minLength": 0,
          "maxLength": 128
        },
        "name": {
          "type": "string",
          "minLength": 0,
          "maxLength": 128
        },
        "color": {
          "type": "string"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1024
        },
        "allowedScopeLevels": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "includedScopes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScopeSelector"
          }
        },
        "resourceFilter": {
          "$ref": "#/definitions/ResourceFilter"
        }
      }
    },
    "ResourceSelectorV2": {
      "type": "object",
      "required": ["resourceType"],
      "properties": {
        "resourceType": {
          "type": "string"
        },
        "identifiers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "attributeFilter": {
          "$ref": "#/definitions/AttributeFilter"
        }
      }
    },
    "ResponsePageRoleAssignmentAggregate": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/PageRoleAssignmentAggregate"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "RoleAssignmentAggregate": {
      "type": "object",
      "required": ["principal"],
      "properties": {
        "identifier": {
          "type": "string"
        },
        "principal": {
          "$ref": "#/definitions/PrincipalV2"
        },
        "disabled": {
          "type": "boolean"
        },
        "role": {
          "$ref": "#/definitions/RoleResponse"
        },
        "resourceGroup": {
          "$ref": "#/definitions/ResourceGroupV2"
        },
        "scope": {
          "$ref": "#/definitions/ScopeResponse"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastModifiedAt": {
          "type": "integer",
          "format": "int64"
        },
        "harnessManaged": {
          "type": "boolean"
        }
      }
    },
    "ScopeResponse": {
      "type": "object",
      "properties": {
        "accountIdentifier": {
          "type": "string"
        },
        "accountName": {
          "type": "string"
        },
        "orgIdentifier": {
          "type": "string"
        },
        "orgName": {
          "type": "string"
        },
        "projectIdentifier": {
          "type": "string"
        },
        "projectName": {
          "type": "string"
        }
      }
    },
    "ScopeSelector": {
      "type": "object",
      "required": ["filter"],
      "properties": {
        "filter": {
          "type": "string",
          "enum": ["EXCLUDING_CHILD_SCOPES", "INCLUDING_CHILD_SCOPES"]
        },
        "accountIdentifier": {
          "type": "string"
        },
        "orgIdentifier": {
          "type": "string"
        },
        "projectIdentifier": {
          "type": "string"
        }
      }
    },
    "RoleAssignmentFilterV2": {
      "type": "object",
      "properties": {
        "resourceGroupFilter": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "roleFilter": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "scopeFilters": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/ScopeSelector"
          }
        },
        "principalFilter": {
          "$ref": "#/definitions/Principal"
        },
        "harnessManagedFilter": {
          "type": "boolean"
        },
        "disabledFilter": {
          "type": "boolean"
        },
        "principalTypeFilter": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": ["USER", "USER_GROUP", "SERVICE", "API_KEY", "SERVICE_ACCOUNT"]
          }
        }
      }
    },
    "ResponseRoleAssignmentDeleteResponseDTO": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/RoleAssignmentDeleteResponseDTO"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "RoleAssignmentDeleteResponseDTO": {
      "type": "object",
      "properties": {
        "successfullyDeleted": {
          "type": "integer",
          "format": "int32"
        },
        "failedToDelete": {
          "type": "integer",
          "format": "int32"
        },
        "roleAssignmentErrorResponseDTOList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleAssignmentErrorResponseDTO"
          }
        }
      }
    },
    "RoleAssignmentErrorResponseDTO": {
      "type": "object",
      "properties": {
        "roleAssignmentId": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "PageRoleAssignmentResponse": {
      "type": "object",
      "properties": {
        "totalPages": {
          "type": "integer",
          "format": "int64"
        },
        "totalItems": {
          "type": "integer",
          "format": "int64"
        },
        "pageItemCount": {
          "type": "integer",
          "format": "int64"
        },
        "pageSize": {
          "type": "integer",
          "format": "int64"
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleAssignmentResponse"
          }
        },
        "pageIndex": {
          "type": "integer",
          "format": "int64"
        },
        "empty": {
          "type": "boolean"
        },
        "pageToken": {
          "type": "string"
        }
      }
    },
    "ResponsePageRoleAssignmentResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/PageRoleAssignmentResponse"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "RoleAssignmentResponse": {
      "type": "object",
      "required": ["roleAssignment", "scope"],
      "properties": {
        "roleAssignment": {
          "$ref": "#/definitions/RoleAssignment"
        },
        "scope": {
          "$ref": "#/definitions/Scope"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastModifiedAt": {
          "type": "integer",
          "format": "int64"
        },
        "harnessManaged": {
          "type": "boolean"
        }
      }
    },
    "ResponseRoleAssignmentResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/RoleAssignmentResponse"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "ResponseRoleAssignmentValidationResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/RoleAssignmentValidationResponse"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "RoleAssignmentValidationResponse": {
      "type": "object",
      "properties": {
        "principalValidationResult": {
          "$ref": "#/definitions/ValidationResult"
        },
        "roleValidationResult": {
          "$ref": "#/definitions/ValidationResult"
        },
        "resourceGroupValidationResult": {
          "$ref": "#/definitions/ValidationResult"
        }
      }
    },
    "ValidationResult": {
      "type": "object",
      "properties": {
        "errorMessage": {
          "type": "string"
        },
        "valid": {
          "type": "boolean"
        }
      }
    },
    "RoleAssignmentValidationRequest": {
      "type": "object",
      "required": ["roleAssignment"],
      "properties": {
        "roleAssignment": {
          "$ref": "#/definitions/RoleAssignment"
        },
        "validatePrincipal": {
          "type": "boolean"
        },
        "validateRole": {
          "type": "boolean"
        },
        "validateResourceGroup": {
          "type": "boolean"
        }
      }
    },
    "ResponseListRoleAssignmentResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleAssignmentResponse"
          }
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "RoleAssignmentCreateRequest": {
      "type": "object",
      "properties": {
        "roleAssignments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleAssignment"
          }
        }
      }
    },
    "PageRoleResponse": {
      "type": "object",
      "properties": {
        "totalPages": {
          "type": "integer",
          "format": "int64"
        },
        "totalItems": {
          "type": "integer",
          "format": "int64"
        },
        "pageItemCount": {
          "type": "integer",
          "format": "int64"
        },
        "pageSize": {
          "type": "integer",
          "format": "int64"
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleResponse"
          }
        },
        "pageIndex": {
          "type": "integer",
          "format": "int64"
        },
        "empty": {
          "type": "boolean"
        },
        "pageToken": {
          "type": "string"
        }
      }
    },
    "ResponsePageRoleResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/PageRoleResponse"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "ResponseRoleResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/RoleResponse"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "RestResponse": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "object"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseString": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "string"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "AssessmentSummaryResponse": {
      "type": "object",
      "properties": {
        "assessmentId": {
          "type": "string"
        },
        "assessmentName": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": ["DRAFT", "ACTIVE", "DEPRECATED"]
        },
        "numberOfResponses": {
          "type": "integer",
          "format": "int64"
        },
        "majorVersion": {
          "type": "integer",
          "format": "int64"
        },
        "minorVersion": {
          "type": "integer",
          "format": "int64"
        },
        "createdOn": {
          "type": "integer",
          "format": "int64"
        },
        "updatedOn": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "AssessmentError": {
      "type": "object",
      "properties": {
        "entityType": {
          "type": "string",
          "enum": ["ASSESSMENT", "QUESTION", "OPTION", "SECTION", "BENCHMARK", "RECOMMENDATION", "INVITE"]
        },
        "entityId": {
          "type": "string"
        },
        "errorMessages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AssessmentUploadResponse": {
      "type": "object",
      "required": ["assessmentId", "assessmentName", "expectedCompletionDuration", "type"],
      "properties": {
        "assessmentId": {
          "type": "string"
        },
        "assessmentName": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": ["ASSESSMENT", "QUESTION", "OPTION", "SECTION", "BENCHMARK", "RECOMMENDATION", "INVITE"]
        },
        "questions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UploadedQuestion"
          },
          "maxItems": 100,
          "minItems": 1
        },
        "expectedCompletionDuration": {
          "type": "integer",
          "format": "int64"
        },
        "majorVersion": {
          "type": "integer",
          "format": "int64"
        },
        "minorVersion": {
          "type": "integer",
          "format": "int64"
        },
        "baseScore": {
          "type": "integer",
          "format": "int64"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssessmentError"
          }
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "createdBy": {
          "type": "string"
        },
        "isPublished": {
          "type": "boolean"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "UploadedOption": {
      "type": "object",
      "required": ["optionId", "optionText"],
      "properties": {
        "optionId": {
          "type": "string"
        },
        "optionText": {
          "type": "string"
        },
        "optionPoints": {
          "type": "integer",
          "format": "int64",
          "minimum": 0,
          "maximum": 10
        }
      }
    },
    "UploadedQuestion": {
      "type": "object",
      "required": ["possibleResponses", "questionId", "questionText", "questionType"],
      "properties": {
        "questionId": {
          "type": "string"
        },
        "questionNumber": {
          "type": "integer",
          "format": "int64",
          "minimum": 1,
          "maximum": 100
        },
        "questionType": {
          "type": "string",
          "enum": ["RATING", "LIKERT", "CHECKBOX", "RADIO_BUTTON", "YES_NO"]
        },
        "sectionId": {
          "type": "string"
        },
        "sectionName": {
          "type": "string"
        },
        "questionText": {
          "type": "string"
        },
        "possibleResponses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UploadedOption"
          },
          "maxItems": 20,
          "minItems": 2
        }
      }
    },
    "AssessmentUploadRequest": {
      "type": "object",
      "required": ["assessmentId", "assessmentName", "expectedCompletionDuration", "type"],
      "properties": {
        "assessmentId": {
          "type": "string"
        },
        "assessmentName": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": ["ASSESSMENT", "QUESTION", "OPTION", "SECTION", "BENCHMARK", "RECOMMENDATION", "INVITE"]
        },
        "questions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UploadedQuestion"
          },
          "maxItems": 100,
          "minItems": 1
        },
        "expectedCompletionDuration": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "AssessmentResultsResponse": {
      "type": "object",
      "properties": {
        "assessmentId": {
          "type": "string"
        },
        "assessmentName": {
          "type": "string"
        },
        "majorVersion": {
          "type": "integer",
          "format": "int64"
        },
        "minorVersion": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "type": "string",
          "enum": ["NOT_STARTED", "ONGOING", "COMPLETED"]
        },
        "responses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserResponsesResponse"
          }
        },
        "userScores": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Score"
          }
        },
        "organizationScores": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Score"
          }
        },
        "benchmarks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BenchmarkDTO"
          }
        },
        "scoreOverview": {
          "$ref": "#/definitions/ScoreOverviewDTO"
        },
        "resultLink": {
          "type": "string"
        }
      }
    },
    "BenchmarkDTO": {
      "type": "object",
      "required": ["benchmarkId", "benchmarkName"],
      "properties": {
        "benchmarkId": {
          "type": "string"
        },
        "benchmarkName": {
          "type": "string"
        },
        "isDefault": {
          "type": "boolean"
        },
        "scores": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScoreDTO"
          },
          "maxItems": 200,
          "minItems": 1
        }
      }
    },
    "OptionResponseWithSelection": {
      "type": "object",
      "properties": {
        "optionId": {
          "type": "string"
        },
        "optionText": {
          "type": "string"
        },
        "selected": {
          "type": "boolean"
        }
      }
    },
    "Score": {
      "type": "object",
      "properties": {
        "scoreType": {
          "type": "string",
          "enum": ["QUESTION_LEVEL", "SECTION_LEVEL", "ASSESSMENT_LEVEL"]
        },
        "entityId": {
          "type": "string"
        },
        "score": {
          "type": "number",
          "format": "double"
        },
        "maxScore": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ScoreDTO": {
      "type": "object",
      "required": ["entityId", "score", "scoreType"],
      "properties": {
        "scoreType": {
          "type": "string",
          "enum": ["QUESTION_LEVEL", "SECTION_LEVEL", "ASSESSMENT_LEVEL"]
        },
        "entityId": {
          "type": "string"
        },
        "score": {
          "type": "number",
          "format": "double",
          "minimum": 0.0,
          "exclusiveMinimum": false
        },
        "maxScore": {
          "type": "integer",
          "format": "int64",
          "minimum": 0
        }
      }
    },
    "ScoreOverviewDTO": {
      "type": "object",
      "properties": {
        "selfScore": {
          "$ref": "#/definitions/ScoreDTO"
        },
        "organizationScore": {
          "$ref": "#/definitions/ScoreDTO"
        },
        "benchmarkScore": {
          "$ref": "#/definitions/ScoreDTO"
        },
        "numberOfResponses": {
          "type": "integer",
          "format": "int64"
        },
        "percentageDiffOrg": {
          "type": "integer",
          "format": "int32"
        },
        "percentageDiffBenchmark": {
          "type": "integer",
          "format": "int32"
        },
        "benchmarkId": {
          "type": "string"
        },
        "benchmarkName": {
          "type": "string"
        },
        "best": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserResponsesResponse"
          }
        },
        "worst": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserResponsesResponse"
          }
        }
      }
    },
    "UserResponsesResponse": {
      "type": "object",
      "properties": {
        "questionId": {
          "type": "string"
        },
        "questionText": {
          "type": "string"
        },
        "questionType": {
          "type": "string",
          "enum": ["RATING", "LIKERT", "CHECKBOX", "RADIO_BUTTON", "YES_NO"]
        },
        "sectionId": {
          "type": "string"
        },
        "sectionText": {
          "type": "string"
        },
        "responses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OptionResponseWithSelection"
          }
        },
        "maxScore": {
          "type": "integer",
          "format": "int64"
        },
        "userScore": {
          "type": "number",
          "format": "double"
        },
        "organizationScore": {
          "type": "number",
          "format": "double"
        },
        "benchmarkScore": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "UserResponseRequestItem": {
      "type": "object",
      "properties": {
        "questionId": {
          "type": "string"
        },
        "responseIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "UserResponsesRequest": {
      "type": "object",
      "required": ["responses"],
      "properties": {
        "responses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserResponseRequestItem"
          },
          "maxItems": 20,
          "minItems": 1
        },
        "role": {
          "type": "string"
        }
      }
    },
    "OptionResponse": {
      "type": "object",
      "properties": {
        "optionId": {
          "type": "string"
        },
        "optionText": {
          "type": "string"
        }
      }
    },
    "QuestionResponse": {
      "type": "object",
      "properties": {
        "questionId": {
          "type": "string"
        },
        "questionNumber": {
          "type": "integer",
          "format": "int64"
        },
        "questionType": {
          "type": "string",
          "enum": ["RATING", "LIKERT", "CHECKBOX", "RADIO_BUTTON", "YES_NO"]
        },
        "sectionId": {
          "type": "string"
        },
        "sectionName": {
          "type": "string"
        },
        "questionText": {
          "type": "string"
        },
        "possibleResponses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OptionResponse"
          }
        }
      }
    },
    "UserAssessmentDTO": {
      "type": "object",
      "properties": {
        "assessmentId": {
          "type": "string"
        },
        "assessmentName": {
          "type": "string"
        },
        "majorVersion": {
          "type": "integer",
          "format": "int64"
        },
        "minorVersion": {
          "type": "integer",
          "format": "int64"
        },
        "questions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuestionResponse"
          }
        },
        "expectedCompletionDuration": {
          "type": "integer",
          "format": "int64"
        },
        "baseScore": {
          "type": "integer",
          "format": "int64"
        },
        "userResponse": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserResponseRequestItem"
          }
        },
        "status": {
          "type": "string",
          "enum": ["NOT_STARTED", "ONGOING", "COMPLETED"]
        },
        "resultLink": {
          "type": "string"
        }
      }
    },
    "BenchmarkUploadResponse": {
      "type": "object",
      "required": ["assessmentId", "benchmarks", "majorVersion", "type"],
      "properties": {
        "assessmentId": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": ["ASSESSMENT", "QUESTION", "OPTION", "SECTION", "BENCHMARK", "RECOMMENDATION", "INVITE"]
        },
        "majorVersion": {
          "type": "integer",
          "format": "int64"
        },
        "benchmarks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BenchmarkDTO"
          },
          "maxItems": 50,
          "minItems": 1
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssessmentError"
          }
        }
      }
    },
    "BenchmarksUploadRequest": {
      "type": "object",
      "required": ["assessmentId", "benchmarks", "majorVersion", "type"],
      "properties": {
        "assessmentId": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": ["ASSESSMENT", "QUESTION", "OPTION", "SECTION", "BENCHMARK", "RECOMMENDATION", "INVITE"]
        },
        "majorVersion": {
          "type": "integer",
          "format": "int64"
        },
        "benchmarks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BenchmarkDTO"
          },
          "maxItems": 50,
          "minItems": 1
        }
      }
    },
    "AssessmentInviteDTO": {
      "type": "object",
      "required": ["assessmentId", "emails"],
      "properties": {
        "emails": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "maxItems": 3,
          "minItems": 1
        },
        "assessmentId": {
          "type": "string"
        },
        "invitedBy": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssessmentError"
          }
        }
      }
    },
    "ResponseSettingValueResponseDTO": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/SettingValueResponseDTO"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "SettingValueResponseDTO": {
      "type": "object",
      "required": ["value", "valueType"],
      "properties": {
        "valueType": {
          "type": "string",
          "enum": ["String", "Boolean", "Number"]
        },
        "value": {
          "type": "string"
        }
      }
    },
    "ResponseListSettingUpdateResponseDTO": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SettingUpdateResponseDTO"
          }
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "SettingDTO": {
      "type": "object",
      "required": [
        "allowOverrides",
        "allowedScopes",
        "category",
        "groupIdentifier",
        "identifier",
        "isSettingEditable",
        "name",
        "valueType"
      ],
      "properties": {
        "identifier": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "orgIdentifier": {
          "type": "string"
        },
        "projectIdentifier": {
          "type": "string"
        },
        "category": {
          "type": "string",
          "enum": [
            "CD",
            "CI",
            "CE",
            "CV",
            "CF",
            "STO",
            "CORE",
            "PMS",
            "TEMPLATESERVICE",
            "GOVERNANCE",
            "CHAOS",
            "SCIM",
            "GIT_EXPERIENCE",
            "CONNECTORS"
          ]
        },
        "groupIdentifier": {
          "type": "string"
        },
        "valueType": {
          "type": "string",
          "enum": ["String", "Boolean", "Number"]
        },
        "allowedValues": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "allowOverrides": {
          "type": "boolean"
        },
        "value": {
          "type": "string"
        },
        "defaultValue": {
          "type": "string"
        },
        "settingSource": {
          "type": "string",
          "enum": ["ACCOUNT", "ORG", "PROJECT", "DEFAULT"]
        },
        "isSettingEditable": {
          "type": "boolean"
        },
        "allowedScopes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "enum": ["ACCOUNT", "ORGANIZATION", "PROJECT"]
          }
        }
      }
    },
    "SettingUpdateResponseDTO": {
      "type": "object",
      "required": ["setting"],
      "properties": {
        "identifier": {
          "type": "string"
        },
        "setting": {
          "$ref": "#/definitions/SettingDTO"
        },
        "lastModifiedAt": {
          "type": "integer",
          "format": "int64"
        },
        "updateStatus": {
          "type": "boolean"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "SettingRequestDTO": {
      "type": "object",
      "required": ["allowOverrides", "updateType"],
      "properties": {
        "identifier": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "allowOverrides": {
          "type": "boolean"
        },
        "updateType": {
          "type": "string",
          "enum": ["UPDATE", "RESTORE"]
        }
      }
    },
    "ResponseListSettingResponseDTO": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SettingResponseDTO"
          }
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "SettingResponseDTO": {
      "type": "object",
      "required": ["setting"],
      "properties": {
        "setting": {
          "$ref": "#/definitions/SettingDTO"
        },
        "lastModifiedAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    }
  }
}
