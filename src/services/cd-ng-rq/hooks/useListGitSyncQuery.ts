/*
 * Copyright 2023 Harness Inc. All rights reserved.
 * Use of this source code is governed by the PolyForm Shield 1.0.0 license
 * that can be found in the licenses directory at the root of this repository, also available at
 * https://polyformproject.org/wp-content/uploads/2020/06/PolyForm-Shield-1.0.0.txt.
 */
/* eslint-disable */
// This code is autogenerated using @harnessio/oats-cli.
// Please do not modify this code directly.
import { useQuery, UseQueryOptions } from '@tanstack/react-query'

import type { GitSyncConfig } from '../schemas/GitSyncConfig'
import { fetcher, FetcherOptions } from 'services/fetcher'

export interface ListGitSyncQueryQueryParams {
  projectIdentifier?: string
  orgIdentifier?: string
  accountIdentifier?: string
}

export type ListGitSyncOkResponse = GitSyncConfig[]

export type ListGitSyncErrorResponse = unknown

export interface ListGitSyncProps extends Omit<FetcherOptions<ListGitSyncQueryQueryParams, unknown>, 'url'> {
  queryParams: ListGitSyncQueryQueryParams
}

export function listGitSync(props: ListGitSyncProps): Promise<ListGitSyncOkResponse> {
  const { ...rest } = props

  return fetcher<ListGitSyncOkResponse, ListGitSyncQueryQueryParams, unknown>({
    url: `ng/api/git-sync`,
    method: 'GET',
    ...rest
  })
}

/**
 *
 */
export function useListGitSyncQuery(
  props: ListGitSyncProps,
  options?: Omit<UseQueryOptions<ListGitSyncOkResponse, ListGitSyncErrorResponse>, 'queryKey' | 'queryFn'>
) {
  return useQuery<ListGitSyncOkResponse, ListGitSyncErrorResponse>(
    ['listGitSync', props.queryParams],
    ({ signal }) => listGitSync({ ...props, signal }),
    options
  )
}
