/*
 * Copyright 2023 Harness Inc. All rights reserved.
 * Use of this source code is governed by the PolyForm Shield 1.0.0 license
 * that can be found in the licenses directory at the root of this repository, also available at
 * https://polyformproject.org/wp-content/uploads/2020/06/PolyForm-Shield-1.0.0.txt.
 */
/* eslint-disable */
// This code is autogenerated using @harnessio/oats-cli.
// Please do not modify this code directly.
import { useQuery, UseQueryOptions } from '@tanstack/react-query'

import type { ResponseListSourceCodeManagerDto } from '../schemas/ResponseListSourceCodeManagerDto'
import type { Failure } from '../schemas/Failure'
import type { Error } from '../schemas/Error'
import { fetcher, FetcherOptions } from 'services/fetcher'

export interface GetSourceCodeManagersQueryQueryParams {
  accountIdentifier: string
}

export type GetSourceCodeManagersOkResponse = ResponseListSourceCodeManagerDto

export type GetSourceCodeManagersErrorResponse = Failure | Error

export interface GetSourceCodeManagersProps
  extends Omit<FetcherOptions<GetSourceCodeManagersQueryQueryParams, unknown>, 'url'> {
  queryParams: GetSourceCodeManagersQueryQueryParams
}

export function getSourceCodeManagers(props: GetSourceCodeManagersProps): Promise<GetSourceCodeManagersOkResponse> {
  const { ...rest } = props

  return fetcher<GetSourceCodeManagersOkResponse, GetSourceCodeManagersQueryQueryParams, unknown>({
    url: `ng/api/source-code-manager`,
    method: 'GET',
    ...rest
  })
}

/**
 *
 */
export function useGetSourceCodeManagersQuery(
  props: GetSourceCodeManagersProps,
  options?: Omit<
    UseQueryOptions<GetSourceCodeManagersOkResponse, GetSourceCodeManagersErrorResponse>,
    'queryKey' | 'queryFn'
  >
) {
  return useQuery<GetSourceCodeManagersOkResponse, GetSourceCodeManagersErrorResponse>(
    ['getSourceCodeManagers', props.queryParams],
    ({ signal }) => getSourceCodeManagers({ ...props, signal }),
    options
  )
}
